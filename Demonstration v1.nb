(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    312754,       6000]
NotebookOptionsPosition[    308689,       5877]
NotebookOutlinePosition[    310305,       5927]
CellTagsIndexPosition[    309969,       5915]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Modeling Disease Dispersion Across Two Communities\
\>", "DemoTitle",
 CellChangeTimes->{{3.551001555077956*^9, 3.551001575042984*^9}, {
  3.551040840117101*^9, 3.5510408413961744`*^9}}],

Cell["", "InitializationSection"],

Cell[CellGroupData[{

Cell["", "ManipulateSection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Refresh", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{"moving", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"w", "=", "1"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Pops", "=", 
          RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"PopA", " ", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"ToString", "[", "k", "]"}], "<>", "\"\<A\>\""}], ",", 
              RowBox[{"RandomReal", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1.8"}], "}"}], "]"}], ",", 
              RowBox[{"RandomReal", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"2", "Pi"}]}], "}"}], "]"}], ",", "\"\<u\>\"", ",", 
              "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "1", ",", "TotalPop"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"PopB", " ", "=", " ", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"ToString", "[", "k", "]"}], "<>", "\"\<B\>\""}], ",", 
              RowBox[{"RandomReal", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1.8"}], "}"}], "]"}], ",", 
              RowBox[{"RandomReal", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"2", "Pi"}]}], "}"}], "]"}], ",", "\"\<u\>\"", ",", 
              "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "1", ",", "TotalPop"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", "=", "1"}], ",", 
           RowBox[{"j", "<", 
            RowBox[{"InfectedA", "+", "1"}]}], ",", 
           RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{
             "PopA", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}], 
             "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], "=", 
            "\"\<i\>\""}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", "=", "1"}], ",", 
           RowBox[{"j", "<", 
            RowBox[{"InfectedB", "+", "1"}]}], ",", 
           RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{
             "PopB", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}], 
             "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], "=", 
            "\"\<i\>\""}]}], "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"k", "=", "1"}], ",", 
           RowBox[{"k", "<", 
            RowBox[{"Days", "+", "1"}]}], ",", 
           RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Pops", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"Pops", ",", "\[IndentingNewLine]", 
               RowBox[{"Grid", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"\"\<\>\"", ",", "\[IndentingNewLine]", 
                    RowBox[{"Image", "[", "\[IndentingNewLine]", 
                    RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
                    RowBox[{"Join", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"Circle", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", "2"}], "]"}], "}"}], 
                    "}"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "\"\<u\>\""}], "||", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "\"\<r\>\""}]}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"Darker", "[", 
                    RowBox[{"Green", ",", ".5"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "\"\<i\>\""}], ",",
                     "\[IndentingNewLine]", "Red", ",", "Blue"}], "]"}]}], 
                    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Disk", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"PopA", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "*", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "]"}]}]}], "}"}], ",", ".1"}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", 
                    RowBox[{"Length", "[", "PopA", "]"}]}], "}"}]}], 
                    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
                    "]"}], "\[IndentingNewLine]", "]"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Column", "[", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<City A\>\"", ",", "\"\<Title\>\"", ",", "20"}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"\"\<Latent       \>\"", "<>", "\"\<=\>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Cases", "[", 
                    RowBox[{"PopA", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "_", ",", "_", ",", "_", ",", "\"\<n\>\"", ",", "_"}], 
                    "}"}]}], "]"}], "]"}], "]"}]}], ",", "Blue", ",", 
                    "Bold"}], "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"\"\<Contagious   \>\"", "<>", "\"\<=\>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Cases", "[", 
                    RowBox[{"PopA", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "_", ",", "_", ",", "_", ",", "\"\<i\>\"", ",", "_"}], 
                    "}"}]}], "]"}], "]"}], "]"}]}], ",", "Red", ",", "Bold"}],
                     "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"\"\<Susceptible  \>\"", "<>", "\"\<=\>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Cases", "[", 
                    RowBox[{"PopA", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "_", ",", "_", ",", "_", ",", "\"\<u\>\"", ",", "_"}], 
                    "}"}]}], "]"}], "]"}], "]"}]}], ",", 
                    RowBox[{"Darker", "[", 
                    RowBox[{"Green", ",", ".5"}], "]"}], ",", "Bold"}], "]"}],
                     ",", "\[IndentingNewLine]", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"\"\<Recovered    \>\"", "<>", "\"\<=\>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Cases", "[", 
                    RowBox[{"PopA", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "_", ",", "_", ",", "_", ",", "\"\<r\>\"", ",", "_"}], 
                    "}"}]}], "]"}], "]"}], "]"}]}], ",", 
                    RowBox[{"Darker", "[", 
                    RowBox[{"Green", ",", ".5"}], "]"}], ",", "Bold"}], 
                    "]"}]}], "}"}], "\[IndentingNewLine]", "]"}]}], "}"}], 
                   ",", "\[IndentingNewLine]", 
                   RowBox[{"{", 
                    RowBox[{"\"\<\>\"", ",", "\[IndentingNewLine]", 
                    RowBox[{"Image", "[", "\[IndentingNewLine]", 
                    RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
                    RowBox[{"Join", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"Circle", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", "2"}], "]"}], "}"}], 
                    "}"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "\"\<u\>\""}], "||", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "\"\<r\>\""}]}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"Darker", "[", 
                    RowBox[{"Green", ",", ".5"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "\"\<i\>\""}], ",",
                     "\[IndentingNewLine]", "Red", ",", "Blue"}], "]"}]}], 
                    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Disk", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "*", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "]"}]}]}], "}"}], ",", ".1"}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", 
                    RowBox[{"Length", "[", "PopB", "]"}]}], "}"}]}], 
                    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
                    "]"}], "\[IndentingNewLine]", "]"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Column", "[", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<City B\>\"", ",", "\"\<Title\>\"", ",", "20"}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"\"\<Latent       \>\"", "<>", "\"\<=\>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Cases", "[", 
                    RowBox[{"PopB", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "_", ",", "_", ",", "_", ",", "\"\<n\>\"", ",", "_"}], 
                    "}"}]}], "]"}], "]"}], "]"}]}], ",", "Blue", ",", 
                    "Bold"}], "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"\"\<Contagious   \>\"", "<>", "\"\<=\>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Cases", "[", 
                    RowBox[{"PopB", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "_", ",", "_", ",", "_", ",", "\"\<i\>\"", ",", "_"}], 
                    "}"}]}], "]"}], "]"}], "]"}]}], ",", "Red", ",", "Bold"}],
                     "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"\"\<Susceptible  \>\"", "<>", "\"\<=\>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Cases", "[", 
                    RowBox[{"PopB", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "_", ",", "_", ",", "_", ",", "\"\<u\>\"", ",", "_"}], 
                    "}"}]}], "]"}], "]"}], "]"}]}], ",", 
                    RowBox[{"Darker", "[", 
                    RowBox[{"Green", ",", ".5"}], "]"}], ",", "Bold"}], "]"}],
                     ",", "\[IndentingNewLine]", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"\"\<Recovered    \>\"", "<>", "\"\<=\>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Cases", "[", 
                    RowBox[{"PopB", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "_", ",", "_", ",", "_", ",", "\"\<r\>\"", ",", "_"}], 
                    "}"}]}], "]"}], "]"}], "]"}]}], ",", 
                    RowBox[{"Darker", "[", 
                    RowBox[{"Green", ",", ".5"}], "]"}], ",", "Bold"}], 
                    "]"}]}], "}"}], "\[IndentingNewLine]", "]"}]}], 
                    "\[IndentingNewLine]", "}"}]}], "}"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Spacings", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"10", ",", "2"}], "}"}], ",", "1.8"}], "}"}]}]}], 
                "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
              "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"i", "=", "1"}], ",", 
              RowBox[{"i", "<", 
               RowBox[{
                RowBox[{"Length", "[", "PopA", "]"}], "+", "1"}]}], ",", 
              RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Which", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "Recovery"}], "&&", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "\"\<i\>\""}]}], 
                 ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}], "=", "0"}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "=", "\"\<r\>\""}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}], "\[Equal]", 
                   RowBox[{"Incubation", "-", "1"}]}], "&&", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "\"\<n\>\""}]}], 
                 ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}], "=", "0"}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "=", "\"\<i\>\""}]}]}], 
                "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
             "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"i", "=", "1"}], ",", 
              RowBox[{"i", "<", 
               RowBox[{
                RowBox[{"Length", "[", "PopB", "]"}], "+", "1"}]}], ",", 
              RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Which", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "Recovery"}], "&&", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "\"\<i\>\""}]}], 
                 ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}], "=", "0"}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "=", "\"\<r\>\""}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}], "\[Equal]", 
                   RowBox[{"Incubation", "-", "1"}]}], "&&", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "\"\<n\>\""}]}], 
                 ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}], "=", "0"}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "=", "\"\<i\>\""}]}]}], 
                "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
             "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"i", "=", "1"}], ",", 
              RowBox[{"i", "<", 
               RowBox[{
                RowBox[{"Length", "[", "PopA", "]"}], "+", "1"}]}], ",", 
              RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                   "PopA", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                   "\[RightDoubleBracket]"}], "\[Equal]", "\"\<i\>\""}], "||", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                   "PopA", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                   "\[RightDoubleBracket]"}], "\[Equal]", " ", 
                  "\"\<n\>\""}]}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                  "PopA", "\[LeftDoubleBracket]", "i", 
                   "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "5", 
                  "\[RightDoubleBracket]"}], "=", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                   "PopA", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "5", 
                   "\[RightDoubleBracket]"}], "+", "1"}]}]}], "]"}]}], 
             "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"i", "=", "1"}], ",", 
              RowBox[{"i", "<", 
               RowBox[{
                RowBox[{"Length", "[", "PopB", "]"}], "+", "1"}]}], ",", 
              RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                   "PopB", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                   "\[RightDoubleBracket]"}], "\[Equal]", "\"\<i\>\""}], "||", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                   "PopB", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                   "\[RightDoubleBracket]"}], "\[Equal]", " ", 
                  "\"\<n\>\""}]}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                  "PopB", "\[LeftDoubleBracket]", "i", 
                   "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "5", 
                  "\[RightDoubleBracket]"}], "=", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                   "PopB", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "5", 
                   "\[RightDoubleBracket]"}], "+", "1"}]}]}], "]"}]}], 
             "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"TotalPeopleA", " ", "=", " ", 
             RowBox[{"Length", "[", "PopA", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"PeopleMetA", " ", "=", " ", 
             RowBox[{"Random", "[", 
              RowBox[{"Integer", ",", 
               RowBox[{"{", 
                RowBox[{"10", ",", "20"}], "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"TotalPeopleB", " ", "=", " ", 
             RowBox[{"Length", "[", "PopB", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"PeopleMetB", " ", "=", " ", 
             RowBox[{"Random", "[", 
              RowBox[{"Integer", ",", 
               RowBox[{"{", 
                RowBox[{"10", ",", "20"}], "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"j", "=", "1"}], ",", 
               RowBox[{"j", "<", 
                RowBox[{"TotalPeopleA", "+", "1"}]}], ",", " ", 
               RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"i", "=", "0"}], ",", 
                 RowBox[{"i", "<", "PeopleMetA"}], ",", 
                 RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"ContactA", " ", "=", 
                   RowBox[{"Random", "[", 
                    RowBox[{"Integer", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "TotalPeopleA"}], "}"}]}], "]"}]}], ";",
                   "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "ContactA", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "\"\<i\>\""}], ",",
                     "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[NotEqual]", "\"\<i\>\""}], "&&", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[NotEqual]", "\"\<n\>\""}], "&&", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[NotEqual]", "\"\<r\>\""}], "&&", 
                    RowBox[{
                    RowBox[{"Random", "[", 
                    RowBox[{"Integer", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "100"}], "}"}]}], "]"}], "<", " ", 
                    "Infectious"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "=", "\"\<n\>\""}]}], "]"}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "ContactA", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[NotEqual]", "\"\<n\>\""}], "&&", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "ContactA", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[NotEqual]", "\"\<r\>\""}], "&&", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "\"\<i\>\""}], "&&", 
                    RowBox[{
                    RowBox[{"Random", "[", 
                    RowBox[{"Real", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "]"}], "<", 
                    "Infectious"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "ContactA", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "=", "\"\<n\>\""}]}], "]"}]}], 
                   "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
                "]"}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"j", "=", "1"}], ",", 
               RowBox[{"j", "<", 
                RowBox[{"TotalPeopleB", "+", "1"}]}], ",", " ", 
               RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"i", "=", "0"}], ",", 
                 RowBox[{"i", "<", "PeopleMetB"}], ",", 
                 RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"ContactB", " ", "=", 
                   RowBox[{"Random", "[", 
                    RowBox[{"Integer", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "TotalPeopleB"}], "}"}]}], "]"}]}], ";",
                   "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "ContactB", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "\"\<i\>\""}], ",",
                     "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[NotEqual]", "\"\<i\>\""}], "&&", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[NotEqual]", "\"\<n\>\""}], "&&", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[NotEqual]", "\"\<r\>\""}], "&&", 
                    RowBox[{
                    RowBox[{"Random", "[", 
                    RowBox[{"Integer", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "100"}], "}"}]}], "]"}], "<", " ", 
                    "Infectious"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "=", "\"\<n\>\""}]}], "]"}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "ContactB", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[NotEqual]", "\"\<n\>\""}], "&&", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "ContactB", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[NotEqual]", "\"\<r\>\""}], "&&", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "\"\<i\>\""}], "&&", 
                    RowBox[{
                    RowBox[{"Random", "[", 
                    RowBox[{"Real", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "]"}], "<", " ", 
                    "Infectious"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "ContactB", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "=", "\"\<n\>\""}]}], "]"}]}], 
                   "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
                "]"}]}], "\[IndentingNewLine]", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"ToA", "=", 
             RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"ToB", "=", 
             RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"i", "=", "0"}], ",", 
              RowBox[{
               RowBox[{"Length", "[", "ToA", "]"}], "<", "Transfer"}], ",", 
              RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"j", "=", 
                RowBox[{"RandomChoice", "[", "PopB", "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"ToA", "=", 
                RowBox[{"Append", "[", 
                 RowBox[{"ToA", ",", "j"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"PopB", "=", 
                RowBox[{"Complement", "[", 
                 RowBox[{"PopB", ",", "ToA"}], "]"}]}]}]}], 
             "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"i", "=", "0"}], ",", 
              RowBox[{
               RowBox[{"Length", "[", "ToB", "]"}], "<", "Transfer"}], ",", 
              RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"j", "=", 
                RowBox[{"RandomChoice", "[", "PopA", "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"ToB", "=", 
                RowBox[{"Append", "[", 
                 RowBox[{"ToB", ",", "j"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"PopA", "=", 
                RowBox[{"Complement", "[", 
                 RowBox[{"PopA", ",", "ToB"}], "]"}]}]}]}], 
             "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"PopA", "=", 
             RowBox[{"Join", "[", 
              RowBox[{"PopA", ",", "ToA"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"PopB", "=", 
             RowBox[{"Join", "[", 
              RowBox[{"PopB", ",", "ToB"}], "]"}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"moving", "=", "False"}], ";"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{
      "Pops", "\[LeftDoubleBracket]", "w", "\[RightDoubleBracket]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"UpdateInterval", "\[Rule]", " ", 
      RowBox[{"If", "[", 
       RowBox[{"moving", ",", "2", ",", "Infinity"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"moving", ",", "False", ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"running", ",", "False", ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"Pops", ",", 
     RowBox[{"Pane", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<\>\"", ",", "\[IndentingNewLine]", 
             RowBox[{"Image", "[", "\[IndentingNewLine]", 
              RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"Circle", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}], ",", "2"}], "]"}], "}"}], 
               "\[IndentingNewLine]", "]"}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Column", "[", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<City A\>\"", ",", "\"\<Title\>\"", ",", "20"}], 
                 "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"\"\<Latent       \>\"", "<>", "\"\<=\>\""}], ",", 
                  "Blue", ",", "Bold"}], "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"\"\<Contagious   \>\"", "<>", "\"\<=\>\""}], ",", 
                  "Red", ",", "Bold"}], "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"\"\<Susceptible  \>\"", "<>", "\"\<=\>\""}], ",", 
                  RowBox[{"Darker", "[", 
                   RowBox[{"Green", ",", ".5"}], "]"}], ",", "Bold"}], "]"}], 
                ",", "\[IndentingNewLine]", 
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"\"\<Recovered    \>\"", "<>", "\"\<=\>\""}], ",", 
                  RowBox[{"Darker", "[", 
                   RowBox[{"Green", ",", ".5"}], "]"}], ",", "Bold"}], 
                 "]"}]}], "}"}], "\[IndentingNewLine]", "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"\"\<\>\"", ",", "\[IndentingNewLine]", 
             RowBox[{"Image", "[", "\[IndentingNewLine]", 
              RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"Circle", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}], ",", "2"}], "]"}], "}"}], 
               "\[IndentingNewLine]", "]"}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Column", "[", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<City B\>\"", ",", "\"\<Title\>\"", ",", "20"}], 
                 "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"\"\<Latent       \>\"", "<>", "\"\<=\>\""}], ",", 
                  "Blue", ",", "Bold"}], "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"\"\<Contagious   \>\"", "<>", "\"\<=\>\""}], ",", 
                  "Red", ",", "Bold"}], "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"\"\<Susceptible  \>\"", "<>", "\"\<=\>\""}], ",", 
                  RowBox[{"Darker", "[", 
                   RowBox[{"Green", ",", ".5"}], "]"}], ",", "Bold"}], "]"}], 
                ",", "\[IndentingNewLine]", 
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"\"\<Recovered    \>\"", "<>", "\"\<=\>\""}], ",", 
                  RowBox[{"Darker", "[", 
                   RowBox[{"Green", ",", ".5"}], "]"}], ",", "Bold"}], 
                 "]"}]}], "}"}], "\[IndentingNewLine]", "]"}]}], 
            "\[IndentingNewLine]", "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Spacings", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"10", ",", "2"}], "}"}], ",", "1.8"}], "}"}]}]}], 
        "\[IndentingNewLine]", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"200", ",", "400"}], "}"}]}], "\[IndentingNewLine]", "]"}], 
     ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"InfectedA", ",", "1", ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"InfectedB", ",", "1", ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"Days", ",", "7", ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"Recovery", ",", "3", ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"Incubation", ",", "3", ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"Infectious", ",", "10", ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"Transfer", ",", "0", ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"w", ",", "1", ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"TotalPop", ",", "10", ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"i", ",", "0", ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"j", ",", "0", ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Column", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Dynamic", "@", 
        RowBox[{"Button", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"running", ",", "\"\<reset\>\"", ",", "\"\<run\>\""}], 
            "]"}], "<>", "\"\< simulation\>\""}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"!", "running"}], ",", 
              RowBox[{"moving", "=", "True"}]}], "]"}], ",", 
            RowBox[{"running", "=", 
             RowBox[{"!", "running"}]}]}], "}"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", " ", "225"}], ",", " ", 
          RowBox[{"Alignment", "\[Rule]", " ", "Center"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Dynamic", "@", 
        RowBox[{"If", "[", 
         RowBox[{"running", ",", "\[IndentingNewLine]", 
          RowBox[{"Column", "[", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Column", "[", 
               RowBox[{
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Spacer", "[", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "10"}], "}"}], "]"}], ",", 
                  "\[IndentingNewLine]", "\"\<day (morning)\>\"", ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Control", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"w", ",", "1", ",", "\"\<\>\""}], "}"}], ",", "1",
                     ",", "Days", ",", "1", ",", 
                    RowBox[{
                    "Appearance", "\[Rule]", " ", "\"\<Labeled\>\""}]}], 
                    "}"}], "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
                "Left"}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Column", "[", 
               RowBox[{
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Spacer", "[", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "10"}], "}"}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Row", "[", 
                   RowBox[{"{", 
                    RowBox[{"\"\<duration of simulation = \>\"", ",", 
                    RowBox[{"ToString", "[", "Days", "]"}]}], "}"}], "]"}], 
                  ",", "\[IndentingNewLine]", 
                  RowBox[{"Spacer", "[", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "15"}], "}"}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Row", "[", 
                   RowBox[{"{", 
                    RowBox[{"\"\<city population = \>\"", ",", 
                    RowBox[{"ToString", "[", "TotalPop", "]"}]}], "}"}], 
                   "]"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"Spacer", "[", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "15"}], "}"}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Row", "[", 
                   RowBox[{"{", 
                    RowBox[{"\"\<initial infected cases, City A = \>\"", ",", 
                    RowBox[{"ToString", "[", "InfectedA", "]"}]}], "}"}], 
                   "]"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"Spacer", "[", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "15"}], "}"}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Row", "[", 
                   RowBox[{"{", 
                    RowBox[{"\"\<initial infected cases, City B = \>\"", ",", 
                    RowBox[{"ToString", "[", "InfectedB", "]"}]}], "}"}], 
                   "]"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"Spacer", "[", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "15"}], "}"}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Row", "[", 
                   RowBox[{"{", 
                    RowBox[{"\"\<travellers/day = \>\"", ",", 
                    RowBox[{"ToString", "[", "Transfer", "]"}]}], "}"}], 
                   "]"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"Spacer", "[", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "15"}], "}"}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Row", "[", 
                   RowBox[{"{", 
                    RowBox[{"\"\<chance of infection on contact = \>\"", ",", 
                    RowBox[{"ToString", "[", "Infectious", "]"}]}], "}"}], 
                   "]"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"Spacer", "[", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "15"}], "}"}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Row", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    "\"\<latency before contagious state [days] = \>\"", ",", 
                    RowBox[{"ToString", "[", "Incubation", "]"}]}], "}"}], 
                   "]"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"Spacer", "[", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "15"}], "}"}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Row", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    "\"\<duration of contagious state [days] = \>\"", ",", 
                    RowBox[{"ToString", "[", "Recovery", "]"}]}], "}"}], 
                   "]"}]}], "\[IndentingNewLine]", "}"}], ",", "Right"}], 
               "]"}]}], "\[IndentingNewLine]", "}"}], ",", "Center"}], "]"}], 
          "\[IndentingNewLine]", ",", "\"\<\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Dynamic", "@", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", "running"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Column", "[", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
             "\"\<duration of simulation [days]\>\"", ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Days", ",", "7", ",", "\"\<\>\""}], "}"}], ",", 
                 "1", ",", "21", ",", "1", ",", "Slider", ",", 
                 RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                "}"}], "]"}], ",", "\[IndentingNewLine]", 
              "\"\<city population\>\"", ",", "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"TotalPop", ",", "10", ",", "\"\<\>\""}], "}"}], 
                 ",", "1", ",", "100", ",", "1", ",", "Slider", ",", 
                 RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                "}"}], "]"}], ",", "\[IndentingNewLine]", 
              "\"\<initial infected cases, City A\>\"", ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"InfectedA", ",", "1", ",", "\"\<\>\""}], "}"}], 
                 ",", "0", ",", "TotalPop", ",", "1", ",", "Slider", ",", 
                 RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                "}"}], "]"}], ",", "\[IndentingNewLine]", 
              "\"\<initial infected cases, City B\>\"", ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"InfectedB", ",", "1", ",", "\"\<\>\""}], "}"}], 
                 ",", "0", ",", "TotalPop", ",", "1", ",", "Slider", ",", 
                 RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                "}"}], "]"}], ",", "\[IndentingNewLine]", 
              "\"\<travellers/day\>\"", ",", "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Transfer", ",", "0", ",", "\"\<\>\""}], "}"}], ",",
                  "0", ",", "TotalPop", ",", "1", ",", "Slider", ",", 
                 RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                "}"}], "]"}], ",", "\[IndentingNewLine]", 
              "\"\<chance of infection on contact\>\"", ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Infectious", ",", ".1", ",", "\"\<\>\""}], "}"}], 
                 ",", "0", ",", "1", ",", ".01", ",", "Slider", ",", 
                 RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                "}"}], "]"}], ",", "\[IndentingNewLine]", 
              "\"\<latency before contagious state [days]\>\"", ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Incubation", ",", "3", ",", "\"\<\>\""}], "}"}], 
                 ",", "1", ",", "7", ",", "1", ",", "Slider", ",", 
                 RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                "}"}], "]"}], ",", "\[IndentingNewLine]", 
              "\"\<duration of contagious state [days]\>\"", ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Recovery", ",", "3", ",", "\"\<\>\""}], "}"}], ",",
                  "1", ",", "7", ",", "1", ",", "Slider", ",", 
                 RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                "}"}], "]"}]}], "\[IndentingNewLine]", "}"}], ",", "Left", 
            ",", ".45"}], "]"}], "\[IndentingNewLine]", ",", "\"\<\>\""}], 
         "]"}]}]}], "\[IndentingNewLine]", "}"}], ",", "Center"}], "]"}], ",",
    "\[IndentingNewLine]", 
   RowBox[{"ControlPlacement", "\[Rule]", "Left"}], ",", 
   RowBox[{"ContentSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"340", ",", "400"}], "}"}]}], ",", 
   RowBox[{"FrameMargins", "\[Rule]", " ", "0"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{
  3.550939219524007*^9, {3.550942859781348*^9, 3.550942879961376*^9}, {
   3.55100204387265*^9, 3.55100205087766*^9}, 3.551028294757171*^9, {
   3.55104284788514*^9, 3.551042998884616*^9}, {3.551043053364728*^9, 
   3.5510430535317373`*^9}, {3.551043101791429*^9, 3.551043103880546*^9}, 
   3.5510431343681517`*^9, {3.5510441239237328`*^9, 3.5510441348393545`*^9}, {
   3.5510449919052773`*^9, 3.551045068662575*^9}, {3.5510451447957315`*^9, 
   3.5510451848559856`*^9}, {3.5510452521677513`*^9, 3.551045368431142*^9}, {
   3.551045591872608*^9, 3.551045614351836*^9}, {3.551045849787904*^9, 
   3.551045871288927*^9}, {3.551045942751957*^9, 3.551045993817875*^9}, {
   3.551046112739498*^9, 3.551046124590143*^9}, 3.5510465983443403`*^9, 
   3.5510466926956835`*^9, {3.551047355398734*^9, 3.551047358971939*^9}, {
   3.551047389730698*^9, 3.5510474031304646`*^9}, {3.55104763263118*^9, 
   3.5510476505962057`*^9}, 3.551047863292946*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`Days$$ = 7, $CellContext`i$$ = 
    0, $CellContext`Incubation$$ = 3, $CellContext`InfectedA$$ = 
    1, $CellContext`InfectedB$$ = 1, $CellContext`Infectious$$ = 
    0.1, $CellContext`j$$ = 0, $CellContext`moving$$ = 
    False, $CellContext`Pops$$ = Pane[
     Grid[{{"", 
        Image[CompressedData["
1:eJzt3S1w60yWxvHsBzA0NPQwQUNB7yJD1QwR9EzV7oqta2ar1oMMDQ0FBQ0N
DQ0FAw0NDQ0N7z5vut5UdnyTG8mS+uv/q5qpzJ3Y7iTS6dOnW91/+Mt///E/
//nl5eVvI/3XH//8v//217/++e9/+lf9j3//+//8x1/+RV/81z+9vBT6z29f
/wAAAAAAAAAAAADQ0Pl8Pv3u9fXVdnMADO1yuej2PxwOm99lWTZ/M5vNXn4m
SZL57z77Hv27+Qa92/s761P0WQo7tn9oAN/1Hh+KotAdrdtfN/h0Ov3p3f1k
LqHXmjd5jEgfP3e5XOrf9/u9vvN+v3f4wwJoQd26uWcXi4VuUt2q7/GhLEvr
/b7Jc6qqUnvyPFfbRqPRZDLRFyaS1HVtsXlAJHQn6jZULpGmqRlNmChxPB71
f9lu3bdcr1cFExNJzE+h8Y6+VqCjkAJ0RZ3ybrdTfFBPraRCab9usZB6aoUL
5R4Khgog4/FYuZOiimKL7XYBntGttN1ulc+rO1anvFqtNB5RT227Xb273W7K
nRQ33n/29XodUpAEuqVbRt2u0gnlFep5db/Q5ypiKH4qeigP0VhGY7QYgifw
S+fzmVvjlx6DKsUQREjhQtl48oZUvBEziFP0mE6nGsERQBC8j+FCX7A+6hmX
y2W32xFAECql2WVZEi568jGAKBVhoAffaQBiRuVFURAu+qYAokGfftt5nh+P
R9vNAZp5TzDSNK2qivXVA9vv92YNLekHvKAujwTDER/TD6ofcJOuTF2f6uNI
MFyj9MM8vcuSGLijrussy3Rl6vq03RZ8SkHDPPh/OBxstwVRM5dimqZcir7Q
n8wEef5kGJ6uOtN5kfr6SINKRQ8zqLTdFkRBEUO9la46IobvTBFb0aMsS0pS
6In6Jl1jihgU50Oi6FEUhf6yu92O6IEOqT8ye1/4sj0Omrper6vVajKZbDYb
ogeeVNd1mqbqj4gYMbjdboob6iNYbop2dAmZHfl4WDU2yj0Wb+gs0EhVVUmS
aHhiuyGwRimHroHtdsuwBb90Pp+VYyyXS55rgCLGer2ezWYMW/AZDUx0kaiL
YWCCj9SVaMySZRldCf7B4XAwSanthsBRXCH4iN4E30RGih9vo9fNZsPoFY1Q
AYuZugxFDBb5oB0z48bDcVHZ7Xbz+Zx9dfAMDVs0vF2tVnQ9weNvjW6ZPogV
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
9ECZyWdx4/Gbbf8EAAAAAAAAAAAAgKP+DwAVnG4=
         "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
        Column[{
          Style["City A", "Title", 20], 
          Style["Latent       =", 
           RGBColor[0, 0, 1], Bold], 
          Style["Contagious   =", 
           RGBColor[1, 0, 0], Bold], 
          Style["Susceptible  =", 
           RGBColor[0., 0.5, 0.], Bold], 
          Style["Recovered    =", 
           RGBColor[0., 0.5, 0.], Bold]}]}, {"", 
        Image[CompressedData["
1:eJzt3S1w60yWxvHsBzA0NPQwQUNB7yJD1QwR9EzV7oqta2ar1oMMDQ0FBQ0N
DQ0FAw0NDQ0N7z5vut5UdnyTG8mS+uv/q5qpzJ3Y7iTS6dOnW91/+Mt///E/
//nl5eVvI/3XH//8v//217/++e9/+lf9j3//+//8x1/+RV/81z+9vBT6z29f
/wAAAAAAAAAAAADQ0Pl8Pv3u9fXVdnMADO1yuej2PxwOm99lWTZ/M5vNXn4m
SZL57z77Hv27+Qa92/s761P0WQo7tn9oAN/1Hh+KotAdrdtfN/h0Ov3p3f1k
LqHXmjd5jEgfP3e5XOrf9/u9vvN+v3f4wwJoQd26uWcXi4VuUt2q7/GhLEvr
/b7Jc6qqUnvyPFfbRqPRZDLRFyaS1HVtsXlAJHQn6jZULpGmqRlNmChxPB71
f9lu3bdcr1cFExNJzE+h8Y6+VqCjkAJ0RZ3ybrdTfFBPraRCab9usZB6aoUL
5R4Khgog4/FYuZOiimKL7XYBntGttN1ulc+rO1anvFqtNB5RT227Xb273W7K
nRQ33n/29XodUpAEuqVbRt2u0gnlFep5db/Q5ypiKH4qeigP0VhGY7QYgifw
S+fzmVvjlx6DKsUQREjhQtl48oZUvBEziFP0mE6nGsERQBC8j+FCX7A+6hmX
y2W32xFAECql2WVZEi568jGAKBVhoAffaQBiRuVFURAu+qYAokGfftt5nh+P
R9vNAZp5TzDSNK2qivXVA9vv92YNLekHvKAujwTDER/TD6ofcJOuTF2f6uNI
MFyj9MM8vcuSGLijrussy3Rl6vq03RZ8SkHDPPh/OBxstwVRM5dimqZcir7Q
n8wEef5kGJ6uOtN5kfr6SINKRQ8zqLTdFkRBEUO9la46IobvTBFb0aMsS0pS
6In6Jl1jihgU50Oi6FEUhf6yu92O6IEOqT8ye1/4sj0Omrper6vVajKZbDYb
ogeeVNd1mqbqj4gYMbjdboob6iNYbop2dAmZHfl4WDU2yj0Wb+gs0EhVVUmS
aHhiuyGwRimHroHtdsuwBb90Pp+VYyyXS55rgCLGer2ezWYMW/AZDUx0kaiL
YWCCj9SVaMySZRldCf7B4XAwSanthsBRXCH4iN4E30RGih9vo9fNZsPoFY1Q
AYuZugxFDBb5oB0z48bDcVHZ7Xbz+Zx9dfAMDVs0vF2tVnQ9weNvjW6ZPogV
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
9ECZyWdx4/Gbbf8EAAAAAAAAAAAAgKP+DwAVnG4=
         "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
        Column[{
          Style["City B", "Title", 20], 
          Style["Latent       =", 
           RGBColor[0, 0, 1], Bold], 
          Style["Contagious   =", 
           RGBColor[1, 0, 0], Bold], 
          Style["Susceptible  =", 
           RGBColor[0., 0.5, 0.], Bold], 
          Style["Recovered    =", 
           RGBColor[0., 0.5, 0.], Bold]}]}}, Spacings -> {{10, 2}, 1.8}], {
     200, 400}], $CellContext`Recovery$$ = 3, $CellContext`running$$ = 
    False, $CellContext`TotalPop$$ = 10, $CellContext`Transfer$$ = 
    0, $CellContext`w$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`moving$$], False}, {
      Hold[$CellContext`running$$], False}, {
      Hold[$CellContext`Pops$$], 
      Pane[
       Grid[{{"", 
          Image[CompressedData["
1:eJzt3S1w60yWxvHsBzA0NPQwQUNB7yJD1QwR9EzV7oqta2ar1oMMDQ0FBQ0N
DQ0FAw0NDQ0N7z5vut5UdnyTG8mS+uv/q5qpzJ3Y7iTS6dOnW91/+Mt///E/
//nl5eVvI/3XH//8v//217/++e9/+lf9j3//+//8x1/+RV/81z+9vBT6z29f
/wAAAAAAAAAAAADQ0Pl8Pv3u9fXVdnMADO1yuej2PxwOm99lWTZ/M5vNXn4m
SZL57z77Hv27+Qa92/s761P0WQo7tn9oAN/1Hh+KotAdrdtfN/h0Ov3p3f1k
LqHXmjd5jEgfP3e5XOrf9/u9vvN+v3f4wwJoQd26uWcXi4VuUt2q7/GhLEvr
/b7Jc6qqUnvyPFfbRqPRZDLRFyaS1HVtsXlAJHQn6jZULpGmqRlNmChxPB71
f9lu3bdcr1cFExNJzE+h8Y6+VqCjkAJ0RZ3ybrdTfFBPraRCab9usZB6aoUL
5R4Khgog4/FYuZOiimKL7XYBntGttN1ulc+rO1anvFqtNB5RT227Xb273W7K
nRQ33n/29XodUpAEuqVbRt2u0gnlFep5db/Q5ypiKH4qeigP0VhGY7QYgifw
S+fzmVvjlx6DKsUQREjhQtl48oZUvBEziFP0mE6nGsERQBC8j+FCX7A+6hmX
y2W32xFAECql2WVZEi568jGAKBVhoAffaQBiRuVFURAu+qYAokGfftt5nh+P
R9vNAZp5TzDSNK2qivXVA9vv92YNLekHvKAujwTDER/TD6ofcJOuTF2f6uNI
MFyj9MM8vcuSGLijrussy3Rl6vq03RZ8SkHDPPh/OBxstwVRM5dimqZcir7Q
n8wEef5kGJ6uOtN5kfr6SINKRQ8zqLTdFkRBEUO9la46IobvTBFb0aMsS0pS
6In6Jl1jihgU50Oi6FEUhf6yu92O6IEOqT8ye1/4sj0Omrper6vVajKZbDYb
ogeeVNd1mqbqj4gYMbjdboob6iNYbop2dAmZHfl4WDU2yj0Wb+gs0EhVVUmS
aHhiuyGwRimHroHtdsuwBb90Pp+VYyyXS55rgCLGer2ezWYMW/AZDUx0kaiL
YWCCj9SVaMySZRldCf7B4XAwSanthsBRXCH4iN4E30RGih9vo9fNZsPoFY1Q
AYuZugxFDBb5oB0z48bDcVHZ7Xbz+Zx9dfAMDVs0vF2tVnQ9weNvjW6ZPogV
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
9ECZyWdx4/Gbbf8EAAAAAAAAAAAAgKP+DwAVnG4=
           "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
          Column[{
            Style["City A", "Title", 20], 
            Style["Latent       =", 
             RGBColor[0, 0, 1], Bold], 
            Style["Contagious   =", 
             RGBColor[1, 0, 0], Bold], 
            Style["Susceptible  =", 
             RGBColor[0., 0.5, 0.], Bold], 
            Style["Recovered    =", 
             RGBColor[0., 0.5, 0.], Bold]}]}, {"", 
          Image[CompressedData["
1:eJzt3S1w60yWxvHsBzA0NPQwQUNB7yJD1QwR9EzV7oqta2ar1oMMDQ0FBQ0N
DQ0FAw0NDQ0N7z5vut5UdnyTG8mS+uv/q5qpzJ3Y7iTS6dOnW91/+Mt///E/
//nl5eVvI/3XH//8v//217/++e9/+lf9j3//+//8x1/+RV/81z+9vBT6z29f
/wAAAAAAAAAAAADQ0Pl8Pv3u9fXVdnMADO1yuej2PxwOm99lWTZ/M5vNXn4m
SZL57z77Hv27+Qa92/s761P0WQo7tn9oAN/1Hh+KotAdrdtfN/h0Ov3p3f1k
LqHXmjd5jEgfP3e5XOrf9/u9vvN+v3f4wwJoQd26uWcXi4VuUt2q7/GhLEvr
/b7Jc6qqUnvyPFfbRqPRZDLRFyaS1HVtsXlAJHQn6jZULpGmqRlNmChxPB71
f9lu3bdcr1cFExNJzE+h8Y6+VqCjkAJ0RZ3ybrdTfFBPraRCab9usZB6aoUL
5R4Khgog4/FYuZOiimKL7XYBntGttN1ulc+rO1anvFqtNB5RT227Xb273W7K
nRQ33n/29XodUpAEuqVbRt2u0gnlFep5db/Q5ypiKH4qeigP0VhGY7QYgifw
S+fzmVvjlx6DKsUQREjhQtl48oZUvBEziFP0mE6nGsERQBC8j+FCX7A+6hmX
y2W32xFAECql2WVZEi568jGAKBVhoAffaQBiRuVFURAu+qYAokGfftt5nh+P
R9vNAZp5TzDSNK2qivXVA9vv92YNLekHvKAujwTDER/TD6ofcJOuTF2f6uNI
MFyj9MM8vcuSGLijrussy3Rl6vq03RZ8SkHDPPh/OBxstwVRM5dimqZcir7Q
n8wEef5kGJ6uOtN5kfr6SINKRQ8zqLTdFkRBEUO9la46IobvTBFb0aMsS0pS
6In6Jl1jihgU50Oi6FEUhf6yu92O6IEOqT8ye1/4sj0Omrper6vVajKZbDYb
ogeeVNd1mqbqj4gYMbjdboob6iNYbop2dAmZHfl4WDU2yj0Wb+gs0EhVVUmS
aHhiuyGwRimHroHtdsuwBb90Pp+VYyyXS55rgCLGer2ezWYMW/AZDUx0kaiL
YWCCj9SVaMySZRldCf7B4XAwSanthsBRXCH4iN4E30RGih9vo9fNZsPoFY1Q
AYuZugxFDBb5oB0z48bDcVHZ7Xbz+Zx9dfAMDVs0vF2tVnQ9weNvjW6ZPogV
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
9ECZyWdx4/Gbbf8EAAAAAAAAAAAAgKP+DwAVnG4=
           "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
          Column[{
            Style["City B", "Title", 20], 
            Style["Latent       =", 
             RGBColor[0, 0, 1], Bold], 
            Style["Contagious   =", 
             RGBColor[1, 0, 0], Bold], 
            Style["Susceptible  =", 
             RGBColor[0., 0.5, 0.], Bold], 
            Style["Recovered    =", 
             RGBColor[0., 0.5, 0.], Bold]}]}}, Spacings -> {{10, 2}, 1.8}], {
       200, 400}]}, {
      Hold[$CellContext`InfectedA$$], 1}, {
      Hold[$CellContext`InfectedB$$], 1}, {
      Hold[$CellContext`Days$$], 7}, {
      Hold[$CellContext`Recovery$$], 3}, {
      Hold[$CellContext`Incubation$$], 3}, {
      Hold[$CellContext`Infectious$$], 10}, {
      Hold[$CellContext`Transfer$$], 0}, {
      Hold[$CellContext`w$$], 1}, {
      Hold[$CellContext`TotalPop$$], 10}, {
      Hold[$CellContext`i$$], 0}, {
      Hold[$CellContext`j$$], 0}, {{
       Hold[$CellContext`w$$], 1, ""}, 1, 
      Dynamic[$CellContext`Days$$], 1}, {{
       Hold[$CellContext`Days$$], 7, ""}, 1, 21, 1}, {{
       Hold[$CellContext`TotalPop$$], 10, ""}, 1, 100, 1}, {{
       Hold[$CellContext`InfectedA$$], 1, ""}, 0, 
      Dynamic[$CellContext`TotalPop$$], 1}, {{
       Hold[$CellContext`InfectedB$$], 1, ""}, 0, 
      Dynamic[$CellContext`TotalPop$$], 1}, {{
       Hold[$CellContext`Transfer$$], 0, ""}, 0, 
      Dynamic[$CellContext`TotalPop$$], 1}, {{
       Hold[$CellContext`Infectious$$], 0.1, ""}, 0, 1, 0.01}, {{
       Hold[$CellContext`Incubation$$], 3, ""}, 1, 7, 1}, {{
       Hold[$CellContext`Recovery$$], 3, ""}, 1, 7, 1}, {
      Hold[
       Column[{
         Dynamic[
          Button[
           StringJoin[
            If[$CellContext`running$$, "reset", "run"], " simulation"], {
            If[
             Not[$CellContext`running$$], $CellContext`moving$$ = 
             True], $CellContext`running$$ = Not[$CellContext`running$$]}, 
           ImageSize -> 225, Alignment -> Center]], 
         Dynamic[
          If[$CellContext`running$$, 
           Column[{
             Column[{
               Spacer[{0, 10}], "day (morning)", 
               Manipulate`Place[1]}, Left], 
             Column[{
               Spacer[{0, 10}], 
               Row[{"duration of simulation = ", 
                 ToString[$CellContext`Days$$]}], 
               Spacer[{0, 15}], 
               Row[{"city population = ", 
                 ToString[$CellContext`TotalPop$$]}], 
               Spacer[{0, 15}], 
               Row[{"initial infected cases, City A = ", 
                 ToString[$CellContext`InfectedA$$]}], 
               Spacer[{0, 15}], 
               Row[{"initial infected cases, City B = ", 
                 ToString[$CellContext`InfectedB$$]}], 
               Spacer[{0, 15}], 
               Row[{"travellers/day = ", 
                 ToString[$CellContext`Transfer$$]}], 
               Spacer[{0, 15}], 
               Row[{"chance of infection on contact = ", 
                 ToString[$CellContext`Infectious$$]}], 
               Spacer[{0, 15}], 
               Row[{"latency before contagious state [days] = ", 
                 ToString[$CellContext`Incubation$$]}], 
               Spacer[{0, 15}], 
               Row[{"duration of contagious state [days] = ", 
                 ToString[$CellContext`Recovery$$]}]}, Right]}, Center], ""]], 
         Dynamic[
          If[
           Not[$CellContext`running$$], 
           Column[{"duration of simulation [days]", 
             Manipulate`Place[2], "city population", 
             Manipulate`Place[3], "initial infected cases, City A", 
             Manipulate`Place[4], "initial infected cases, City B", 
             Manipulate`Place[5], "travellers/day", 
             Manipulate`Place[6], "chance of infection on contact", 
             Manipulate`Place[7], "latency before contagious state [days]", 
             Manipulate`Place[8], "duration of contagious state [days]", 
             Manipulate`Place[9]}, Left, 0.45], ""]]}, Center]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    311., {188.5, 193.5}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`w$2734$$ = 
    0, $CellContext`Days$2735$$ = 0, $CellContext`TotalPop$2736$$ = 
    0, $CellContext`InfectedA$2737$$ = 0, $CellContext`InfectedB$2738$$ = 
    0, $CellContext`Transfer$2739$$ = 0, $CellContext`Infectious$2740$$ = 
    0, $CellContext`Incubation$2741$$ = 0, $CellContext`Recovery$2742$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`Days$$ = 7, $CellContext`i$$ = 
        0, $CellContext`Incubation$$ = 3, $CellContext`InfectedA$$ = 
        1, $CellContext`InfectedB$$ = 1, $CellContext`Infectious$$ = 
        0.1, $CellContext`j$$ = 0, $CellContext`moving$$ = 
        False, $CellContext`Pops$$ = Pane[
          Grid[{{"", 
             Image[CompressedData["
1:eJzt3S1w60yWxvHsBzA0NPQwQUNB7yJD1QwR9EzV7oqta2ar1oMMDQ0FBQ0N
DQ0FAw0NDQ0N7z5vut5UdnyTG8mS+uv/q5qpzJ3Y7iTS6dOnW91/+Mt///E/
//nl5eVvI/3XH//8v//217/++e9/+lf9j3//+//8x1/+RV/81z+9vBT6z29f
/wAAAAAAAAAAAADQ0Pl8Pv3u9fXVdnMADO1yuej2PxwOm99lWTZ/M5vNXn4m
SZL57z77Hv27+Qa92/s761P0WQo7tn9oAN/1Hh+KotAdrdtfN/h0Ov3p3f1k
LqHXmjd5jEgfP3e5XOrf9/u9vvN+v3f4wwJoQd26uWcXi4VuUt2q7/GhLEvr
/b7Jc6qqUnvyPFfbRqPRZDLRFyaS1HVtsXlAJHQn6jZULpGmqRlNmChxPB71
f9lu3bdcr1cFExNJzE+h8Y6+VqCjkAJ0RZ3ybrdTfFBPraRCab9usZB6aoUL
5R4Khgog4/FYuZOiimKL7XYBntGttN1ulc+rO1anvFqtNB5RT227Xb273W7K
nRQ33n/29XodUpAEuqVbRt2u0gnlFep5db/Q5ypiKH4qeigP0VhGY7QYgifw
S+fzmVvjlx6DKsUQREjhQtl48oZUvBEziFP0mE6nGsERQBC8j+FCX7A+6hmX
y2W32xFAECql2WVZEi568jGAKBVhoAffaQBiRuVFURAu+qYAokGfftt5nh+P
R9vNAZp5TzDSNK2qivXVA9vv92YNLekHvKAujwTDER/TD6ofcJOuTF2f6uNI
MFyj9MM8vcuSGLijrussy3Rl6vq03RZ8SkHDPPh/OBxstwVRM5dimqZcir7Q
n8wEef5kGJ6uOtN5kfr6SINKRQ8zqLTdFkRBEUO9la46IobvTBFb0aMsS0pS
6In6Jl1jihgU50Oi6FEUhf6yu92O6IEOqT8ye1/4sj0Omrper6vVajKZbDYb
ogeeVNd1mqbqj4gYMbjdboob6iNYbop2dAmZHfl4WDU2yj0Wb+gs0EhVVUmS
aHhiuyGwRimHroHtdsuwBb90Pp+VYyyXS55rgCLGer2ezWYMW/AZDUx0kaiL
YWCCj9SVaMySZRldCf7B4XAwSanthsBRXCH4iN4E30RGih9vo9fNZsPoFY1Q
AYuZugxFDBb5oB0z48bDcVHZ7Xbz+Zx9dfAMDVs0vF2tVnQ9weNvjW6ZPogV
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
9ECZyWdx4/Gbbf8EAAAAAAAAAAAAgKP+DwAVnG4=
              "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
             Column[{
               Style["City A", "Title", 20], 
               Style["Latent       =", 
                RGBColor[0, 0, 1], Bold], 
               Style["Contagious   =", 
                RGBColor[1, 0, 0], Bold], 
               Style["Susceptible  =", 
                RGBColor[0., 0.5, 0.], Bold], 
               Style["Recovered    =", 
                RGBColor[0., 0.5, 0.], Bold]}]}, {"", 
             Image[CompressedData["
1:eJzt3S1w60yWxvHsBzA0NPQwQUNB7yJD1QwR9EzV7oqta2ar1oMMDQ0FBQ0N
DQ0FAw0NDQ0N7z5vut5UdnyTG8mS+uv/q5qpzJ3Y7iTS6dOnW91/+Mt///E/
//nl5eVvI/3XH//8v//217/++e9/+lf9j3//+//8x1/+RV/81z+9vBT6z29f
/wAAAAAAAAAAAADQ0Pl8Pv3u9fXVdnMADO1yuej2PxwOm99lWTZ/M5vNXn4m
SZL57z77Hv27+Qa92/s761P0WQo7tn9oAN/1Hh+KotAdrdtfN/h0Ov3p3f1k
LqHXmjd5jEgfP3e5XOrf9/u9vvN+v3f4wwJoQd26uWcXi4VuUt2q7/GhLEvr
/b7Jc6qqUnvyPFfbRqPRZDLRFyaS1HVtsXlAJHQn6jZULpGmqRlNmChxPB71
f9lu3bdcr1cFExNJzE+h8Y6+VqCjkAJ0RZ3ybrdTfFBPraRCab9usZB6aoUL
5R4Khgog4/FYuZOiimKL7XYBntGttN1ulc+rO1anvFqtNB5RT227Xb273W7K
nRQ33n/29XodUpAEuqVbRt2u0gnlFep5db/Q5ypiKH4qeigP0VhGY7QYgifw
S+fzmVvjlx6DKsUQREjhQtl48oZUvBEziFP0mE6nGsERQBC8j+FCX7A+6hmX
y2W32xFAECql2WVZEi568jGAKBVhoAffaQBiRuVFURAu+qYAokGfftt5nh+P
R9vNAZp5TzDSNK2qivXVA9vv92YNLekHvKAujwTDER/TD6ofcJOuTF2f6uNI
MFyj9MM8vcuSGLijrussy3Rl6vq03RZ8SkHDPPh/OBxstwVRM5dimqZcir7Q
n8wEef5kGJ6uOtN5kfr6SINKRQ8zqLTdFkRBEUO9la46IobvTBFb0aMsS0pS
6In6Jl1jihgU50Oi6FEUhf6yu92O6IEOqT8ye1/4sj0Omrper6vVajKZbDYb
ogeeVNd1mqbqj4gYMbjdboob6iNYbop2dAmZHfl4WDU2yj0Wb+gs0EhVVUmS
aHhiuyGwRimHroHtdsuwBb90Pp+VYyyXS55rgCLGer2ezWYMW/AZDUx0kaiL
YWCCj9SVaMySZRldCf7B4XAwSanthsBRXCH4iN4E30RGih9vo9fNZsPoFY1Q
AYuZugxFDBb5oB0z48bDcVHZ7Xbz+Zx9dfAMDVs0vF2tVnQ9weNvjW6ZPogV
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
9ECZyWdx4/Gbbf8EAAAAAAAAAAAAgKP+DwAVnG4=
              "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
             Column[{
               Style["City B", "Title", 20], 
               Style["Latent       =", 
                RGBColor[0, 0, 1], Bold], 
               Style["Contagious   =", 
                RGBColor[1, 0, 0], Bold], 
               Style["Susceptible  =", 
                RGBColor[0., 0.5, 0.], Bold], 
               Style["Recovered    =", 
                RGBColor[0., 0.5, 0.], Bold]}]}}, 
           Spacings -> {{10, 2}, 1.8}], {200, 400}], $CellContext`Recovery$$ = 
        3, $CellContext`running$$ = False, $CellContext`TotalPop$$ = 
        10, $CellContext`Transfer$$ = 0, $CellContext`w$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`w$$, $CellContext`w$2734$$, 0], 
        Hold[$CellContext`Days$$, $CellContext`Days$2735$$, 0], 
        Hold[$CellContext`TotalPop$$, $CellContext`TotalPop$2736$$, 0], 
        Hold[$CellContext`InfectedA$$, $CellContext`InfectedA$2737$$, 0], 
        Hold[$CellContext`InfectedB$$, $CellContext`InfectedB$2738$$, 0], 
        Hold[$CellContext`Transfer$$, $CellContext`Transfer$2739$$, 0], 
        Hold[$CellContext`Infectious$$, $CellContext`Infectious$2740$$, 0], 
        Hold[$CellContext`Incubation$$, $CellContext`Incubation$2741$$, 0], 
        Hold[$CellContext`Recovery$$, $CellContext`Recovery$2742$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Refresh[If[$CellContext`moving$$, $CellContext`w$$ = 
           1; $CellContext`Pops$$ = {}; $CellContext`PopA = Table[{
              StringJoin[
               ToString[$CellContext`k], "A"], 
              RandomReal[{0, 1.8}], 
              RandomReal[{0, 2 Pi}], "u", 0}, {$CellContext`k, 
              1, $CellContext`TotalPop$$}]; $CellContext`PopB = Table[{
              StringJoin[
               ToString[$CellContext`k], "B"], 
              RandomReal[{0, 1.8}], 
              RandomReal[{0, 2 Pi}], "u", 0}, {$CellContext`k, 
              1, $CellContext`TotalPop$$}]; 
          For[$CellContext`j$$ = 
            1, $CellContext`j$$ < $CellContext`InfectedA$$ + 1, 
            Increment[$CellContext`j$$], Part[
              Part[$CellContext`PopA, $CellContext`j$$], 4] = "i"]; 
          For[$CellContext`j$$ = 
            1, $CellContext`j$$ < $CellContext`InfectedB$$ + 1, 
            Increment[$CellContext`j$$], Part[
              Part[$CellContext`PopB, $CellContext`j$$], 4] = "i"]; 
          For[$CellContext`k = 1, $CellContext`k < $CellContext`Days$$ + 1, 
            
            Increment[$CellContext`k], $CellContext`Pops$$ = 
             Append[$CellContext`Pops$$, 
               Grid[{{"", 
                  Image[
                   Graphics[
                    Join[{{
                    Circle[{0, 0}, 2]}}, 
                    Table[{
                    If[
                    Or[Part[
                    Part[$CellContext`PopA, $CellContext`i$$], 4] == "u", Part[
                    Part[$CellContext`PopA, $CellContext`i$$], 4] == "r"], 
                    Darker[Green, 0.5], 
                    If[Part[
                    Part[$CellContext`PopA, $CellContext`i$$], 4] == "i", Red,
                     Blue]], 
                    Disk[{Part[
                    Part[$CellContext`PopA, $CellContext`i$$], 2] Cos[
                    Part[
                    Part[$CellContext`PopA, $CellContext`i$$], 3]], Part[
                    Part[$CellContext`PopA, $CellContext`i$$], 2] Sin[
                    Part[
                    Part[$CellContext`PopA, $CellContext`i$$], 3]]}, 
                    0.1]}, {$CellContext`i$$, 1, 
                    Length[$CellContext`PopA]}]]]], 
                  Column[{
                    Style["City A", "Title", 20], 
                    Style[
                    StringJoin["Latent       ", "=", 
                    ToString[
                    Length[
                    Cases[$CellContext`PopA, {
                    Blank[], 
                    Blank[], 
                    Blank[], "n", 
                    Blank[]}]]]], Blue, Bold], 
                    Style[
                    StringJoin["Contagious   ", "=", 
                    ToString[
                    Length[
                    Cases[$CellContext`PopA, {
                    Blank[], 
                    Blank[], 
                    Blank[], "i", 
                    Blank[]}]]]], Red, Bold], 
                    Style[
                    StringJoin["Susceptible  ", "=", 
                    ToString[
                    Length[
                    Cases[$CellContext`PopA, {
                    Blank[], 
                    Blank[], 
                    Blank[], "u", 
                    Blank[]}]]]], 
                    Darker[Green, 0.5], Bold], 
                    Style[
                    StringJoin["Recovered    ", "=", 
                    ToString[
                    Length[
                    Cases[$CellContext`PopA, {
                    Blank[], 
                    Blank[], 
                    Blank[], "r", 
                    Blank[]}]]]], 
                    Darker[Green, 0.5], Bold]}]}, {"", 
                  Image[
                   Graphics[
                    Join[{{
                    Circle[{0, 0}, 2]}}, 
                    Table[{
                    If[
                    Or[Part[
                    Part[$CellContext`PopB, $CellContext`i$$], 4] == "u", Part[
                    Part[$CellContext`PopB, $CellContext`i$$], 4] == "r"], 
                    Darker[Green, 0.5], 
                    If[Part[
                    Part[$CellContext`PopB, $CellContext`i$$], 4] == "i", Red,
                     Blue]], 
                    Disk[{Part[
                    Part[$CellContext`PopB, $CellContext`i$$], 2] Cos[
                    Part[
                    Part[$CellContext`PopB, $CellContext`i$$], 3]], Part[
                    Part[$CellContext`PopB, $CellContext`i$$], 2] Sin[
                    Part[
                    Part[$CellContext`PopB, $CellContext`i$$], 3]]}, 
                    0.1]}, {$CellContext`i$$, 1, 
                    Length[$CellContext`PopB]}]]]], 
                  Column[{
                    Style["City B", "Title", 20], 
                    Style[
                    StringJoin["Latent       ", "=", 
                    ToString[
                    Length[
                    Cases[$CellContext`PopB, {
                    Blank[], 
                    Blank[], 
                    Blank[], "n", 
                    Blank[]}]]]], Blue, Bold], 
                    Style[
                    StringJoin["Contagious   ", "=", 
                    ToString[
                    Length[
                    Cases[$CellContext`PopB, {
                    Blank[], 
                    Blank[], 
                    Blank[], "i", 
                    Blank[]}]]]], Red, Bold], 
                    Style[
                    StringJoin["Susceptible  ", "=", 
                    ToString[
                    Length[
                    Cases[$CellContext`PopB, {
                    Blank[], 
                    Blank[], 
                    Blank[], "u", 
                    Blank[]}]]]], 
                    Darker[Green, 0.5], Bold], 
                    Style[
                    StringJoin["Recovered    ", "=", 
                    ToString[
                    Length[
                    Cases[$CellContext`PopB, {
                    Blank[], 
                    Blank[], 
                    Blank[], "r", 
                    Blank[]}]]]], 
                    Darker[Green, 0.5], Bold]}]}}, 
                Spacings -> {{10, 2}, 1.8}]]; 
            For[$CellContext`i$$ = 1, $CellContext`i$$ < 
              Length[$CellContext`PopA] + 1, 
              Increment[$CellContext`i$$], Which[
                And[Part[
                   Part[$CellContext`PopA, $CellContext`i$$], 
                   5] == $CellContext`Recovery$$, Part[
                   Part[$CellContext`PopA, $CellContext`i$$], 4] == "i"], Part[
                   Part[$CellContext`PopA, $CellContext`i$$], 5] = 0; Part[
                   Part[$CellContext`PopA, $CellContext`i$$], 4] = "r", 
                And[Part[
                   Part[$CellContext`PopA, $CellContext`i$$], 
                   5] == $CellContext`Incubation$$ - 1, Part[
                   Part[$CellContext`PopA, $CellContext`i$$], 4] == "n"], Part[
                   Part[$CellContext`PopA, $CellContext`i$$], 5] = 0; Part[
                   Part[$CellContext`PopA, $CellContext`i$$], 4] = "i"]; 
              Null]; For[$CellContext`i$$ = 1, $CellContext`i$$ < 
              Length[$CellContext`PopB] + 1, 
              Increment[$CellContext`i$$], Which[
                And[Part[
                   Part[$CellContext`PopB, $CellContext`i$$], 
                   5] == $CellContext`Recovery$$, Part[
                   Part[$CellContext`PopB, $CellContext`i$$], 4] == "i"], Part[
                   Part[$CellContext`PopB, $CellContext`i$$], 5] = 0; Part[
                   Part[$CellContext`PopB, $CellContext`i$$], 4] = "r", 
                And[Part[
                   Part[$CellContext`PopB, $CellContext`i$$], 
                   5] == $CellContext`Incubation$$ - 1, Part[
                   Part[$CellContext`PopB, $CellContext`i$$], 4] == "n"], Part[
                   Part[$CellContext`PopB, $CellContext`i$$], 5] = 0; Part[
                   Part[$CellContext`PopB, $CellContext`i$$], 4] = "i"]; 
              Null]; For[$CellContext`i$$ = 1, $CellContext`i$$ < 
              Length[$CellContext`PopA] + 1, 
              Increment[$CellContext`i$$], 
              If[
               Or[Part[
                  Part[$CellContext`PopA, $CellContext`i$$], 4] == "i", Part[
                  Part[$CellContext`PopA, $CellContext`i$$], 4] == "n"], Part[
                 Part[$CellContext`PopA, $CellContext`i$$], 5] = Part[
                  Part[$CellContext`PopA, $CellContext`i$$], 5] + 1]]; 
            For[$CellContext`i$$ = 1, $CellContext`i$$ < 
              Length[$CellContext`PopB] + 1, 
              Increment[$CellContext`i$$], 
              If[
               Or[Part[
                  Part[$CellContext`PopB, $CellContext`i$$], 4] == "i", Part[
                  Part[$CellContext`PopB, $CellContext`i$$], 4] == "n"], Part[
                 Part[$CellContext`PopB, $CellContext`i$$], 5] = Part[
                  Part[$CellContext`PopB, $CellContext`i$$], 5] + 
                1]]; $CellContext`TotalPeopleA = 
             Length[$CellContext`PopA]; $CellContext`PeopleMetA = 
             Random[Integer, {10, 20}]; $CellContext`TotalPeopleB = 
             Length[$CellContext`PopB]; $CellContext`PeopleMetB = 
             Random[Integer, {10, 20}]; 
            For[$CellContext`j$$ = 
               1, $CellContext`j$$ < $CellContext`TotalPeopleA + 1, 
               Increment[$CellContext`j$$], 
               
               For[$CellContext`i$$ = 
                0, $CellContext`i$$ < $CellContext`PeopleMetA, 
                
                Increment[$CellContext`i$$], $CellContext`ContactA = 
                 Random[Integer, {1, $CellContext`TotalPeopleA}]; If[Part[
                    Part[$CellContext`PopA, $CellContext`ContactA], 4] == "i", 
                  If[
                   And[Part[
                    Part[$CellContext`PopA, $CellContext`j$$], 4] != "i", Part[
                    Part[$CellContext`PopA, $CellContext`j$$], 4] != "n", Part[
                    Part[$CellContext`PopA, $CellContext`j$$], 4] != "r", 
                    Random[Integer, {1, 100}] < $CellContext`Infectious$$], 
                   Part[
                    Part[$CellContext`PopA, $CellContext`j$$], 4] = "n"], 
                  If[
                   And[Part[
                    Part[$CellContext`PopA, $CellContext`ContactA], 4] != "n",
                     Part[
                    Part[$CellContext`PopA, $CellContext`ContactA], 4] != "r",
                     Part[
                    Part[$CellContext`PopA, $CellContext`j$$], 4] == "i", 
                    Random[Real, {0, 1}] < $CellContext`Infectious$$], Part[
                    Part[$CellContext`PopA, $CellContext`ContactA], 4] = 
                   "n"]]]] 
             For[$CellContext`j$$ = 
               1, $CellContext`j$$ < $CellContext`TotalPeopleB + 1, 
               Increment[$CellContext`j$$], 
               
               For[$CellContext`i$$ = 
                0, $CellContext`i$$ < $CellContext`PeopleMetB, 
                
                Increment[$CellContext`i$$], $CellContext`ContactB = 
                 Random[Integer, {1, $CellContext`TotalPeopleB}]; If[Part[
                    Part[$CellContext`PopB, $CellContext`ContactB], 4] == "i", 
                  If[
                   And[Part[
                    Part[$CellContext`PopB, $CellContext`j$$], 4] != "i", Part[
                    Part[$CellContext`PopB, $CellContext`j$$], 4] != "n", Part[
                    Part[$CellContext`PopB, $CellContext`j$$], 4] != "r", 
                    Random[Integer, {1, 100}] < $CellContext`Infectious$$], 
                   Part[
                    Part[$CellContext`PopB, $CellContext`j$$], 4] = "n"], 
                  If[
                   And[Part[
                    Part[$CellContext`PopB, $CellContext`ContactB], 4] != "n",
                     Part[
                    Part[$CellContext`PopB, $CellContext`ContactB], 4] != "r",
                     Part[
                    Part[$CellContext`PopB, $CellContext`j$$], 4] == "i", 
                    Random[Real, {0, 1}] < $CellContext`Infectious$$], Part[
                    Part[$CellContext`PopB, $CellContext`ContactB], 4] = 
                   "n"]]]]; $CellContext`ToA = {}; $CellContext`ToB = {}; 
            For[$CellContext`i$$ = 0, 
              Length[$CellContext`ToA] < $CellContext`Transfer$$, 
              Increment[$CellContext`i$$], $CellContext`j$$ = 
               RandomChoice[$CellContext`PopB]; $CellContext`ToA = 
               Append[$CellContext`ToA, $CellContext`j$$]; $CellContext`PopB = 
               Complement[$CellContext`PopB, $CellContext`ToA]]; 
            For[$CellContext`i$$ = 0, 
              Length[$CellContext`ToB] < $CellContext`Transfer$$, 
              
              Increment[$CellContext`i$$], $CellContext`j$$ = 
               RandomChoice[$CellContext`PopA]; $CellContext`ToB = 
               Append[$CellContext`ToB, $CellContext`j$$]; $CellContext`PopA = 
               Complement[$CellContext`PopA, $CellContext`ToB]]; \
$CellContext`PopA = 
             Join[$CellContext`PopA, $CellContext`ToA]; $CellContext`PopB = 
             Join[$CellContext`PopB, $CellContext`ToB]; 
            Null]; $CellContext`moving$$ = False; Null]; 
        Part[$CellContext`Pops$$, $CellContext`w$$], UpdateInterval -> 
        If[$CellContext`moving$$, 2, Infinity]], 
      "Specifications" :> {{$CellContext`moving$$, False, ControlType -> 
         None}, {$CellContext`running$$, False, ControlType -> 
         None}, {$CellContext`Pops$$, 
         Pane[
          Grid[{{"", 
             Image[CompressedData["
1:eJzt3S1w60yWxvHsBzA0NPQwQUNB7yJD1QwR9EzV7oqta2ar1oMMDQ0FBQ0N
DQ0FAw0NDQ0N7z5vut5UdnyTG8mS+uv/q5qpzJ3Y7iTS6dOnW91/+Mt///E/
//nl5eVvI/3XH//8v//217/++e9/+lf9j3//+//8x1/+RV/81z+9vBT6z29f
/wAAAAAAAAAAAADQ0Pl8Pv3u9fXVdnMADO1yuej2PxwOm99lWTZ/M5vNXn4m
SZL57z77Hv27+Qa92/s761P0WQo7tn9oAN/1Hh+KotAdrdtfN/h0Ov3p3f1k
LqHXmjd5jEgfP3e5XOrf9/u9vvN+v3f4wwJoQd26uWcXi4VuUt2q7/GhLEvr
/b7Jc6qqUnvyPFfbRqPRZDLRFyaS1HVtsXlAJHQn6jZULpGmqRlNmChxPB71
f9lu3bdcr1cFExNJzE+h8Y6+VqCjkAJ0RZ3ybrdTfFBPraRCab9usZB6aoUL
5R4Khgog4/FYuZOiimKL7XYBntGttN1ulc+rO1anvFqtNB5RT227Xb273W7K
nRQ33n/29XodUpAEuqVbRt2u0gnlFep5db/Q5ypiKH4qeigP0VhGY7QYgifw
S+fzmVvjlx6DKsUQREjhQtl48oZUvBEziFP0mE6nGsERQBC8j+FCX7A+6hmX
y2W32xFAECql2WVZEi568jGAKBVhoAffaQBiRuVFURAu+qYAokGfftt5nh+P
R9vNAZp5TzDSNK2qivXVA9vv92YNLekHvKAujwTDER/TD6ofcJOuTF2f6uNI
MFyj9MM8vcuSGLijrussy3Rl6vq03RZ8SkHDPPh/OBxstwVRM5dimqZcir7Q
n8wEef5kGJ6uOtN5kfr6SINKRQ8zqLTdFkRBEUO9la46IobvTBFb0aMsS0pS
6In6Jl1jihgU50Oi6FEUhf6yu92O6IEOqT8ye1/4sj0Omrper6vVajKZbDYb
ogeeVNd1mqbqj4gYMbjdboob6iNYbop2dAmZHfl4WDU2yj0Wb+gs0EhVVUmS
aHhiuyGwRimHroHtdsuwBb90Pp+VYyyXS55rgCLGer2ezWYMW/AZDUx0kaiL
YWCCj9SVaMySZRldCf7B4XAwSanthsBRXCH4iN4E30RGih9vo9fNZsPoFY1Q
AYuZugxFDBb5oB0z48bDcVHZ7Xbz+Zx9dfAMDVs0vF2tVnQ9weNvjW6ZPogV
YgEzYxNyS3SL6ypg9AvoD3lsePibYhj0TcEgh8SQuN4CQPzH8Mhv/cXfDnbR
Z3mHXBEu4Dr0SFVVxHk4wuS96/XadkPwFSWHy+WSsQmcst1udVnabgV+TlF9
tVrZbgXwE0qDF4sFPZprFM/ZGwEuOx6PGkFr5GK7IfiNYrgiOQdvwX11XVN8
c4Git/4QbKABX7y+vvIstl2K25xTAO+Y65ZT/6wgbsNfypMVOsiTB8Y4Eb67
3+9ZllGXGwx1aYRBoWO5XO52O9sNCR/z4AjMarViQWmvzHJQ260AOsaC0v4o
0+B3i1CpT2S1c+eOx6OGJ7ZbAfRIoxXWPHfIzJ5Q00DwlFEzw9IJs06D2RNE
Qnk16zqedLlcWKeBqCiv1jXPKujWzJo6VoQiNuapKxait0DURczItFswS3AZ
5SFm5uB7KnvfR1UZ+PE2KaDQwUzidzCLDbxT1q3cm9DxNUUM1uoDH7FS+mv8
foCfYhX6Z1gUCnyBot+j2+02m82YdQI+oy5V9wjLmT7Ksozj8ICvKWgodJCT
G4zdgG+iBmhQ1gAaodBBWQNoikIHZQ2ghZgLHZQ1gNbiLHRQ1gCeFFuhg7IG
8LzYCh2UNYBOxFPooKwBdCiGQgdlDaBzYRc6FC6SJKGsAXQr7EIHG/IAPQn1
YDJ2PAN6FeR0w3w+P51OtlsBBOt6vU6n05C65v1+n+e57VYAgQtpsvJ2uyVJ
omBouyFA4JRspGkaxoFNCoAKg7ZbAUThdDrN53PbrXiWQt9sNrPdCiAiASzn
UNbEWY3AkK7Xa5Ik/h70VpZlURS2WwFEx99bT0FPIxTKoYAVuvt8LJAGMMgC
/OVjabGu6zRNbbcCiJqGKhqw2G5FA57mSEBI/Fo6FdKiNcBrvtyM9/t9Op36
EuKAsPlyP/oS34BIeHFLTiYT94MbEA/3U47D4ZBlme1WAPh/HE85mEYBHORy
ykGyATjL2ZSDZANw1u12m0wmru0GRrIBOM7BnXBINgDHubYBaRhbDAHBcyrl
CHIDdiA87qQcPj6uC0TLkZSDZAPwiAspB8kG4B3rfb31BgBoym5370LCA6AF
i+eubrfb9Xpt5aMBPKOqquVyaeWjlWxcLhcrHw3gGRomTCaT4c9YOR6Pi8Vi
4A8F0BUrE7JURAGvDV8dpSIKBGDgx8qoiAIBGPg4SCqiQACG3JSDs9iAYOR5
vt/vB/ggjVA0ThnggwD0TUFDoWOAD2KQAgRDg5TxeNz3UIVBChCYAYYqDFKA
wAywhpNBChCYvtecM0gBgrRcLquq6unNGaQAQep1qMJhB0CQ+ptVuVwu0+m0
87cF4ALlG8o6On9bixt9AOhbTwfIDrYeFcDwehpQaPgz/O5AAAbT+SoLTnIE
glcURVmWHb7h5k2HbwjANYfDIcuyDt+QGVggeN3Oxup9RqNRJ28FwGVpmtZ1
3clbUdwAItHhJucUN4BIdFji6GkhGQDX3G638XjcyVuxcgOIRyerOOweXQ1g
YJ08U9/TqnUAburkSbReN/QA4JpOhhhJkpzP507aA8ALo9HomdVfrPgCIvTk
6i+KokCEnnzAbeBjZwG44MnZkA4XnQLwxZOPlrBSFIjQk6tGWSkKxGkymVyv
1xYv1Kv02s7bA8B9rccaA5waCcBNrWubTKYA0Wo9pcKpjkC0Wm/EwYEpQLRa
r/nscKdBAH5pPRXbeiIGQABaLMPocLswAD5qcfoJT7QBkcuy7HA4NHpJ5yc3
AfBLiyUcLN4AIrfdbtfrdaOXcGYKELkWG43yBD0QuRbFCrYjBiLXYhcOdt4A
Ine5XKbTaaOXKM4o2vTTHAAeaLGIq5Oz3gB47eXlpdH3s8gcQNM40DTOAAhP
02PXiBsAmtY5iRsAGsWNFvMvAMJD3ADQFHEDQFONNgslbgD40fB5EzbtAfCj
Ydx48lRZAGEgbgBoirgBoKlGcaOu6zRN+2wOAA80ihvMpwD4QdwA0BxxA0BT
rBcF0FSjuHG/30ejUZ/NAeABnqMH0BRxA0BTTY+WbnGEPYDANN2fnP3MAYxG
o/v9/v3vT9O0ruv+2gPAfU3rFZy7BESuxXoMzocFInc+n5MkafSSoijKsuyp
PQDc1+K5+M2bfpoDwAOHwyHLskYv2e12q9Wqp/YAcF9VVcvlstFL9vt9nuc9
tQeA+7bb7Xq9bvQStu4BIteiyHm9XieTSU/tAeC+xWJxPB6bvoql5kDM2i0a
b/pIC4CQtHu4Ncuyw+HQeWMAuK/15l2r1Wq323XeHgDua30YCks4gGi1WLxh
tFgtBiAM6/V6u922eGGLp1oAhOGZ8mbTXTsAhEE5gzKHdq9l9x4gQk+eaMDT
9ECEXl9fZ7NZ65czpQJESNmCcobWLz8ej4vFosP2AHDfk2u3brfbeDzusD0A
3NfuibaPJpPJ9Xrtqj0A3Pf8Xf985AHgkU720GCjUSAqnSwUb/14CwAfdfJA
6/1+H4/HrBoFItHVxjts4ANEosM8gY04gEh0WJfggXogEh3Og7D6C4hEt+su
2u1sDMAv3Z5iwIOxQPA6X3RBiQMIXueLPFnFAQSvjxUXSmCUxnT7ngAc0dP0
B3v4AAFrffDB157cOgyAyxQ0FDr6eGdmY4FQ9XeOfH8RCYBFdV2nadrTm7Pd
KBCk1qezfcf9fp9MJj0lMwBs6bsEwVAFCEyvgxSDoQoQmF4HKQZDFSAww8yT
MlQBgjHAIMVgqAIEY4BBisFQBQjGkIs52XEUCMDAp5zwrAoQgDzP9/v9kJ+Y
pmld10N+IoAOXa9XDVIG3lSnp6duAQzDys4YVEcBryVJcj6fh/9cqqOApyye
+0x1FPDU8BXRj6iOAt6xUhH9iPMRAO+4UGHgtHrAI47MaJByAB5x52ACUg7A
C0o2ptPp9Xq13ZDf7Pf7PM9ttwLAL7iTbPxwLIgB+CkH71On4hiARw7epA6G
MgAf2VpY/jUHoxkAw9l5T1IOwFkuT3qScgAOcjbZMJRyjMdji+veATxyOdkw
XFj6DuCd48mGYf1ROwAfLRaL4/FouxW/RsoBOMKjTXJut1uSJEysANa5X9n4
iF2LAevKsiyKwnYrmmErMMAiJfxKNrxL+z0aWAHh8ff8dwqkgBWDnTLfB1ae
A1b4VQ59xJY+wMDCeNxjPp+fTifbrQCiEMzCS+VLGmoF8IMA7rN7oFK31uv1
dru13QogcMfjcbFY2G5FZyiQAn3TXTabzRzc0esZXjyUB/hLKb0Se9ut6J4v
z+UB3rlcLkmSBFlFVAalPCrIHw2wS8m8UnrbrehLGDPLgFNieIw07MAIDCyS
NP52u+nH1HDMdkMA7wU5h/KZuq7n83nwERLom78PvbZDoQN4UgxljUcUOoDW
IilrPKLQAbQTVVnjEYUOoIXYyhqPKHQAjcRZ1nhEoQP4pmjLGo8odADfEXlZ
4xGFDuCXKGs8otABfIGyxmcIp8BPsdnmF/RrybKMPTqAjy6Xy2w2u91uthvi
LoUOxVWvj34AOqSgMZ/PmTX4JcVVhQ6KxoDuBQUNutFvIsYCyr0XiwVnDzWi
GKvQwZgO0WI/3nYUafWro4aMCDG3+IzAzpEBvmPzxnYr/MZyF0SFBZBdIfwi
Evv9Ps9z260IhyKw4rDtVgA90qg8yzIKet0K6aBt4B+wkrwnZhU6oQPhYdVB
rxQ6lHWUZWm7IUBnNDwhaAygKArKpAiD8mdl0QSNYShuMDkL3ylzVv5MTWNI
VVVRfIa/1Pcpc7bdihgdDofFYkGOB+8oW2asbdHpdJrP59fr1XZDgG8x04I8
e2KdmfjmoXu4T7mxMmRO/XCE2UiN7U3gMmXFyo3ZT8MpZmck9iuAm9S1sQGm
mxQ6WFAKBylccLKYy8yCUirVcEdVVco0mPVzn+IGkyywTr3Y8g2rjHxxOp2U
GVKDgi3mAGjmW71jyteMWTA8hQsOgPYaYxYMibFJMBizYBiMTQLDmAV9Y2wS
KsYs6ANjk+AxZkG3GJtEgjELusLYJDaKGzwvgNbU+2RZxtgkQnVdq7NYrVas
AUYj2+12Op3yOHzMdrtdkiQ8DYfvOJ1OulrW6zVpBpRz5nk+n88ZqOIzXCT4
KTPVQleCRxqYkJTiM4oYZujK/j8wTBFMvQlFMHxNGeniDRutxEyXwXK5ZNIN
jSjlUGq62WwYtkSoLEv99VnNhRYUMRQ3lKYy4xaP0+mkHKMoCgYmeMb5fM6y
jOgRPHMWj9R1bbstCIQGuYoe5K5BUo+gHINDCtAT5R7L5XI6nRI9wqCIoUxS
PQI5Bvp2uVwUPSaTyW63o2rqKUV+xX9FDKZLMKTr9bparXTtbbdbami+UJwv
y1J/NUV+5tlhi6LHer3WdbjZbIgeLlPEUH6ov1RRFEQMuEARQ3FD16QyEPYT
cw1/HbhM16d6tMlkkuc5K9VdUNe1qUQpbhAx4Lj9fr9YLEzpg8t1ePqdmwWf
aZpWVUXtGh7RIHq9XpN+DEm/Z/229TsvioIH3uG19/RD42tm/fqg36qZ29Lv
mafdERKlH7vdbjabEUC6oozCTGbpt6rfLbMkCBgB5EkKF5vNJnmz3W4JF4jK
ewDReHy5XCrBZgXIZ+73++FwKIpCwdbsb0D5ApG7Xq9VVeV5Ph6P0zRV7s3j
EoaSMWUU8/l8NBplWVaWJdkF8EgRQ3eKoodiyGKx0NexPaSp34DSMEUJpWFm
j77YfgNAaxqzHI9H3TXqbV9eXkweolw9vAUhGoPoJzWn9yqv0E+6Wq2C/EmB
gZk8xPTCYo6q3O/3PpZVz+ezwoLar4QqSRLFCn2h/6m8gjVaQE/UEesW042W
57kyeWUj+m99rX/R/ejU3aesSe0xUcJs86vWKlYoAOpflGZQ3gRsUdah3EN3
ou5Hk+2boY1JS0yRxOgj+denmzcvy1Ifp1GGPtcEtPF4rK9NlKiqinov4Djd
pCYtMUUSQ2OclzeKLfMH+s7NJx6/+eV3ChHmX4qi0Hfudjt9ro8DKABf01jm
9ECZyWdx4/Gbbf8EAAAAAAAAAAAAgKP+DwAVnG4=
              "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
             Column[{
               Style["City A", "Title", 20], 
               Style["Latent       =", 
                RGBColor[0, 0, 1], Bold], 
               Style["Contagious   =", 
                RGBColor[1, 0, 0], Bold], 
               Style["Susceptible  =", 
                RGBColor[0., 0.5, 0.], Bold], 
               Style["Recovered    =", 
                RGBColor[0., 0.5, 0.], Bold]}]}, {"", 
             Image[CompressedData["
1:eJzt3S1w60yWxvHsBzA0NPQwQUNB7yJD1QwR9EzV7oqta2ar1oMMDQ0FBQ0N
DQ0FAw0NDQ0N7z5vut5UdnyTG8mS+uv/q5qpzJ3Y7iTS6dOnW91/+Mt///E/
//nl5eVvI/3XH//8v//217/++e9/+lf9j3//+//8x1/+RV/81z+9vBT6z29f
/wAAAAAAAAAAAADQ0Pl8Pv3u9fXVdnMADO1yuej2PxwOm99lWTZ/M5vNXn4m
SZL57z77Hv27+Qa92/s761P0WQo7tn9oAN/1Hh+KotAdrdtfN/h0Ov3p3f1k
LqHXmjd5jEgfP3e5XOrf9/u9vvN+v3f4wwJoQd26uWcXi4VuUt2q7/GhLEvr
/b7Jc6qqUnvyPFfbRqPRZDLRFyaS1HVtsXlAJHQn6jZULpGmqRlNmChxPB71
f9lu3bdcr1cFExNJzE+h8Y6+VqCjkAJ0RZ3ybrdTfFBPraRCab9usZB6aoUL
5R4Khgog4/FYuZOiimKL7XYBntGttN1ulc+rO1anvFqtNB5RT227Xb273W7K
nRQ33n/29XodUpAEuqVbRt2u0gnlFep5db/Q5ypiKH4qeigP0VhGY7QYgifw
S+fzmVvjlx6DKsUQREjhQtl48oZUvBEziFP0mE6nGsERQBC8j+FCX7A+6hmX
y2W32xFAECql2WVZEi568jGAKBVhoAffaQBiRuVFURAu+qYAokGfftt5nh+P
R9vNAZp5TzDSNK2qivXVA9vv92YNLekHvKAujwTDER/TD6ofcJOuTF2f6uNI
MFyj9MM8vcuSGLijrussy3Rl6vq03RZ8SkHDPPh/OBxstwVRM5dimqZcir7Q
n8wEef5kGJ6uOtN5kfr6SINKRQ8zqLTdFkRBEUO9la46IobvTBFb0aMsS0pS
6In6Jl1jihgU50Oi6FEUhf6yu92O6IEOqT8ye1/4sj0Omrper6vVajKZbDYb
ogeeVNd1mqbqj4gYMbjdboob6iNYbop2dAmZHfl4WDU2yj0Wb+gs0EhVVUmS
aHhiuyGwRimHroHtdsuwBb90Pp+VYyyXS55rgCLGer2ezWYMW/AZDUx0kaiL
YWCCj9SVaMySZRldCf7B4XAwSanthsBRXCH4iN4E30RGih9vo9fNZsPoFY1Q
AYuZugxFDBb5oB0z48bDcVHZ7Xbz+Zx9dfAMDVs0vF2tVnQ9weNvjW6ZPogV
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
9ECZyWdx4/Gbbf8EAAAAAAAAAAAAgKP+DwAVnG4=
              "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
             Column[{
               Style["City B", "Title", 20], 
               Style["Latent       =", 
                RGBColor[0, 0, 1], Bold], 
               Style["Contagious   =", 
                RGBColor[1, 0, 0], Bold], 
               Style["Susceptible  =", 
                RGBColor[0., 0.5, 0.], Bold], 
               Style["Recovered    =", 
                RGBColor[0., 0.5, 0.], Bold]}]}}, 
           Spacings -> {{10, 2}, 1.8}], {200, 400}], ControlType -> 
         None}, {$CellContext`InfectedA$$, 1, ControlType -> 
         None}, {$CellContext`InfectedB$$, 1, ControlType -> 
         None}, {$CellContext`Days$$, 7, ControlType -> 
         None}, {$CellContext`Recovery$$, 3, ControlType -> 
         None}, {$CellContext`Incubation$$, 3, ControlType -> 
         None}, {$CellContext`Infectious$$, 10, ControlType -> 
         None}, {$CellContext`Transfer$$, 0, ControlType -> 
         None}, {$CellContext`w$$, 1, ControlType -> 
         None}, {$CellContext`TotalPop$$, 10, ControlType -> 
         None}, {$CellContext`i$$, 0, ControlType -> None}, {$CellContext`j$$,
          0, ControlType -> None}, {{$CellContext`w$$, 1, ""}, 1, 
         Dynamic[$CellContext`Days$$], 1, Appearance -> "Labeled", 
         ControlPlacement -> 1}, {{$CellContext`Days$$, 7, ""}, 1, 21, 1, 
         ControlType -> Slider, Appearance -> "Labeled", ControlPlacement -> 
         2}, {{$CellContext`TotalPop$$, 10, ""}, 1, 100, 1, ControlType -> 
         Slider, Appearance -> "Labeled", ControlPlacement -> 
         3}, {{$CellContext`InfectedA$$, 1, ""}, 0, 
         Dynamic[$CellContext`TotalPop$$], 1, ControlType -> Slider, 
         Appearance -> "Labeled", ControlPlacement -> 
         4}, {{$CellContext`InfectedB$$, 1, ""}, 0, 
         Dynamic[$CellContext`TotalPop$$], 1, ControlType -> Slider, 
         Appearance -> "Labeled", ControlPlacement -> 
         5}, {{$CellContext`Transfer$$, 0, ""}, 0, 
         Dynamic[$CellContext`TotalPop$$], 1, ControlType -> Slider, 
         Appearance -> "Labeled", ControlPlacement -> 
         6}, {{$CellContext`Infectious$$, 0.1, ""}, 0, 1, 0.01, ControlType -> 
         Slider, Appearance -> "Labeled", ControlPlacement -> 
         7}, {{$CellContext`Incubation$$, 3, ""}, 1, 7, 1, ControlType -> 
         Slider, Appearance -> "Labeled", ControlPlacement -> 
         8}, {{$CellContext`Recovery$$, 3, ""}, 1, 7, 1, ControlType -> 
         Slider, Appearance -> "Labeled", ControlPlacement -> 9}, 
        Column[{
          Dynamic[
           Button[
            StringJoin[
             If[$CellContext`running$$, "reset", "run"], " simulation"], {
             If[
              Not[$CellContext`running$$], $CellContext`moving$$ = 
              True], $CellContext`running$$ = Not[$CellContext`running$$]}, 
            ImageSize -> 225, Alignment -> Center]], 
          Dynamic[
           If[$CellContext`running$$, 
            Column[{
              Column[{
                Spacer[{0, 10}], "day (morning)", 
                Manipulate`Place[1]}, Left], 
              Column[{
                Spacer[{0, 10}], 
                Row[{"duration of simulation = ", 
                  ToString[$CellContext`Days$$]}], 
                Spacer[{0, 15}], 
                Row[{"city population = ", 
                  ToString[$CellContext`TotalPop$$]}], 
                Spacer[{0, 15}], 
                Row[{"initial infected cases, City A = ", 
                  ToString[$CellContext`InfectedA$$]}], 
                Spacer[{0, 15}], 
                Row[{"initial infected cases, City B = ", 
                  ToString[$CellContext`InfectedB$$]}], 
                Spacer[{0, 15}], 
                Row[{"travellers/day = ", 
                  ToString[$CellContext`Transfer$$]}], 
                Spacer[{0, 15}], 
                Row[{"chance of infection on contact = ", 
                  ToString[$CellContext`Infectious$$]}], 
                Spacer[{0, 15}], 
                Row[{"latency before contagious state [days] = ", 
                  ToString[$CellContext`Incubation$$]}], 
                Spacer[{0, 15}], 
                Row[{"duration of contagious state [days] = ", 
                  ToString[$CellContext`Recovery$$]}]}, Right]}, Center], 
            ""]], 
          Dynamic[
           If[
            Not[$CellContext`running$$], 
            Column[{"duration of simulation [days]", 
              Manipulate`Place[2], "city population", 
              Manipulate`Place[3], "initial infected cases, City A", 
              Manipulate`Place[4], "initial infected cases, City B", 
              Manipulate`Place[5], "travellers/day", 
              Manipulate`Place[6], "chance of infection on contact", 
              Manipulate`Place[7], "latency before contagious state [days]", 
              Manipulate`Place[8], "duration of contagious state [days]", 
              Manipulate`Place[9]}, Left, 0.45], ""]]}, Center]}, 
      "Options" :> {
       ControlPlacement -> Left, ContentSize -> {340, 400}, FrameMargins -> 
        0}, "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{633., {216., 221.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.551043162209744*^9, 3.5510436253077993`*^9, 
  3.551044137983535*^9, 3.551044452052223*^9, 3.5510450722867823`*^9, 
  3.551045616724972*^9, 3.551045681033531*^9, 3.551045711535167*^9, 
  3.5510466249608626`*^9, 3.5510467849698353`*^9, 3.5510475765080357`*^9, 
  3.551047662502887*^9},
 CellID->312576312]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ManipulateCaptionSection"],

Cell["\<\
This demonstration models the spread of a disease given certain parameters \
set by the sliders. People can see how the disease spreads over a time period \
and adjust parameters of the disease to see certain observations.\
\>", "ManipulateCaption",
 CellChangeTimes->{{3.551001773645807*^9, 3.5510019200560117`*^9}, {
  3.5510424921931973`*^9, 3.551042494365304*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ThumbnailSection"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`Days$$ = 7, $CellContext`i$$ = 
    0, $CellContext`Incubation$$ = 3, $CellContext`InfectedA$$ = 
    1, $CellContext`InfectedB$$ = 1, $CellContext`Infectious$$ = 
    0.1, $CellContext`j$$ = 0, $CellContext`moving$$ = 
    False, $CellContext`Pops$$ = Pane[
     Grid[{{"", 
        Image[CompressedData["
1:eJzt3S1w60yWxvHsBzA0NPQwQUNB7yJD1QwR9EzV7oqta2ar1oMMDQ0FBQ0N
DQ0FAw0NDQ0N7z5vut5UdnyTG8mS+uv/q5qpzJ3Y7iTS6dOnW91/+Mt///E/
//nl5eVvI/3XH//8v//217/++e9/+lf9j3//+//8x1/+RV/81z+9vBT6z29f
/wAAAAAAAAAAAADQ0Pl8Pv3u9fXVdnMADO1yuej2PxwOm99lWTZ/M5vNXn4m
SZL57z77Hv27+Qa92/s761P0WQo7tn9oAN/1Hh+KotAdrdtfN/h0Ov3p3f1k
LqHXmjd5jEgfP3e5XOrf9/u9vvN+v3f4wwJoQd26uWcXi4VuUt2q7/GhLEvr
/b7Jc6qqUnvyPFfbRqPRZDLRFyaS1HVtsXlAJHQn6jZULpGmqRlNmChxPB71
f9lu3bdcr1cFExNJzE+h8Y6+VqCjkAJ0RZ3ybrdTfFBPraRCab9usZB6aoUL
5R4Khgog4/FYuZOiimKL7XYBntGttN1ulc+rO1anvFqtNB5RT227Xb273W7K
nRQ33n/29XodUpAEuqVbRt2u0gnlFep5db/Q5ypiKH4qeigP0VhGY7QYgifw
S+fzmVvjlx6DKsUQREjhQtl48oZUvBEziFP0mE6nGsERQBC8j+FCX7A+6hmX
y2W32xFAECql2WVZEi568jGAKBVhoAffaQBiRuVFURAu+qYAokGfftt5nh+P
R9vNAZp5TzDSNK2qivXVA9vv92YNLekHvKAujwTDER/TD6ofcJOuTF2f6uNI
MFyj9MM8vcuSGLijrussy3Rl6vq03RZ8SkHDPPh/OBxstwVRM5dimqZcir7Q
n8wEef5kGJ6uOtN5kfr6SINKRQ8zqLTdFkRBEUO9la46IobvTBFb0aMsS0pS
6In6Jl1jihgU50Oi6FEUhf6yu92O6IEOqT8ye1/4sj0Omrper6vVajKZbDYb
ogeeVNd1mqbqj4gYMbjdboob6iNYbop2dAmZHfl4WDU2yj0Wb+gs0EhVVUmS
aHhiuyGwRimHroHtdsuwBb90Pp+VYyyXS55rgCLGer2ezWYMW/AZDUx0kaiL
YWCCj9SVaMySZRldCf7B4XAwSanthsBRXCH4iN4E30RGih9vo9fNZsPoFY1Q
AYuZugxFDBb5oB0z48bDcVHZ7Xbz+Zx9dfAMDVs0vF2tVnQ9weNvjW6ZPogV
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
9ECZyWdx4/Gbbf8EAAAAAAAAAAAAgKP+DwAVnG4=
         "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
        Column[{
          Style["City A", "Title", 20], 
          Style["Latent       =", 
           RGBColor[0, 0, 1], Bold], 
          Style["Contagious   =", 
           RGBColor[1, 0, 0], Bold], 
          Style["Susceptible  =", 
           RGBColor[0., 0.5, 0.], Bold], 
          Style["Recovered    =", 
           RGBColor[0., 0.5, 0.], Bold]}]}, {"", 
        Image[CompressedData["
1:eJzt3S1w60yWxvHsBzA0NPQwQUNB7yJD1QwR9EzV7oqta2ar1oMMDQ0FBQ0N
DQ0FAw0NDQ0N7z5vut5UdnyTG8mS+uv/q5qpzJ3Y7iTS6dOnW91/+Mt///E/
//nl5eVvI/3XH//8v//217/++e9/+lf9j3//+//8x1/+RV/81z+9vBT6z29f
/wAAAAAAAAAAAADQ0Pl8Pv3u9fXVdnMADO1yuej2PxwOm99lWTZ/M5vNXn4m
SZL57z77Hv27+Qa92/s761P0WQo7tn9oAN/1Hh+KotAdrdtfN/h0Ov3p3f1k
LqHXmjd5jEgfP3e5XOrf9/u9vvN+v3f4wwJoQd26uWcXi4VuUt2q7/GhLEvr
/b7Jc6qqUnvyPFfbRqPRZDLRFyaS1HVtsXlAJHQn6jZULpGmqRlNmChxPB71
f9lu3bdcr1cFExNJzE+h8Y6+VqCjkAJ0RZ3ybrdTfFBPraRCab9usZB6aoUL
5R4Khgog4/FYuZOiimKL7XYBntGttN1ulc+rO1anvFqtNB5RT227Xb273W7K
nRQ33n/29XodUpAEuqVbRt2u0gnlFep5db/Q5ypiKH4qeigP0VhGY7QYgifw
S+fzmVvjlx6DKsUQREjhQtl48oZUvBEziFP0mE6nGsERQBC8j+FCX7A+6hmX
y2W32xFAECql2WVZEi568jGAKBVhoAffaQBiRuVFURAu+qYAokGfftt5nh+P
R9vNAZp5TzDSNK2qivXVA9vv92YNLekHvKAujwTDER/TD6ofcJOuTF2f6uNI
MFyj9MM8vcuSGLijrussy3Rl6vq03RZ8SkHDPPh/OBxstwVRM5dimqZcir7Q
n8wEef5kGJ6uOtN5kfr6SINKRQ8zqLTdFkRBEUO9la46IobvTBFb0aMsS0pS
6In6Jl1jihgU50Oi6FEUhf6yu92O6IEOqT8ye1/4sj0Omrper6vVajKZbDYb
ogeeVNd1mqbqj4gYMbjdboob6iNYbop2dAmZHfl4WDU2yj0Wb+gs0EhVVUmS
aHhiuyGwRimHroHtdsuwBb90Pp+VYyyXS55rgCLGer2ezWYMW/AZDUx0kaiL
YWCCj9SVaMySZRldCf7B4XAwSanthsBRXCH4iN4E30RGih9vo9fNZsPoFY1Q
AYuZugxFDBb5oB0z48bDcVHZ7Xbz+Zx9dfAMDVs0vF2tVnQ9weNvjW6ZPogV
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
9ECZyWdx4/Gbbf8EAAAAAAAAAAAAgKP+DwAVnG4=
         "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
        Column[{
          Style["City B", "Title", 20], 
          Style["Latent       =", 
           RGBColor[0, 0, 1], Bold], 
          Style["Contagious   =", 
           RGBColor[1, 0, 0], Bold], 
          Style["Susceptible  =", 
           RGBColor[0., 0.5, 0.], Bold], 
          Style["Recovered    =", 
           RGBColor[0., 0.5, 0.], Bold]}]}}, Spacings -> {{10, 2}, 1.8}], {
     200, 400}], $CellContext`Recovery$$ = 3, $CellContext`running$$ = 
    False, $CellContext`TotalPop$$ = 10, $CellContext`Transfer$$ = 
    0, $CellContext`w$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`moving$$], False}, {
      Hold[$CellContext`running$$], False}, {
      Hold[$CellContext`Pops$$], 
      Pane[
       Grid[{{"", 
          Image[CompressedData["
1:eJzt3S1w60yWxvHsBzA0NPQwQUNB7yJD1QwR9EzV7oqta2ar1oMMDQ0FBQ0N
DQ0FAw0NDQ0N7z5vut5UdnyTG8mS+uv/q5qpzJ3Y7iTS6dOnW91/+Mt///E/
//nl5eVvI/3XH//8v//217/++e9/+lf9j3//+//8x1/+RV/81z+9vBT6z29f
/wAAAAAAAAAAAADQ0Pl8Pv3u9fXVdnMADO1yuej2PxwOm99lWTZ/M5vNXn4m
SZL57z77Hv27+Qa92/s761P0WQo7tn9oAN/1Hh+KotAdrdtfN/h0Ov3p3f1k
LqHXmjd5jEgfP3e5XOrf9/u9vvN+v3f4wwJoQd26uWcXi4VuUt2q7/GhLEvr
/b7Jc6qqUnvyPFfbRqPRZDLRFyaS1HVtsXlAJHQn6jZULpGmqRlNmChxPB71
f9lu3bdcr1cFExNJzE+h8Y6+VqCjkAJ0RZ3ybrdTfFBPraRCab9usZB6aoUL
5R4Khgog4/FYuZOiimKL7XYBntGttN1ulc+rO1anvFqtNB5RT227Xb273W7K
nRQ33n/29XodUpAEuqVbRt2u0gnlFep5db/Q5ypiKH4qeigP0VhGY7QYgifw
S+fzmVvjlx6DKsUQREjhQtl48oZUvBEziFP0mE6nGsERQBC8j+FCX7A+6hmX
y2W32xFAECql2WVZEi568jGAKBVhoAffaQBiRuVFURAu+qYAokGfftt5nh+P
R9vNAZp5TzDSNK2qivXVA9vv92YNLekHvKAujwTDER/TD6ofcJOuTF2f6uNI
MFyj9MM8vcuSGLijrussy3Rl6vq03RZ8SkHDPPh/OBxstwVRM5dimqZcir7Q
n8wEef5kGJ6uOtN5kfr6SINKRQ8zqLTdFkRBEUO9la46IobvTBFb0aMsS0pS
6In6Jl1jihgU50Oi6FEUhf6yu92O6IEOqT8ye1/4sj0Omrper6vVajKZbDYb
ogeeVNd1mqbqj4gYMbjdboob6iNYbop2dAmZHfl4WDU2yj0Wb+gs0EhVVUmS
aHhiuyGwRimHroHtdsuwBb90Pp+VYyyXS55rgCLGer2ezWYMW/AZDUx0kaiL
YWCCj9SVaMySZRldCf7B4XAwSanthsBRXCH4iN4E30RGih9vo9fNZsPoFY1Q
AYuZugxFDBb5oB0z48bDcVHZ7Xbz+Zx9dfAMDVs0vF2tVnQ9weNvjW6ZPogV
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
9ECZyWdx4/Gbbf8EAAAAAAAAAAAAgKP+DwAVnG4=
           "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
          Column[{
            Style["City A", "Title", 20], 
            Style["Latent       =", 
             RGBColor[0, 0, 1], Bold], 
            Style["Contagious   =", 
             RGBColor[1, 0, 0], Bold], 
            Style["Susceptible  =", 
             RGBColor[0., 0.5, 0.], Bold], 
            Style["Recovered    =", 
             RGBColor[0., 0.5, 0.], Bold]}]}, {"", 
          Image[CompressedData["
1:eJzt3S1w60yWxvHsBzA0NPQwQUNB7yJD1QwR9EzV7oqta2ar1oMMDQ0FBQ0N
DQ0FAw0NDQ0N7z5vut5UdnyTG8mS+uv/q5qpzJ3Y7iTS6dOnW91/+Mt///E/
//nl5eVvI/3XH//8v//217/++e9/+lf9j3//+//8x1/+RV/81z+9vBT6z29f
/wAAAAAAAAAAAADQ0Pl8Pv3u9fXVdnMADO1yuej2PxwOm99lWTZ/M5vNXn4m
SZL57z77Hv27+Qa92/s761P0WQo7tn9oAN/1Hh+KotAdrdtfN/h0Ov3p3f1k
LqHXmjd5jEgfP3e5XOrf9/u9vvN+v3f4wwJoQd26uWcXi4VuUt2q7/GhLEvr
/b7Jc6qqUnvyPFfbRqPRZDLRFyaS1HVtsXlAJHQn6jZULpGmqRlNmChxPB71
f9lu3bdcr1cFExNJzE+h8Y6+VqCjkAJ0RZ3ybrdTfFBPraRCab9usZB6aoUL
5R4Khgog4/FYuZOiimKL7XYBntGttN1ulc+rO1anvFqtNB5RT227Xb273W7K
nRQ33n/29XodUpAEuqVbRt2u0gnlFep5db/Q5ypiKH4qeigP0VhGY7QYgifw
S+fzmVvjlx6DKsUQREjhQtl48oZUvBEziFP0mE6nGsERQBC8j+FCX7A+6hmX
y2W32xFAECql2WVZEi568jGAKBVhoAffaQBiRuVFURAu+qYAokGfftt5nh+P
R9vNAZp5TzDSNK2qivXVA9vv92YNLekHvKAujwTDER/TD6ofcJOuTF2f6uNI
MFyj9MM8vcuSGLijrussy3Rl6vq03RZ8SkHDPPh/OBxstwVRM5dimqZcir7Q
n8wEef5kGJ6uOtN5kfr6SINKRQ8zqLTdFkRBEUO9la46IobvTBFb0aMsS0pS
6In6Jl1jihgU50Oi6FEUhf6yu92O6IEOqT8ye1/4sj0Omrper6vVajKZbDYb
ogeeVNd1mqbqj4gYMbjdboob6iNYbop2dAmZHfl4WDU2yj0Wb+gs0EhVVUmS
aHhiuyGwRimHroHtdsuwBb90Pp+VYyyXS55rgCLGer2ezWYMW/AZDUx0kaiL
YWCCj9SVaMySZRldCf7B4XAwSanthsBRXCH4iN4E30RGih9vo9fNZsPoFY1Q
AYuZugxFDBb5oB0z48bDcVHZ7Xbz+Zx9dfAMDVs0vF2tVnQ9weNvjW6ZPogV
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
9ECZyWdx4/Gbbf8EAAAAAAAAAAAAgKP+DwAVnG4=
           "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
          Column[{
            Style["City B", "Title", 20], 
            Style["Latent       =", 
             RGBColor[0, 0, 1], Bold], 
            Style["Contagious   =", 
             RGBColor[1, 0, 0], Bold], 
            Style["Susceptible  =", 
             RGBColor[0., 0.5, 0.], Bold], 
            Style["Recovered    =", 
             RGBColor[0., 0.5, 0.], Bold]}]}}, Spacings -> {{10, 2}, 1.8}], {
       200, 400}]}, {
      Hold[$CellContext`InfectedA$$], 1}, {
      Hold[$CellContext`InfectedB$$], 1}, {
      Hold[$CellContext`Days$$], 7}, {
      Hold[$CellContext`Recovery$$], 3}, {
      Hold[$CellContext`Incubation$$], 3}, {
      Hold[$CellContext`Infectious$$], 10}, {
      Hold[$CellContext`Transfer$$], 0}, {
      Hold[$CellContext`w$$], 1}, {
      Hold[$CellContext`TotalPop$$], 10}, {
      Hold[$CellContext`i$$], 0}, {
      Hold[$CellContext`j$$], 0}, {{
       Hold[$CellContext`w$$], 1, ""}, 1, 
      Dynamic[$CellContext`Days$$], 1}, {{
       Hold[$CellContext`Days$$], 7, ""}, 1, 21, 1}, {{
       Hold[$CellContext`TotalPop$$], 10, ""}, 1, 100, 1}, {{
       Hold[$CellContext`InfectedA$$], 1, ""}, 0, 
      Dynamic[$CellContext`TotalPop$$], 1}, {{
       Hold[$CellContext`InfectedB$$], 1, ""}, 0, 
      Dynamic[$CellContext`TotalPop$$], 1}, {{
       Hold[$CellContext`Transfer$$], 0, ""}, 0, 
      Dynamic[$CellContext`TotalPop$$], 1}, {{
       Hold[$CellContext`Infectious$$], 0.1, ""}, 0, 1, 0.01}, {{
       Hold[$CellContext`Incubation$$], 3, ""}, 1, 7, 1}, {{
       Hold[$CellContext`Recovery$$], 3, ""}, 1, 7, 1}, {
      Hold[
       Column[{
         Dynamic[
          Button[
           StringJoin[
            If[$CellContext`running$$, "reset", "run"], " simulation"], {
            If[
             Not[$CellContext`running$$], $CellContext`moving$$ = 
             True], $CellContext`running$$ = Not[$CellContext`running$$]}, 
           ImageSize -> 225, Alignment -> Center]], 
         Dynamic[
          If[$CellContext`running$$, 
           Column[{
             Column[{
               Spacer[{0, 10}], "day (morning)", 
               Manipulate`Place[1]}, Left], 
             Column[{
               Spacer[{0, 10}], 
               Row[{"duration of simulation = ", 
                 ToString[$CellContext`Days$$]}], 
               Spacer[{0, 15}], 
               Row[{"city population = ", 
                 ToString[$CellContext`TotalPop$$]}], 
               Spacer[{0, 15}], 
               Row[{"initial infected cases, City A = ", 
                 ToString[$CellContext`InfectedA$$]}], 
               Spacer[{0, 15}], 
               Row[{"initial infected cases, City B = ", 
                 ToString[$CellContext`InfectedB$$]}], 
               Spacer[{0, 15}], 
               Row[{"travellers/day = ", 
                 ToString[$CellContext`Transfer$$]}], 
               Spacer[{0, 15}], 
               Row[{"chance of infection on contact = ", 
                 ToString[$CellContext`Infectious$$]}], 
               Spacer[{0, 15}], 
               Row[{"latency before contagious state [days] = ", 
                 ToString[$CellContext`Incubation$$]}], 
               Spacer[{0, 15}], 
               Row[{"duration of contagious state [days] = ", 
                 ToString[$CellContext`Recovery$$]}]}, Right]}, Center], ""]], 
         Dynamic[
          If[
           Not[$CellContext`running$$], 
           Column[{"duration of simulation [days]", 
             Manipulate`Place[2], "city population", 
             Manipulate`Place[3], "initial infected cases, City A", 
             Manipulate`Place[4], "initial infected cases, City B", 
             Manipulate`Place[5], "travellers/day", 
             Manipulate`Place[6], "chance of infection on contact", 
             Manipulate`Place[7], "latency before contagious state [days]", 
             Manipulate`Place[8], "duration of contagious state [days]", 
             Manipulate`Place[9]}, Left, 0.45], ""]]}, Center]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    311., {188.5, 193.5}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`w$2734$$ = 
    0, $CellContext`Days$2735$$ = 0, $CellContext`TotalPop$2736$$ = 
    0, $CellContext`InfectedA$2737$$ = 0, $CellContext`InfectedB$2738$$ = 
    0, $CellContext`Transfer$2739$$ = 0, $CellContext`Infectious$2740$$ = 
    0, $CellContext`Incubation$2741$$ = 0, $CellContext`Recovery$2742$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`Days$$ = 7, $CellContext`i$$ = 
        0, $CellContext`Incubation$$ = 3, $CellContext`InfectedA$$ = 
        1, $CellContext`InfectedB$$ = 1, $CellContext`Infectious$$ = 
        0.1, $CellContext`j$$ = 0, $CellContext`moving$$ = 
        False, $CellContext`Pops$$ = Pane[
          Grid[{{"", 
             Image[CompressedData["
1:eJzt3S1w60yWxvHsBzA0NPQwQUNB7yJD1QwR9EzV7oqta2ar1oMMDQ0FBQ0N
DQ0FAw0NDQ0N7z5vut5UdnyTG8mS+uv/q5qpzJ3Y7iTS6dOnW91/+Mt///E/
//nl5eVvI/3XH//8v//217/++e9/+lf9j3//+//8x1/+RV/81z+9vBT6z29f
/wAAAAAAAAAAAADQ0Pl8Pv3u9fXVdnMADO1yuej2PxwOm99lWTZ/M5vNXn4m
SZL57z77Hv27+Qa92/s761P0WQo7tn9oAN/1Hh+KotAdrdtfN/h0Ov3p3f1k
LqHXmjd5jEgfP3e5XOrf9/u9vvN+v3f4wwJoQd26uWcXi4VuUt2q7/GhLEvr
/b7Jc6qqUnvyPFfbRqPRZDLRFyaS1HVtsXlAJHQn6jZULpGmqRlNmChxPB71
f9lu3bdcr1cFExNJzE+h8Y6+VqCjkAJ0RZ3ybrdTfFBPraRCab9usZB6aoUL
5R4Khgog4/FYuZOiimKL7XYBntGttN1ulc+rO1anvFqtNB5RT227Xb273W7K
nRQ33n/29XodUpAEuqVbRt2u0gnlFep5db/Q5ypiKH4qeigP0VhGY7QYgifw
S+fzmVvjlx6DKsUQREjhQtl48oZUvBEziFP0mE6nGsERQBC8j+FCX7A+6hmX
y2W32xFAECql2WVZEi568jGAKBVhoAffaQBiRuVFURAu+qYAokGfftt5nh+P
R9vNAZp5TzDSNK2qivXVA9vv92YNLekHvKAujwTDER/TD6ofcJOuTF2f6uNI
MFyj9MM8vcuSGLijrussy3Rl6vq03RZ8SkHDPPh/OBxstwVRM5dimqZcir7Q
n8wEef5kGJ6uOtN5kfr6SINKRQ8zqLTdFkRBEUO9la46IobvTBFb0aMsS0pS
6In6Jl1jihgU50Oi6FEUhf6yu92O6IEOqT8ye1/4sj0Omrper6vVajKZbDYb
ogeeVNd1mqbqj4gYMbjdboob6iNYbop2dAmZHfl4WDU2yj0Wb+gs0EhVVUmS
aHhiuyGwRimHroHtdsuwBb90Pp+VYyyXS55rgCLGer2ezWYMW/AZDUx0kaiL
YWCCj9SVaMySZRldCf7B4XAwSanthsBRXCH4iN4E30RGih9vo9fNZsPoFY1Q
AYuZugxFDBb5oB0z48bDcVHZ7Xbz+Zx9dfAMDVs0vF2tVnQ9weNvjW6ZPogV
YgEzYxNyS3SL6ypg9AvoD3lsePibYhj0TcEgh8SQuN4CQPzH8Mhv/cXfDnbR
Z3mHXBEu4Dr0SFVVxHk4wuS96/XadkPwFSWHy+WSsQmcst1udVnabgV+TlF9
tVrZbgXwE0qDF4sFPZprFM/ZGwEuOx6PGkFr5GK7IfiNYrgiOQdvwX11XVN8
c4Git/4QbKABX7y+vvIstl2K25xTAO+Y65ZT/6wgbsNfypMVOsiTB8Y4Eb67
3+9ZllGXGwx1aYRBoWO5XO52O9sNCR/z4AjMarViQWmvzHJQ260AOsaC0v4o
0+B3i1CpT2S1c+eOx6OGJ7ZbAfRIoxXWPHfIzJ5Q00DwlFEzw9IJs06D2RNE
Qnk16zqedLlcWKeBqCiv1jXPKujWzJo6VoQiNuapKxait0DURczItFswS3AZ
5SFm5uB7KnvfR1UZ+PE2KaDQwUzidzCLDbxT1q3cm9DxNUUM1uoDH7FS+mv8
foCfYhX6Z1gUCnyBot+j2+02m82YdQI+oy5V9wjLmT7Ksozj8ICvKWgodJCT
G4zdgG+iBmhQ1gAaodBBWQNoikIHZQ2ghZgLHZQ1gNbiLHRQ1gCeFFuhg7IG
8LzYCh2UNYBOxFPooKwBdCiGQgdlDaBzYRc6FC6SJKGsAXQr7EIHG/IAPQn1
YDJ2PAN6FeR0w3w+P51OtlsBBOt6vU6n05C65v1+n+e57VYAgQtpsvJ2uyVJ
omBouyFA4JRspGkaxoFNCoAKg7ZbAUThdDrN53PbrXiWQt9sNrPdCiAiASzn
UNbEWY3AkK7Xa5Ik/h70VpZlURS2WwFEx99bT0FPIxTKoYAVuvt8LJAGMMgC
/OVjabGu6zRNbbcCiJqGKhqw2G5FA57mSEBI/Fo6FdKiNcBrvtyM9/t9Op36
EuKAsPlyP/oS34BIeHFLTiYT94MbEA/3U47D4ZBlme1WAPh/HE85mEYBHORy
ykGyATjL2ZSDZANw1u12m0wmru0GRrIBOM7BnXBINgDHubYBaRhbDAHBcyrl
CHIDdiA87qQcPj6uC0TLkZSDZAPwiAspB8kG4B3rfb31BgBoym5370LCA6AF
i+eubrfb9Xpt5aMBPKOqquVyaeWjlWxcLhcrHw3gGRomTCaT4c9YOR6Pi8Vi
4A8F0BUrE7JURAGvDV8dpSIKBGDgx8qoiAIBGPg4SCqiQACG3JSDs9iAYOR5
vt/vB/ggjVA0ThnggwD0TUFDoWOAD2KQAgRDg5TxeNz3UIVBChCYAYYqDFKA
wAywhpNBChCYvtecM0gBgrRcLquq6unNGaQAQep1qMJhB0CQ+ptVuVwu0+m0
87cF4ALlG8o6On9bixt9AOhbTwfIDrYeFcDwehpQaPgz/O5AAAbT+SoLTnIE
glcURVmWHb7h5k2HbwjANYfDIcuyDt+QGVggeN3Oxup9RqNRJ28FwGVpmtZ1
3clbUdwAItHhJucUN4BIdFji6GkhGQDX3G638XjcyVuxcgOIRyerOOweXQ1g
YJ08U9/TqnUAburkSbReN/QA4JpOhhhJkpzP507aA8ALo9HomdVfrPgCIvTk
6i+KokCEnnzAbeBjZwG44MnZkA4XnQLwxZOPlrBSFIjQk6tGWSkKxGkymVyv
1xYv1Kv02s7bA8B9rccaA5waCcBNrWubTKYA0Wo9pcKpjkC0Wm/EwYEpQLRa
r/nscKdBAH5pPRXbeiIGQABaLMPocLswAD5qcfoJT7QBkcuy7HA4NHpJ5yc3
AfBLiyUcLN4AIrfdbtfrdaOXcGYKELkWG43yBD0QuRbFCrYjBiLXYhcOdt4A
Ine5XKbTaaOXKM4o2vTTHAAeaLGIq5Oz3gB47eXlpdH3s8gcQNM40DTOAAhP
02PXiBsAmtY5iRsAGsWNFvMvAMJD3ADQFHEDQFONNgslbgD40fB5EzbtAfCj
Ydx48lRZAGEgbgBoirgBoKlGcaOu6zRN+2wOAA80ihvMpwD4QdwA0BxxA0BT
rBcF0FSjuHG/30ejUZ/NAeABnqMH0BRxA0BTTY+WbnGEPYDANN2fnP3MAYxG
o/v9/v3vT9O0ruv+2gPAfU3rFZy7BESuxXoMzocFInc+n5MkafSSoijKsuyp
PQDc1+K5+M2bfpoDwAOHwyHLskYv2e12q9Wqp/YAcF9VVcvlstFL9vt9nuc9
tQeA+7bb7Xq9bvQStu4BIteiyHm9XieTSU/tAeC+xWJxPB6bvoql5kDM2i0a
b/pIC4CQtHu4Ncuyw+HQeWMAuK/15l2r1Wq323XeHgDua30YCks4gGi1WLxh
tFgtBiAM6/V6u922eGGLp1oAhOGZ8mbTXTsAhEE5gzKHdq9l9x4gQk+eaMDT
9ECEXl9fZ7NZ65czpQJESNmCcobWLz8ej4vFosP2AHDfk2u3brfbeDzusD0A
3NfuibaPJpPJ9Xrtqj0A3Pf8Xf985AHgkU720GCjUSAqnSwUb/14CwAfdfJA
6/1+H4/HrBoFItHVxjts4ANEosM8gY04gEh0WJfggXogEh3Og7D6C4hEt+su
2u1sDMAv3Z5iwIOxQPA6X3RBiQMIXueLPFnFAQSvjxUXSmCUxnT7ngAc0dP0
B3v4AAFrffDB157cOgyAyxQ0FDr6eGdmY4FQ9XeOfH8RCYBFdV2nadrTm7Pd
KBCk1qezfcf9fp9MJj0lMwBs6bsEwVAFCEyvgxSDoQoQmF4HKQZDFSAww8yT
MlQBgjHAIMVgqAIEY4BBisFQBQjGkIs52XEUCMDAp5zwrAoQgDzP9/v9kJ+Y
pmld10N+IoAOXa9XDVIG3lSnp6duAQzDys4YVEcBryVJcj6fh/9cqqOApyye
+0x1FPDU8BXRj6iOAt6xUhH9iPMRAO+4UGHgtHrAI47MaJByAB5x52ACUg7A
C0o2ptPp9Xq13ZDf7Pf7PM9ttwLAL7iTbPxwLIgB+CkH71On4hiARw7epA6G
MgAf2VpY/jUHoxkAw9l5T1IOwFkuT3qScgAOcjbZMJRyjMdji+veATxyOdkw
XFj6DuCd48mGYf1ROwAfLRaL4/FouxW/RsoBOMKjTXJut1uSJEysANa5X9n4
iF2LAevKsiyKwnYrmmErMMAiJfxKNrxL+z0aWAHh8ff8dwqkgBWDnTLfB1ae
A1b4VQ59xJY+wMDCeNxjPp+fTifbrQCiEMzCS+VLGmoF8IMA7rN7oFK31uv1
dru13QogcMfjcbFY2G5FZyiQAn3TXTabzRzc0esZXjyUB/hLKb0Se9ut6J4v
z+UB3rlcLkmSBFlFVAalPCrIHw2wS8m8UnrbrehLGDPLgFNieIw07MAIDCyS
NP52u+nH1HDMdkMA7wU5h/KZuq7n83nwERLom78PvbZDoQN4UgxljUcUOoDW
IilrPKLQAbQTVVnjEYUOoIXYyhqPKHQAjcRZ1nhEoQP4pmjLGo8odADfEXlZ
4xGFDuCXKGs8otABfIGyxmcIp8BPsdnmF/RrybKMPTqAjy6Xy2w2u91uthvi
LoUOxVWvj34AOqSgMZ/PmTX4JcVVhQ6KxoDuBQUNutFvIsYCyr0XiwVnDzWi
GKvQwZgO0WI/3nYUafWro4aMCDG3+IzAzpEBvmPzxnYr/MZyF0SFBZBdIfwi
Evv9Ps9z260IhyKw4rDtVgA90qg8yzIKet0K6aBt4B+wkrwnZhU6oQPhYdVB
rxQ6lHWUZWm7IUBnNDwhaAygKArKpAiD8mdl0QSNYShuMDkL3ylzVv5MTWNI
VVVRfIa/1Pcpc7bdihgdDofFYkGOB+8oW2asbdHpdJrP59fr1XZDgG8x04I8
e2KdmfjmoXu4T7mxMmRO/XCE2UiN7U3gMmXFyo3ZT8MpZmck9iuAm9S1sQGm
mxQ6WFAKBylccLKYy8yCUirVcEdVVco0mPVzn+IGkyywTr3Y8g2rjHxxOp2U
GVKDgi3mAGjmW71jyteMWTA8hQsOgPYaYxYMibFJMBizYBiMTQLDmAV9Y2wS
KsYs6ANjk+AxZkG3GJtEgjELusLYJDaKGzwvgNbU+2RZxtgkQnVdq7NYrVas
AUYj2+12Op3yOHzMdrtdkiQ8DYfvOJ1OulrW6zVpBpRz5nk+n88ZqOIzXCT4
KTPVQleCRxqYkJTiM4oYZujK/j8wTBFMvQlFMHxNGeniDRutxEyXwXK5ZNIN
jSjlUGq62WwYtkSoLEv99VnNhRYUMRQ3lKYy4xaP0+mkHKMoCgYmeMb5fM6y
jOgRPHMWj9R1bbstCIQGuYoe5K5BUo+gHINDCtAT5R7L5XI6nRI9wqCIoUxS
PQI5Bvp2uVwUPSaTyW63o2rqKUV+xX9FDKZLMKTr9bparXTtbbdbami+UJwv
y1J/NUV+5tlhi6LHer3WdbjZbIgeLlPEUH6ov1RRFEQMuEARQ3FD16QyEPYT
cw1/HbhM16d6tMlkkuc5K9VdUNe1qUQpbhAx4Lj9fr9YLEzpg8t1ePqdmwWf
aZpWVUXtGh7RIHq9XpN+DEm/Z/229TsvioIH3uG19/RD42tm/fqg36qZ29Lv
mafdERKlH7vdbjabEUC6oozCTGbpt6rfLbMkCBgB5EkKF5vNJnmz3W4JF4jK
ewDReHy5XCrBZgXIZ+73++FwKIpCwdbsb0D5ApG7Xq9VVeV5Ph6P0zRV7s3j
EoaSMWUU8/l8NBplWVaWJdkF8EgRQ3eKoodiyGKx0NexPaSp34DSMEUJpWFm
j77YfgNAaxqzHI9H3TXqbV9eXkweolw9vAUhGoPoJzWn9yqv0E+6Wq2C/EmB
gZk8xPTCYo6q3O/3PpZVz+ezwoLar4QqSRLFCn2h/6m8gjVaQE/UEesW042W
57kyeWUj+m99rX/R/ejU3aesSe0xUcJs86vWKlYoAOpflGZQ3gRsUdah3EN3
ou5Hk+2boY1JS0yRxOgj+denmzcvy1Ifp1GGPtcEtPF4rK9NlKiqinov4Djd
pCYtMUUSQ2OclzeKLfMH+s7NJx6/+eV3ChHmX4qi0Hfudjt9ro8DKABf01jm
9ECZyWdx4/Gbbf8EAAAAAAAAAAAAgKP+DwAVnG4=
              "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
             Column[{
               Style["City A", "Title", 20], 
               Style["Latent       =", 
                RGBColor[0, 0, 1], Bold], 
               Style["Contagious   =", 
                RGBColor[1, 0, 0], Bold], 
               Style["Susceptible  =", 
                RGBColor[0., 0.5, 0.], Bold], 
               Style["Recovered    =", 
                RGBColor[0., 0.5, 0.], Bold]}]}, {"", 
             Image[CompressedData["
1:eJzt3S1w60yWxvHsBzA0NPQwQUNB7yJD1QwR9EzV7oqta2ar1oMMDQ0FBQ0N
DQ0FAw0NDQ0N7z5vut5UdnyTG8mS+uv/q5qpzJ3Y7iTS6dOnW91/+Mt///E/
//nl5eVvI/3XH//8v//217/++e9/+lf9j3//+//8x1/+RV/81z+9vBT6z29f
/wAAAAAAAAAAAADQ0Pl8Pv3u9fXVdnMADO1yuej2PxwOm99lWTZ/M5vNXn4m
SZL57z77Hv27+Qa92/s761P0WQo7tn9oAN/1Hh+KotAdrdtfN/h0Ov3p3f1k
LqHXmjd5jEgfP3e5XOrf9/u9vvN+v3f4wwJoQd26uWcXi4VuUt2q7/GhLEvr
/b7Jc6qqUnvyPFfbRqPRZDLRFyaS1HVtsXlAJHQn6jZULpGmqRlNmChxPB71
f9lu3bdcr1cFExNJzE+h8Y6+VqCjkAJ0RZ3ybrdTfFBPraRCab9usZB6aoUL
5R4Khgog4/FYuZOiimKL7XYBntGttN1ulc+rO1anvFqtNB5RT227Xb273W7K
nRQ33n/29XodUpAEuqVbRt2u0gnlFep5db/Q5ypiKH4qeigP0VhGY7QYgifw
S+fzmVvjlx6DKsUQREjhQtl48oZUvBEziFP0mE6nGsERQBC8j+FCX7A+6hmX
y2W32xFAECql2WVZEi568jGAKBVhoAffaQBiRuVFURAu+qYAokGfftt5nh+P
R9vNAZp5TzDSNK2qivXVA9vv92YNLekHvKAujwTDER/TD6ofcJOuTF2f6uNI
MFyj9MM8vcuSGLijrussy3Rl6vq03RZ8SkHDPPh/OBxstwVRM5dimqZcir7Q
n8wEef5kGJ6uOtN5kfr6SINKRQ8zqLTdFkRBEUO9la46IobvTBFb0aMsS0pS
6In6Jl1jihgU50Oi6FEUhf6yu92O6IEOqT8ye1/4sj0Omrper6vVajKZbDYb
ogeeVNd1mqbqj4gYMbjdboob6iNYbop2dAmZHfl4WDU2yj0Wb+gs0EhVVUmS
aHhiuyGwRimHroHtdsuwBb90Pp+VYyyXS55rgCLGer2ezWYMW/AZDUx0kaiL
YWCCj9SVaMySZRldCf7B4XAwSanthsBRXCH4iN4E30RGih9vo9fNZsPoFY1Q
AYuZugxFDBb5oB0z48bDcVHZ7Xbz+Zx9dfAMDVs0vF2tVnQ9weNvjW6ZPogV
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
9ECZyWdx4/Gbbf8EAAAAAAAAAAAAgKP+DwAVnG4=
              "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
             Column[{
               Style["City B", "Title", 20], 
               Style["Latent       =", 
                RGBColor[0, 0, 1], Bold], 
               Style["Contagious   =", 
                RGBColor[1, 0, 0], Bold], 
               Style["Susceptible  =", 
                RGBColor[0., 0.5, 0.], Bold], 
               Style["Recovered    =", 
                RGBColor[0., 0.5, 0.], Bold]}]}}, 
           Spacings -> {{10, 2}, 1.8}], {200, 400}], $CellContext`Recovery$$ = 
        3, $CellContext`running$$ = False, $CellContext`TotalPop$$ = 
        10, $CellContext`Transfer$$ = 0, $CellContext`w$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`w$$, $CellContext`w$2734$$, 0], 
        Hold[$CellContext`Days$$, $CellContext`Days$2735$$, 0], 
        Hold[$CellContext`TotalPop$$, $CellContext`TotalPop$2736$$, 0], 
        Hold[$CellContext`InfectedA$$, $CellContext`InfectedA$2737$$, 0], 
        Hold[$CellContext`InfectedB$$, $CellContext`InfectedB$2738$$, 0], 
        Hold[$CellContext`Transfer$$, $CellContext`Transfer$2739$$, 0], 
        Hold[$CellContext`Infectious$$, $CellContext`Infectious$2740$$, 0], 
        Hold[$CellContext`Incubation$$, $CellContext`Incubation$2741$$, 0], 
        Hold[$CellContext`Recovery$$, $CellContext`Recovery$2742$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Refresh[If[$CellContext`moving$$, $CellContext`w$$ = 
           1; $CellContext`Pops$$ = {}; $CellContext`PopA = Table[{
              StringJoin[
               ToString[$CellContext`k], "A"], 
              RandomReal[{0, 1.8}], 
              RandomReal[{0, 2 Pi}], "u", 0}, {$CellContext`k, 
              1, $CellContext`TotalPop$$}]; $CellContext`PopB = Table[{
              StringJoin[
               ToString[$CellContext`k], "B"], 
              RandomReal[{0, 1.8}], 
              RandomReal[{0, 2 Pi}], "u", 0}, {$CellContext`k, 
              1, $CellContext`TotalPop$$}]; 
          For[$CellContext`j$$ = 
            1, $CellContext`j$$ < $CellContext`InfectedA$$ + 1, 
            Increment[$CellContext`j$$], Part[
              Part[$CellContext`PopA, $CellContext`j$$], 4] = "i"]; 
          For[$CellContext`j$$ = 
            1, $CellContext`j$$ < $CellContext`InfectedB$$ + 1, 
            Increment[$CellContext`j$$], Part[
              Part[$CellContext`PopB, $CellContext`j$$], 4] = "i"]; 
          For[$CellContext`k = 1, $CellContext`k < $CellContext`Days$$ + 1, 
            
            Increment[$CellContext`k], $CellContext`Pops$$ = 
             Append[$CellContext`Pops$$, 
               Grid[{{"", 
                  Image[
                   Graphics[
                    Join[{{
                    Circle[{0, 0}, 2]}}, 
                    Table[{
                    If[
                    Or[Part[
                    Part[$CellContext`PopA, $CellContext`i$$], 4] == "u", Part[
                    Part[$CellContext`PopA, $CellContext`i$$], 4] == "r"], 
                    Darker[Green, 0.5], 
                    If[Part[
                    Part[$CellContext`PopA, $CellContext`i$$], 4] == "i", Red,
                     Blue]], 
                    Disk[{Part[
                    Part[$CellContext`PopA, $CellContext`i$$], 2] Cos[
                    Part[
                    Part[$CellContext`PopA, $CellContext`i$$], 3]], Part[
                    Part[$CellContext`PopA, $CellContext`i$$], 2] Sin[
                    Part[
                    Part[$CellContext`PopA, $CellContext`i$$], 3]]}, 
                    0.1]}, {$CellContext`i$$, 1, 
                    Length[$CellContext`PopA]}]]]], 
                  Column[{
                    Style["City A", "Title", 20], 
                    Style[
                    StringJoin["Latent       ", "=", 
                    ToString[
                    Length[
                    Cases[$CellContext`PopA, {
                    Blank[], 
                    Blank[], 
                    Blank[], "n", 
                    Blank[]}]]]], Blue, Bold], 
                    Style[
                    StringJoin["Contagious   ", "=", 
                    ToString[
                    Length[
                    Cases[$CellContext`PopA, {
                    Blank[], 
                    Blank[], 
                    Blank[], "i", 
                    Blank[]}]]]], Red, Bold], 
                    Style[
                    StringJoin["Susceptible  ", "=", 
                    ToString[
                    Length[
                    Cases[$CellContext`PopA, {
                    Blank[], 
                    Blank[], 
                    Blank[], "u", 
                    Blank[]}]]]], 
                    Darker[Green, 0.5], Bold], 
                    Style[
                    StringJoin["Recovered    ", "=", 
                    ToString[
                    Length[
                    Cases[$CellContext`PopA, {
                    Blank[], 
                    Blank[], 
                    Blank[], "r", 
                    Blank[]}]]]], 
                    Darker[Green, 0.5], Bold]}]}, {"", 
                  Image[
                   Graphics[
                    Join[{{
                    Circle[{0, 0}, 2]}}, 
                    Table[{
                    If[
                    Or[Part[
                    Part[$CellContext`PopB, $CellContext`i$$], 4] == "u", Part[
                    Part[$CellContext`PopB, $CellContext`i$$], 4] == "r"], 
                    Darker[Green, 0.5], 
                    If[Part[
                    Part[$CellContext`PopB, $CellContext`i$$], 4] == "i", Red,
                     Blue]], 
                    Disk[{Part[
                    Part[$CellContext`PopB, $CellContext`i$$], 2] Cos[
                    Part[
                    Part[$CellContext`PopB, $CellContext`i$$], 3]], Part[
                    Part[$CellContext`PopB, $CellContext`i$$], 2] Sin[
                    Part[
                    Part[$CellContext`PopB, $CellContext`i$$], 3]]}, 
                    0.1]}, {$CellContext`i$$, 1, 
                    Length[$CellContext`PopB]}]]]], 
                  Column[{
                    Style["City B", "Title", 20], 
                    Style[
                    StringJoin["Latent       ", "=", 
                    ToString[
                    Length[
                    Cases[$CellContext`PopB, {
                    Blank[], 
                    Blank[], 
                    Blank[], "n", 
                    Blank[]}]]]], Blue, Bold], 
                    Style[
                    StringJoin["Contagious   ", "=", 
                    ToString[
                    Length[
                    Cases[$CellContext`PopB, {
                    Blank[], 
                    Blank[], 
                    Blank[], "i", 
                    Blank[]}]]]], Red, Bold], 
                    Style[
                    StringJoin["Susceptible  ", "=", 
                    ToString[
                    Length[
                    Cases[$CellContext`PopB, {
                    Blank[], 
                    Blank[], 
                    Blank[], "u", 
                    Blank[]}]]]], 
                    Darker[Green, 0.5], Bold], 
                    Style[
                    StringJoin["Recovered    ", "=", 
                    ToString[
                    Length[
                    Cases[$CellContext`PopB, {
                    Blank[], 
                    Blank[], 
                    Blank[], "r", 
                    Blank[]}]]]], 
                    Darker[Green, 0.5], Bold]}]}}, 
                Spacings -> {{10, 2}, 1.8}]]; 
            For[$CellContext`i$$ = 1, $CellContext`i$$ < 
              Length[$CellContext`PopA] + 1, 
              Increment[$CellContext`i$$], Which[
                And[Part[
                   Part[$CellContext`PopA, $CellContext`i$$], 
                   5] == $CellContext`Recovery$$, Part[
                   Part[$CellContext`PopA, $CellContext`i$$], 4] == "i"], Part[
                   Part[$CellContext`PopA, $CellContext`i$$], 5] = 0; Part[
                   Part[$CellContext`PopA, $CellContext`i$$], 4] = "r", 
                And[Part[
                   Part[$CellContext`PopA, $CellContext`i$$], 
                   5] == $CellContext`Incubation$$ - 1, Part[
                   Part[$CellContext`PopA, $CellContext`i$$], 4] == "n"], Part[
                   Part[$CellContext`PopA, $CellContext`i$$], 5] = 0; Part[
                   Part[$CellContext`PopA, $CellContext`i$$], 4] = "i"]; 
              Null]; For[$CellContext`i$$ = 1, $CellContext`i$$ < 
              Length[$CellContext`PopB] + 1, 
              Increment[$CellContext`i$$], Which[
                And[Part[
                   Part[$CellContext`PopB, $CellContext`i$$], 
                   5] == $CellContext`Recovery$$, Part[
                   Part[$CellContext`PopB, $CellContext`i$$], 4] == "i"], Part[
                   Part[$CellContext`PopB, $CellContext`i$$], 5] = 0; Part[
                   Part[$CellContext`PopB, $CellContext`i$$], 4] = "r", 
                And[Part[
                   Part[$CellContext`PopB, $CellContext`i$$], 
                   5] == $CellContext`Incubation$$ - 1, Part[
                   Part[$CellContext`PopB, $CellContext`i$$], 4] == "n"], Part[
                   Part[$CellContext`PopB, $CellContext`i$$], 5] = 0; Part[
                   Part[$CellContext`PopB, $CellContext`i$$], 4] = "i"]; 
              Null]; For[$CellContext`i$$ = 1, $CellContext`i$$ < 
              Length[$CellContext`PopA] + 1, 
              Increment[$CellContext`i$$], 
              If[
               Or[Part[
                  Part[$CellContext`PopA, $CellContext`i$$], 4] == "i", Part[
                  Part[$CellContext`PopA, $CellContext`i$$], 4] == "n"], Part[
                 Part[$CellContext`PopA, $CellContext`i$$], 5] = Part[
                  Part[$CellContext`PopA, $CellContext`i$$], 5] + 1]]; 
            For[$CellContext`i$$ = 1, $CellContext`i$$ < 
              Length[$CellContext`PopB] + 1, 
              Increment[$CellContext`i$$], 
              If[
               Or[Part[
                  Part[$CellContext`PopB, $CellContext`i$$], 4] == "i", Part[
                  Part[$CellContext`PopB, $CellContext`i$$], 4] == "n"], Part[
                 Part[$CellContext`PopB, $CellContext`i$$], 5] = Part[
                  Part[$CellContext`PopB, $CellContext`i$$], 5] + 
                1]]; $CellContext`TotalPeopleA = 
             Length[$CellContext`PopA]; $CellContext`PeopleMetA = 
             Random[Integer, {10, 20}]; $CellContext`TotalPeopleB = 
             Length[$CellContext`PopB]; $CellContext`PeopleMetB = 
             Random[Integer, {10, 20}]; 
            For[$CellContext`j$$ = 
               1, $CellContext`j$$ < $CellContext`TotalPeopleA + 1, 
               Increment[$CellContext`j$$], 
               
               For[$CellContext`i$$ = 
                0, $CellContext`i$$ < $CellContext`PeopleMetA, 
                
                Increment[$CellContext`i$$], $CellContext`ContactA = 
                 Random[Integer, {1, $CellContext`TotalPeopleA}]; If[Part[
                    Part[$CellContext`PopA, $CellContext`ContactA], 4] == "i", 
                  If[
                   And[Part[
                    Part[$CellContext`PopA, $CellContext`j$$], 4] != "i", Part[
                    Part[$CellContext`PopA, $CellContext`j$$], 4] != "n", Part[
                    Part[$CellContext`PopA, $CellContext`j$$], 4] != "r", 
                    Random[Integer, {1, 100}] < $CellContext`Infectious$$], 
                   Part[
                    Part[$CellContext`PopA, $CellContext`j$$], 4] = "n"], 
                  If[
                   And[Part[
                    Part[$CellContext`PopA, $CellContext`ContactA], 4] != "n",
                     Part[
                    Part[$CellContext`PopA, $CellContext`ContactA], 4] != "r",
                     Part[
                    Part[$CellContext`PopA, $CellContext`j$$], 4] == "i", 
                    Random[Real, {0, 1}] < $CellContext`Infectious$$], Part[
                    Part[$CellContext`PopA, $CellContext`ContactA], 4] = 
                   "n"]]]] 
             For[$CellContext`j$$ = 
               1, $CellContext`j$$ < $CellContext`TotalPeopleB + 1, 
               Increment[$CellContext`j$$], 
               
               For[$CellContext`i$$ = 
                0, $CellContext`i$$ < $CellContext`PeopleMetB, 
                
                Increment[$CellContext`i$$], $CellContext`ContactB = 
                 Random[Integer, {1, $CellContext`TotalPeopleB}]; If[Part[
                    Part[$CellContext`PopB, $CellContext`ContactB], 4] == "i", 
                  If[
                   And[Part[
                    Part[$CellContext`PopB, $CellContext`j$$], 4] != "i", Part[
                    Part[$CellContext`PopB, $CellContext`j$$], 4] != "n", Part[
                    Part[$CellContext`PopB, $CellContext`j$$], 4] != "r", 
                    Random[Integer, {1, 100}] < $CellContext`Infectious$$], 
                   Part[
                    Part[$CellContext`PopB, $CellContext`j$$], 4] = "n"], 
                  If[
                   And[Part[
                    Part[$CellContext`PopB, $CellContext`ContactB], 4] != "n",
                     Part[
                    Part[$CellContext`PopB, $CellContext`ContactB], 4] != "r",
                     Part[
                    Part[$CellContext`PopB, $CellContext`j$$], 4] == "i", 
                    Random[Real, {0, 1}] < $CellContext`Infectious$$], Part[
                    Part[$CellContext`PopB, $CellContext`ContactB], 4] = 
                   "n"]]]]; $CellContext`ToA = {}; $CellContext`ToB = {}; 
            For[$CellContext`i$$ = 0, 
              Length[$CellContext`ToA] < $CellContext`Transfer$$, 
              Increment[$CellContext`i$$], $CellContext`j$$ = 
               RandomChoice[$CellContext`PopB]; $CellContext`ToA = 
               Append[$CellContext`ToA, $CellContext`j$$]; $CellContext`PopB = 
               Complement[$CellContext`PopB, $CellContext`ToA]]; 
            For[$CellContext`i$$ = 0, 
              Length[$CellContext`ToB] < $CellContext`Transfer$$, 
              
              Increment[$CellContext`i$$], $CellContext`j$$ = 
               RandomChoice[$CellContext`PopA]; $CellContext`ToB = 
               Append[$CellContext`ToB, $CellContext`j$$]; $CellContext`PopA = 
               Complement[$CellContext`PopA, $CellContext`ToB]]; \
$CellContext`PopA = 
             Join[$CellContext`PopA, $CellContext`ToA]; $CellContext`PopB = 
             Join[$CellContext`PopB, $CellContext`ToB]; 
            Null]; $CellContext`moving$$ = False; Null]; 
        Part[$CellContext`Pops$$, $CellContext`w$$], UpdateInterval -> 
        If[$CellContext`moving$$, 2, Infinity]], 
      "Specifications" :> {{$CellContext`moving$$, False, ControlType -> 
         None}, {$CellContext`running$$, False, ControlType -> 
         None}, {$CellContext`Pops$$, 
         Pane[
          Grid[{{"", 
             Image[CompressedData["
1:eJzt3S1w60yWxvHsBzA0NPQwQUNB7yJD1QwR9EzV7oqta2ar1oMMDQ0FBQ0N
DQ0FAw0NDQ0N7z5vut5UdnyTG8mS+uv/q5qpzJ3Y7iTS6dOnW91/+Mt///E/
//nl5eVvI/3XH//8v//217/++e9/+lf9j3//+//8x1/+RV/81z+9vBT6z29f
/wAAAAAAAAAAAADQ0Pl8Pv3u9fXVdnMADO1yuej2PxwOm99lWTZ/M5vNXn4m
SZL57z77Hv27+Qa92/s761P0WQo7tn9oAN/1Hh+KotAdrdtfN/h0Ov3p3f1k
LqHXmjd5jEgfP3e5XOrf9/u9vvN+v3f4wwJoQd26uWcXi4VuUt2q7/GhLEvr
/b7Jc6qqUnvyPFfbRqPRZDLRFyaS1HVtsXlAJHQn6jZULpGmqRlNmChxPB71
f9lu3bdcr1cFExNJzE+h8Y6+VqCjkAJ0RZ3ybrdTfFBPraRCab9usZB6aoUL
5R4Khgog4/FYuZOiimKL7XYBntGttN1ulc+rO1anvFqtNB5RT227Xb273W7K
nRQ33n/29XodUpAEuqVbRt2u0gnlFep5db/Q5ypiKH4qeigP0VhGY7QYgifw
S+fzmVvjlx6DKsUQREjhQtl48oZUvBEziFP0mE6nGsERQBC8j+FCX7A+6hmX
y2W32xFAECql2WVZEi568jGAKBVhoAffaQBiRuVFURAu+qYAokGfftt5nh+P
R9vNAZp5TzDSNK2qivXVA9vv92YNLekHvKAujwTDER/TD6ofcJOuTF2f6uNI
MFyj9MM8vcuSGLijrussy3Rl6vq03RZ8SkHDPPh/OBxstwVRM5dimqZcir7Q
n8wEef5kGJ6uOtN5kfr6SINKRQ8zqLTdFkRBEUO9la46IobvTBFb0aMsS0pS
6In6Jl1jihgU50Oi6FEUhf6yu92O6IEOqT8ye1/4sj0Omrper6vVajKZbDYb
ogeeVNd1mqbqj4gYMbjdboob6iNYbop2dAmZHfl4WDU2yj0Wb+gs0EhVVUmS
aHhiuyGwRimHroHtdsuwBb90Pp+VYyyXS55rgCLGer2ezWYMW/AZDUx0kaiL
YWCCj9SVaMySZRldCf7B4XAwSanthsBRXCH4iN4E30RGih9vo9fNZsPoFY1Q
AYuZugxFDBb5oB0z48bDcVHZ7Xbz+Zx9dfAMDVs0vF2tVnQ9weNvjW6ZPogV
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
9ECZyWdx4/Gbbf8EAAAAAAAAAAAAgKP+DwAVnG4=
              "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
             Column[{
               Style["City A", "Title", 20], 
               Style["Latent       =", 
                RGBColor[0, 0, 1], Bold], 
               Style["Contagious   =", 
                RGBColor[1, 0, 0], Bold], 
               Style["Susceptible  =", 
                RGBColor[0., 0.5, 0.], Bold], 
               Style["Recovered    =", 
                RGBColor[0., 0.5, 0.], Bold]}]}, {"", 
             Image[CompressedData["
1:eJzt3S1w60yWxvHsBzA0NPQwQUNB7yJD1QwR9EzV7oqta2ar1oMMDQ0FBQ0N
DQ0FAw0NDQ0N7z5vut5UdnyTG8mS+uv/q5qpzJ3Y7iTS6dOnW91/+Mt///E/
//nl5eVvI/3XH//8v//217/++e9/+lf9j3//+//8x1/+RV/81z+9vBT6z29f
/wAAAAAAAAAAAADQ0Pl8Pv3u9fXVdnMADO1yuej2PxwOm99lWTZ/M5vNXn4m
SZL57z77Hv27+Qa92/s761P0WQo7tn9oAN/1Hh+KotAdrdtfN/h0Ov3p3f1k
LqHXmjd5jEgfP3e5XOrf9/u9vvN+v3f4wwJoQd26uWcXi4VuUt2q7/GhLEvr
/b7Jc6qqUnvyPFfbRqPRZDLRFyaS1HVtsXlAJHQn6jZULpGmqRlNmChxPB71
f9lu3bdcr1cFExNJzE+h8Y6+VqCjkAJ0RZ3ybrdTfFBPraRCab9usZB6aoUL
5R4Khgog4/FYuZOiimKL7XYBntGttN1ulc+rO1anvFqtNB5RT227Xb273W7K
nRQ33n/29XodUpAEuqVbRt2u0gnlFep5db/Q5ypiKH4qeigP0VhGY7QYgifw
S+fzmVvjlx6DKsUQREjhQtl48oZUvBEziFP0mE6nGsERQBC8j+FCX7A+6hmX
y2W32xFAECql2WVZEi568jGAKBVhoAffaQBiRuVFURAu+qYAokGfftt5nh+P
R9vNAZp5TzDSNK2qivXVA9vv92YNLekHvKAujwTDER/TD6ofcJOuTF2f6uNI
MFyj9MM8vcuSGLijrussy3Rl6vq03RZ8SkHDPPh/OBxstwVRM5dimqZcir7Q
n8wEef5kGJ6uOtN5kfr6SINKRQ8zqLTdFkRBEUO9la46IobvTBFb0aMsS0pS
6In6Jl1jihgU50Oi6FEUhf6yu92O6IEOqT8ye1/4sj0Omrper6vVajKZbDYb
ogeeVNd1mqbqj4gYMbjdboob6iNYbop2dAmZHfl4WDU2yj0Wb+gs0EhVVUmS
aHhiuyGwRimHroHtdsuwBb90Pp+VYyyXS55rgCLGer2ezWYMW/AZDUx0kaiL
YWCCj9SVaMySZRldCf7B4XAwSanthsBRXCH4iN4E30RGih9vo9fNZsPoFY1Q
AYuZugxFDBb5oB0z48bDcVHZ7Xbz+Zx9dfAMDVs0vF2tVnQ9weNvjW6ZPogV
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
9ECZyWdx4/Gbbf8EAAAAAAAAAAAAgKP+DwAVnG4=
              "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
             Column[{
               Style["City B", "Title", 20], 
               Style["Latent       =", 
                RGBColor[0, 0, 1], Bold], 
               Style["Contagious   =", 
                RGBColor[1, 0, 0], Bold], 
               Style["Susceptible  =", 
                RGBColor[0., 0.5, 0.], Bold], 
               Style["Recovered    =", 
                RGBColor[0., 0.5, 0.], Bold]}]}}, 
           Spacings -> {{10, 2}, 1.8}], {200, 400}], ControlType -> 
         None}, {$CellContext`InfectedA$$, 1, ControlType -> 
         None}, {$CellContext`InfectedB$$, 1, ControlType -> 
         None}, {$CellContext`Days$$, 7, ControlType -> 
         None}, {$CellContext`Recovery$$, 3, ControlType -> 
         None}, {$CellContext`Incubation$$, 3, ControlType -> 
         None}, {$CellContext`Infectious$$, 10, ControlType -> 
         None}, {$CellContext`Transfer$$, 0, ControlType -> 
         None}, {$CellContext`w$$, 1, ControlType -> 
         None}, {$CellContext`TotalPop$$, 10, ControlType -> 
         None}, {$CellContext`i$$, 0, ControlType -> None}, {$CellContext`j$$,
          0, ControlType -> None}, {{$CellContext`w$$, 1, ""}, 1, 
         Dynamic[$CellContext`Days$$], 1, Appearance -> "Labeled", 
         ControlPlacement -> 1}, {{$CellContext`Days$$, 7, ""}, 1, 21, 1, 
         ControlType -> Slider, Appearance -> "Labeled", ControlPlacement -> 
         2}, {{$CellContext`TotalPop$$, 10, ""}, 1, 100, 1, ControlType -> 
         Slider, Appearance -> "Labeled", ControlPlacement -> 
         3}, {{$CellContext`InfectedA$$, 1, ""}, 0, 
         Dynamic[$CellContext`TotalPop$$], 1, ControlType -> Slider, 
         Appearance -> "Labeled", ControlPlacement -> 
         4}, {{$CellContext`InfectedB$$, 1, ""}, 0, 
         Dynamic[$CellContext`TotalPop$$], 1, ControlType -> Slider, 
         Appearance -> "Labeled", ControlPlacement -> 
         5}, {{$CellContext`Transfer$$, 0, ""}, 0, 
         Dynamic[$CellContext`TotalPop$$], 1, ControlType -> Slider, 
         Appearance -> "Labeled", ControlPlacement -> 
         6}, {{$CellContext`Infectious$$, 0.1, ""}, 0, 1, 0.01, ControlType -> 
         Slider, Appearance -> "Labeled", ControlPlacement -> 
         7}, {{$CellContext`Incubation$$, 3, ""}, 1, 7, 1, ControlType -> 
         Slider, Appearance -> "Labeled", ControlPlacement -> 
         8}, {{$CellContext`Recovery$$, 3, ""}, 1, 7, 1, ControlType -> 
         Slider, Appearance -> "Labeled", ControlPlacement -> 9}, 
        Column[{
          Dynamic[
           Button[
            StringJoin[
             If[$CellContext`running$$, "reset", "run"], " simulation"], {
             If[
              Not[$CellContext`running$$], $CellContext`moving$$ = 
              True], $CellContext`running$$ = Not[$CellContext`running$$]}, 
            ImageSize -> 225, Alignment -> Center]], 
          Dynamic[
           If[$CellContext`running$$, 
            Column[{
              Column[{
                Spacer[{0, 10}], "day (morning)", 
                Manipulate`Place[1]}, Left], 
              Column[{
                Spacer[{0, 10}], 
                Row[{"duration of simulation = ", 
                  ToString[$CellContext`Days$$]}], 
                Spacer[{0, 15}], 
                Row[{"city population = ", 
                  ToString[$CellContext`TotalPop$$]}], 
                Spacer[{0, 15}], 
                Row[{"initial infected cases, City A = ", 
                  ToString[$CellContext`InfectedA$$]}], 
                Spacer[{0, 15}], 
                Row[{"initial infected cases, City B = ", 
                  ToString[$CellContext`InfectedB$$]}], 
                Spacer[{0, 15}], 
                Row[{"travellers/day = ", 
                  ToString[$CellContext`Transfer$$]}], 
                Spacer[{0, 15}], 
                Row[{"chance of infection on contact = ", 
                  ToString[$CellContext`Infectious$$]}], 
                Spacer[{0, 15}], 
                Row[{"latency before contagious state [days] = ", 
                  ToString[$CellContext`Incubation$$]}], 
                Spacer[{0, 15}], 
                Row[{"duration of contagious state [days] = ", 
                  ToString[$CellContext`Recovery$$]}]}, Right]}, Center], 
            ""]], 
          Dynamic[
           If[
            Not[$CellContext`running$$], 
            Column[{"duration of simulation [days]", 
              Manipulate`Place[2], "city population", 
              Manipulate`Place[3], "initial infected cases, City A", 
              Manipulate`Place[4], "initial infected cases, City B", 
              Manipulate`Place[5], "travellers/day", 
              Manipulate`Place[6], "chance of infection on contact", 
              Manipulate`Place[7], "latency before contagious state [days]", 
              Manipulate`Place[8], "duration of contagious state [days]", 
              Manipulate`Place[9]}, Left, 0.45], ""]]}, Center]}, 
      "Options" :> {
       ControlPlacement -> Left, ContentSize -> {340, 400}, FrameMargins -> 
        0}, "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{633., {216., 221.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.551043162209744*^9, 3.5510436253077993`*^9, 
  3.551044137983535*^9, 3.551044452052223*^9, 3.5510450722867823`*^9, 
  3.551045616724972*^9, 3.551045681033531*^9, 3.551045711535167*^9, 
  3.5510466249608626`*^9, 3.5510467849698353`*^9, 3.5510475765080357`*^9, 
  3.551047662502887*^9},
 CellID->344992128]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SnapshotsSection"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`Days$$ = 7, $CellContext`i$$ = 
    0, $CellContext`Incubation$$ = 3, $CellContext`InfectedA$$ = 
    1, $CellContext`InfectedB$$ = 1, $CellContext`Infectious$$ = 
    0.1, $CellContext`j$$ = 0, $CellContext`moving$$ = 
    False, $CellContext`Pops$$ = Pane[
     Grid[{{"", 
        Image[CompressedData["
1:eJzt3S1w60yWxvHsBzA0NPQwQUNB7yJD1QwR9EzV7oqta2ar1oMMDQ0FBQ0N
DQ0FAw0NDQ0N7z5vut5UdnyTG8mS+uv/q5qpzJ3Y7iTS6dOnW91/+Mt///E/
//nl5eVvI/3XH//8v//217/++e9/+lf9j3//+//8x1/+RV/81z+9vBT6z29f
/wAAAAAAAAAAAADQ0Pl8Pv3u9fXVdnMADO1yuej2PxwOm99lWTZ/M5vNXn4m
SZL57z77Hv27+Qa92/s761P0WQo7tn9oAN/1Hh+KotAdrdtfN/h0Ov3p3f1k
LqHXmjd5jEgfP3e5XOrf9/u9vvN+v3f4wwJoQd26uWcXi4VuUt2q7/GhLEvr
/b7Jc6qqUnvyPFfbRqPRZDLRFyaS1HVtsXlAJHQn6jZULpGmqRlNmChxPB71
f9lu3bdcr1cFExNJzE+h8Y6+VqCjkAJ0RZ3ybrdTfFBPraRCab9usZB6aoUL
5R4Khgog4/FYuZOiimKL7XYBntGttN1ulc+rO1anvFqtNB5RT227Xb273W7K
nRQ33n/29XodUpAEuqVbRt2u0gnlFep5db/Q5ypiKH4qeigP0VhGY7QYgifw
S+fzmVvjlx6DKsUQREjhQtl48oZUvBEziFP0mE6nGsERQBC8j+FCX7A+6hmX
y2W32xFAECql2WVZEi568jGAKBVhoAffaQBiRuVFURAu+qYAokGfftt5nh+P
R9vNAZp5TzDSNK2qivXVA9vv92YNLekHvKAujwTDER/TD6ofcJOuTF2f6uNI
MFyj9MM8vcuSGLijrussy3Rl6vq03RZ8SkHDPPh/OBxstwVRM5dimqZcir7Q
n8wEef5kGJ6uOtN5kfr6SINKRQ8zqLTdFkRBEUO9la46IobvTBFb0aMsS0pS
6In6Jl1jihgU50Oi6FEUhf6yu92O6IEOqT8ye1/4sj0Omrper6vVajKZbDYb
ogeeVNd1mqbqj4gYMbjdboob6iNYbop2dAmZHfl4WDU2yj0Wb+gs0EhVVUmS
aHhiuyGwRimHroHtdsuwBb90Pp+VYyyXS55rgCLGer2ezWYMW/AZDUx0kaiL
YWCCj9SVaMySZRldCf7B4XAwSanthsBRXCH4iN4E30RGih9vo9fNZsPoFY1Q
AYuZugxFDBb5oB0z48bDcVHZ7Xbz+Zx9dfAMDVs0vF2tVnQ9weNvjW6ZPogV
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
9ECZyWdx4/Gbbf8EAAAAAAAAAAAAgKP+DwAVnG4=
         "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
        Column[{
          Style["City A", "Title", 20], 
          Style["Latent       =", 
           RGBColor[0, 0, 1], Bold], 
          Style["Contagious   =", 
           RGBColor[1, 0, 0], Bold], 
          Style["Susceptible  =", 
           RGBColor[0., 0.5, 0.], Bold], 
          Style["Recovered    =", 
           RGBColor[0., 0.5, 0.], Bold]}]}, {"", 
        Image[CompressedData["
1:eJzt3S1w60yWxvHsBzA0NPQwQUNB7yJD1QwR9EzV7oqta2ar1oMMDQ0FBQ0N
DQ0FAw0NDQ0N7z5vut5UdnyTG8mS+uv/q5qpzJ3Y7iTS6dOnW91/+Mt///E/
//nl5eVvI/3XH//8v//217/++e9/+lf9j3//+//8x1/+RV/81z+9vBT6z29f
/wAAAAAAAAAAAADQ0Pl8Pv3u9fXVdnMADO1yuej2PxwOm99lWTZ/M5vNXn4m
SZL57z77Hv27+Qa92/s761P0WQo7tn9oAN/1Hh+KotAdrdtfN/h0Ov3p3f1k
LqHXmjd5jEgfP3e5XOrf9/u9vvN+v3f4wwJoQd26uWcXi4VuUt2q7/GhLEvr
/b7Jc6qqUnvyPFfbRqPRZDLRFyaS1HVtsXlAJHQn6jZULpGmqRlNmChxPB71
f9lu3bdcr1cFExNJzE+h8Y6+VqCjkAJ0RZ3ybrdTfFBPraRCab9usZB6aoUL
5R4Khgog4/FYuZOiimKL7XYBntGttN1ulc+rO1anvFqtNB5RT227Xb273W7K
nRQ33n/29XodUpAEuqVbRt2u0gnlFep5db/Q5ypiKH4qeigP0VhGY7QYgifw
S+fzmVvjlx6DKsUQREjhQtl48oZUvBEziFP0mE6nGsERQBC8j+FCX7A+6hmX
y2W32xFAECql2WVZEi568jGAKBVhoAffaQBiRuVFURAu+qYAokGfftt5nh+P
R9vNAZp5TzDSNK2qivXVA9vv92YNLekHvKAujwTDER/TD6ofcJOuTF2f6uNI
MFyj9MM8vcuSGLijrussy3Rl6vq03RZ8SkHDPPh/OBxstwVRM5dimqZcir7Q
n8wEef5kGJ6uOtN5kfr6SINKRQ8zqLTdFkRBEUO9la46IobvTBFb0aMsS0pS
6In6Jl1jihgU50Oi6FEUhf6yu92O6IEOqT8ye1/4sj0Omrper6vVajKZbDYb
ogeeVNd1mqbqj4gYMbjdboob6iNYbop2dAmZHfl4WDU2yj0Wb+gs0EhVVUmS
aHhiuyGwRimHroHtdsuwBb90Pp+VYyyXS55rgCLGer2ezWYMW/AZDUx0kaiL
YWCCj9SVaMySZRldCf7B4XAwSanthsBRXCH4iN4E30RGih9vo9fNZsPoFY1Q
AYuZugxFDBb5oB0z48bDcVHZ7Xbz+Zx9dfAMDVs0vF2tVnQ9weNvjW6ZPogV
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
9ECZyWdx4/Gbbf8EAAAAAAAAAAAAgKP+DwAVnG4=
         "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
        Column[{
          Style["City B", "Title", 20], 
          Style["Latent       =", 
           RGBColor[0, 0, 1], Bold], 
          Style["Contagious   =", 
           RGBColor[1, 0, 0], Bold], 
          Style["Susceptible  =", 
           RGBColor[0., 0.5, 0.], Bold], 
          Style["Recovered    =", 
           RGBColor[0., 0.5, 0.], Bold]}]}}, Spacings -> {{10, 2}, 1.8}], {
     200, 400}], $CellContext`Recovery$$ = 3, $CellContext`running$$ = 
    False, $CellContext`TotalPop$$ = 10, $CellContext`Transfer$$ = 
    0, $CellContext`w$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`moving$$], False}, {
      Hold[$CellContext`running$$], False}, {
      Hold[$CellContext`Pops$$], 
      Pane[
       Grid[{{"", 
          Image[CompressedData["
1:eJzt3S1w60yWxvHsBzA0NPQwQUNB7yJD1QwR9EzV7oqta2ar1oMMDQ0FBQ0N
DQ0FAw0NDQ0N7z5vut5UdnyTG8mS+uv/q5qpzJ3Y7iTS6dOnW91/+Mt///E/
//nl5eVvI/3XH//8v//217/++e9/+lf9j3//+//8x1/+RV/81z+9vBT6z29f
/wAAAAAAAAAAAADQ0Pl8Pv3u9fXVdnMADO1yuej2PxwOm99lWTZ/M5vNXn4m
SZL57z77Hv27+Qa92/s761P0WQo7tn9oAN/1Hh+KotAdrdtfN/h0Ov3p3f1k
LqHXmjd5jEgfP3e5XOrf9/u9vvN+v3f4wwJoQd26uWcXi4VuUt2q7/GhLEvr
/b7Jc6qqUnvyPFfbRqPRZDLRFyaS1HVtsXlAJHQn6jZULpGmqRlNmChxPB71
f9lu3bdcr1cFExNJzE+h8Y6+VqCjkAJ0RZ3ybrdTfFBPraRCab9usZB6aoUL
5R4Khgog4/FYuZOiimKL7XYBntGttN1ulc+rO1anvFqtNB5RT227Xb273W7K
nRQ33n/29XodUpAEuqVbRt2u0gnlFep5db/Q5ypiKH4qeigP0VhGY7QYgifw
S+fzmVvjlx6DKsUQREjhQtl48oZUvBEziFP0mE6nGsERQBC8j+FCX7A+6hmX
y2W32xFAECql2WVZEi568jGAKBVhoAffaQBiRuVFURAu+qYAokGfftt5nh+P
R9vNAZp5TzDSNK2qivXVA9vv92YNLekHvKAujwTDER/TD6ofcJOuTF2f6uNI
MFyj9MM8vcuSGLijrussy3Rl6vq03RZ8SkHDPPh/OBxstwVRM5dimqZcir7Q
n8wEef5kGJ6uOtN5kfr6SINKRQ8zqLTdFkRBEUO9la46IobvTBFb0aMsS0pS
6In6Jl1jihgU50Oi6FEUhf6yu92O6IEOqT8ye1/4sj0Omrper6vVajKZbDYb
ogeeVNd1mqbqj4gYMbjdboob6iNYbop2dAmZHfl4WDU2yj0Wb+gs0EhVVUmS
aHhiuyGwRimHroHtdsuwBb90Pp+VYyyXS55rgCLGer2ezWYMW/AZDUx0kaiL
YWCCj9SVaMySZRldCf7B4XAwSanthsBRXCH4iN4E30RGih9vo9fNZsPoFY1Q
AYuZugxFDBb5oB0z48bDcVHZ7Xbz+Zx9dfAMDVs0vF2tVnQ9weNvjW6ZPogV
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
9ECZyWdx4/Gbbf8EAAAAAAAAAAAAgKP+DwAVnG4=
           "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
          Column[{
            Style["City A", "Title", 20], 
            Style["Latent       =", 
             RGBColor[0, 0, 1], Bold], 
            Style["Contagious   =", 
             RGBColor[1, 0, 0], Bold], 
            Style["Susceptible  =", 
             RGBColor[0., 0.5, 0.], Bold], 
            Style["Recovered    =", 
             RGBColor[0., 0.5, 0.], Bold]}]}, {"", 
          Image[CompressedData["
1:eJzt3S1w60yWxvHsBzA0NPQwQUNB7yJD1QwR9EzV7oqta2ar1oMMDQ0FBQ0N
DQ0FAw0NDQ0N7z5vut5UdnyTG8mS+uv/q5qpzJ3Y7iTS6dOnW91/+Mt///E/
//nl5eVvI/3XH//8v//217/++e9/+lf9j3//+//8x1/+RV/81z+9vBT6z29f
/wAAAAAAAAAAAADQ0Pl8Pv3u9fXVdnMADO1yuej2PxwOm99lWTZ/M5vNXn4m
SZL57z77Hv27+Qa92/s761P0WQo7tn9oAN/1Hh+KotAdrdtfN/h0Ov3p3f1k
LqHXmjd5jEgfP3e5XOrf9/u9vvN+v3f4wwJoQd26uWcXi4VuUt2q7/GhLEvr
/b7Jc6qqUnvyPFfbRqPRZDLRFyaS1HVtsXlAJHQn6jZULpGmqRlNmChxPB71
f9lu3bdcr1cFExNJzE+h8Y6+VqCjkAJ0RZ3ybrdTfFBPraRCab9usZB6aoUL
5R4Khgog4/FYuZOiimKL7XYBntGttN1ulc+rO1anvFqtNB5RT227Xb273W7K
nRQ33n/29XodUpAEuqVbRt2u0gnlFep5db/Q5ypiKH4qeigP0VhGY7QYgifw
S+fzmVvjlx6DKsUQREjhQtl48oZUvBEziFP0mE6nGsERQBC8j+FCX7A+6hmX
y2W32xFAECql2WVZEi568jGAKBVhoAffaQBiRuVFURAu+qYAokGfftt5nh+P
R9vNAZp5TzDSNK2qivXVA9vv92YNLekHvKAujwTDER/TD6ofcJOuTF2f6uNI
MFyj9MM8vcuSGLijrussy3Rl6vq03RZ8SkHDPPh/OBxstwVRM5dimqZcir7Q
n8wEef5kGJ6uOtN5kfr6SINKRQ8zqLTdFkRBEUO9la46IobvTBFb0aMsS0pS
6In6Jl1jihgU50Oi6FEUhf6yu92O6IEOqT8ye1/4sj0Omrper6vVajKZbDYb
ogeeVNd1mqbqj4gYMbjdboob6iNYbop2dAmZHfl4WDU2yj0Wb+gs0EhVVUmS
aHhiuyGwRimHroHtdsuwBb90Pp+VYyyXS55rgCLGer2ezWYMW/AZDUx0kaiL
YWCCj9SVaMySZRldCf7B4XAwSanthsBRXCH4iN4E30RGih9vo9fNZsPoFY1Q
AYuZugxFDBb5oB0z48bDcVHZ7Xbz+Zx9dfAMDVs0vF2tVnQ9weNvjW6ZPogV
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
9ECZyWdx4/Gbbf8EAAAAAAAAAAAAgKP+DwAVnG4=
           "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
          Column[{
            Style["City B", "Title", 20], 
            Style["Latent       =", 
             RGBColor[0, 0, 1], Bold], 
            Style["Contagious   =", 
             RGBColor[1, 0, 0], Bold], 
            Style["Susceptible  =", 
             RGBColor[0., 0.5, 0.], Bold], 
            Style["Recovered    =", 
             RGBColor[0., 0.5, 0.], Bold]}]}}, Spacings -> {{10, 2}, 1.8}], {
       200, 400}]}, {
      Hold[$CellContext`InfectedA$$], 1}, {
      Hold[$CellContext`InfectedB$$], 1}, {
      Hold[$CellContext`Days$$], 7}, {
      Hold[$CellContext`Recovery$$], 3}, {
      Hold[$CellContext`Incubation$$], 3}, {
      Hold[$CellContext`Infectious$$], 10}, {
      Hold[$CellContext`Transfer$$], 0}, {
      Hold[$CellContext`w$$], 1}, {
      Hold[$CellContext`TotalPop$$], 10}, {
      Hold[$CellContext`i$$], 0}, {
      Hold[$CellContext`j$$], 0}, {{
       Hold[$CellContext`w$$], 1, ""}, 1, 
      Dynamic[$CellContext`Days$$], 1}, {{
       Hold[$CellContext`Days$$], 7, ""}, 1, 21, 1}, {{
       Hold[$CellContext`TotalPop$$], 10, ""}, 1, 100, 1}, {{
       Hold[$CellContext`InfectedA$$], 1, ""}, 0, 
      Dynamic[$CellContext`TotalPop$$], 1}, {{
       Hold[$CellContext`InfectedB$$], 1, ""}, 0, 
      Dynamic[$CellContext`TotalPop$$], 1}, {{
       Hold[$CellContext`Transfer$$], 0, ""}, 0, 
      Dynamic[$CellContext`TotalPop$$], 1}, {{
       Hold[$CellContext`Infectious$$], 0.1, ""}, 0, 1, 0.01}, {{
       Hold[$CellContext`Incubation$$], 3, ""}, 1, 7, 1}, {{
       Hold[$CellContext`Recovery$$], 3, ""}, 1, 7, 1}, {
      Hold[
       Column[{
         Dynamic[
          Button[
           StringJoin[
            If[$CellContext`running$$, "reset", "run"], " simulation"], {
            If[
             Not[$CellContext`running$$], $CellContext`moving$$ = 
             True], $CellContext`running$$ = Not[$CellContext`running$$]}, 
           ImageSize -> 225, Alignment -> Center]], 
         Dynamic[
          If[$CellContext`running$$, 
           Column[{
             Column[{
               Spacer[{0, 10}], "day (morning)", 
               Manipulate`Place[1]}, Left], 
             Column[{
               Spacer[{0, 10}], 
               Row[{"duration of simulation = ", 
                 ToString[$CellContext`Days$$]}], 
               Spacer[{0, 15}], 
               Row[{"city population = ", 
                 ToString[$CellContext`TotalPop$$]}], 
               Spacer[{0, 15}], 
               Row[{"initial infected cases, City A = ", 
                 ToString[$CellContext`InfectedA$$]}], 
               Spacer[{0, 15}], 
               Row[{"initial infected cases, City B = ", 
                 ToString[$CellContext`InfectedB$$]}], 
               Spacer[{0, 15}], 
               Row[{"travellers/day = ", 
                 ToString[$CellContext`Transfer$$]}], 
               Spacer[{0, 15}], 
               Row[{"chance of infection on contact = ", 
                 ToString[$CellContext`Infectious$$]}], 
               Spacer[{0, 15}], 
               Row[{"latency before contagious state [days] = ", 
                 ToString[$CellContext`Incubation$$]}], 
               Spacer[{0, 15}], 
               Row[{"duration of contagious state [days] = ", 
                 ToString[$CellContext`Recovery$$]}]}, Right]}, Center], ""]], 
         Dynamic[
          If[
           Not[$CellContext`running$$], 
           Column[{"duration of simulation [days]", 
             Manipulate`Place[2], "city population", 
             Manipulate`Place[3], "initial infected cases, City A", 
             Manipulate`Place[4], "initial infected cases, City B", 
             Manipulate`Place[5], "travellers/day", 
             Manipulate`Place[6], "chance of infection on contact", 
             Manipulate`Place[7], "latency before contagious state [days]", 
             Manipulate`Place[8], "duration of contagious state [days]", 
             Manipulate`Place[9]}, Left, 0.45], ""]]}, Center]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    311., {188.5, 193.5}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`w$2734$$ = 
    0, $CellContext`Days$2735$$ = 0, $CellContext`TotalPop$2736$$ = 
    0, $CellContext`InfectedA$2737$$ = 0, $CellContext`InfectedB$2738$$ = 
    0, $CellContext`Transfer$2739$$ = 0, $CellContext`Infectious$2740$$ = 
    0, $CellContext`Incubation$2741$$ = 0, $CellContext`Recovery$2742$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`Days$$ = 7, $CellContext`i$$ = 
        0, $CellContext`Incubation$$ = 3, $CellContext`InfectedA$$ = 
        1, $CellContext`InfectedB$$ = 1, $CellContext`Infectious$$ = 
        0.1, $CellContext`j$$ = 0, $CellContext`moving$$ = 
        False, $CellContext`Pops$$ = Pane[
          Grid[{{"", 
             Image[CompressedData["
1:eJzt3S1w60yWxvHsBzA0NPQwQUNB7yJD1QwR9EzV7oqta2ar1oMMDQ0FBQ0N
DQ0FAw0NDQ0N7z5vut5UdnyTG8mS+uv/q5qpzJ3Y7iTS6dOnW91/+Mt///E/
//nl5eVvI/3XH//8v//217/++e9/+lf9j3//+//8x1/+RV/81z+9vBT6z29f
/wAAAAAAAAAAAADQ0Pl8Pv3u9fXVdnMADO1yuej2PxwOm99lWTZ/M5vNXn4m
SZL57z77Hv27+Qa92/s761P0WQo7tn9oAN/1Hh+KotAdrdtfN/h0Ov3p3f1k
LqHXmjd5jEgfP3e5XOrf9/u9vvN+v3f4wwJoQd26uWcXi4VuUt2q7/GhLEvr
/b7Jc6qqUnvyPFfbRqPRZDLRFyaS1HVtsXlAJHQn6jZULpGmqRlNmChxPB71
f9lu3bdcr1cFExNJzE+h8Y6+VqCjkAJ0RZ3ybrdTfFBPraRCab9usZB6aoUL
5R4Khgog4/FYuZOiimKL7XYBntGttN1ulc+rO1anvFqtNB5RT227Xb273W7K
nRQ33n/29XodUpAEuqVbRt2u0gnlFep5db/Q5ypiKH4qeigP0VhGY7QYgifw
S+fzmVvjlx6DKsUQREjhQtl48oZUvBEziFP0mE6nGsERQBC8j+FCX7A+6hmX
y2W32xFAECql2WVZEi568jGAKBVhoAffaQBiRuVFURAu+qYAokGfftt5nh+P
R9vNAZp5TzDSNK2qivXVA9vv92YNLekHvKAujwTDER/TD6ofcJOuTF2f6uNI
MFyj9MM8vcuSGLijrussy3Rl6vq03RZ8SkHDPPh/OBxstwVRM5dimqZcir7Q
n8wEef5kGJ6uOtN5kfr6SINKRQ8zqLTdFkRBEUO9la46IobvTBFb0aMsS0pS
6In6Jl1jihgU50Oi6FEUhf6yu92O6IEOqT8ye1/4sj0Omrper6vVajKZbDYb
ogeeVNd1mqbqj4gYMbjdboob6iNYbop2dAmZHfl4WDU2yj0Wb+gs0EhVVUmS
aHhiuyGwRimHroHtdsuwBb90Pp+VYyyXS55rgCLGer2ezWYMW/AZDUx0kaiL
YWCCj9SVaMySZRldCf7B4XAwSanthsBRXCH4iN4E30RGih9vo9fNZsPoFY1Q
AYuZugxFDBb5oB0z48bDcVHZ7Xbz+Zx9dfAMDVs0vF2tVnQ9weNvjW6ZPogV
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
9ECZyWdx4/Gbbf8EAAAAAAAAAAAAgKP+DwAVnG4=
              "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
             Column[{
               Style["City A", "Title", 20], 
               Style["Latent       =", 
                RGBColor[0, 0, 1], Bold], 
               Style["Contagious   =", 
                RGBColor[1, 0, 0], Bold], 
               Style["Susceptible  =", 
                RGBColor[0., 0.5, 0.], Bold], 
               Style["Recovered    =", 
                RGBColor[0., 0.5, 0.], Bold]}]}, {"", 
             Image[CompressedData["
1:eJzt3S1w60yWxvHsBzA0NPQwQUNB7yJD1QwR9EzV7oqta2ar1oMMDQ0FBQ0N
DQ0FAw0NDQ0N7z5vut5UdnyTG8mS+uv/q5qpzJ3Y7iTS6dOnW91/+Mt///E/
//nl5eVvI/3XH//8v//217/++e9/+lf9j3//+//8x1/+RV/81z+9vBT6z29f
/wAAAAAAAAAAAADQ0Pl8Pv3u9fXVdnMADO1yuej2PxwOm99lWTZ/M5vNXn4m
SZL57z77Hv27+Qa92/s761P0WQo7tn9oAN/1Hh+KotAdrdtfN/h0Ov3p3f1k
LqHXmjd5jEgfP3e5XOrf9/u9vvN+v3f4wwJoQd26uWcXi4VuUt2q7/GhLEvr
/b7Jc6qqUnvyPFfbRqPRZDLRFyaS1HVtsXlAJHQn6jZULpGmqRlNmChxPB71
f9lu3bdcr1cFExNJzE+h8Y6+VqCjkAJ0RZ3ybrdTfFBPraRCab9usZB6aoUL
5R4Khgog4/FYuZOiimKL7XYBntGttN1ulc+rO1anvFqtNB5RT227Xb273W7K
nRQ33n/29XodUpAEuqVbRt2u0gnlFep5db/Q5ypiKH4qeigP0VhGY7QYgifw
S+fzmVvjlx6DKsUQREjhQtl48oZUvBEziFP0mE6nGsERQBC8j+FCX7A+6hmX
y2W32xFAECql2WVZEi568jGAKBVhoAffaQBiRuVFURAu+qYAokGfftt5nh+P
R9vNAZp5TzDSNK2qivXVA9vv92YNLekHvKAujwTDER/TD6ofcJOuTF2f6uNI
MFyj9MM8vcuSGLijrussy3Rl6vq03RZ8SkHDPPh/OBxstwVRM5dimqZcir7Q
n8wEef5kGJ6uOtN5kfr6SINKRQ8zqLTdFkRBEUO9la46IobvTBFb0aMsS0pS
6In6Jl1jihgU50Oi6FEUhf6yu92O6IEOqT8ye1/4sj0Omrper6vVajKZbDYb
ogeeVNd1mqbqj4gYMbjdboob6iNYbop2dAmZHfl4WDU2yj0Wb+gs0EhVVUmS
aHhiuyGwRimHroHtdsuwBb90Pp+VYyyXS55rgCLGer2ezWYMW/AZDUx0kaiL
YWCCj9SVaMySZRldCf7B4XAwSanthsBRXCH4iN4E30RGih9vo9fNZsPoFY1Q
AYuZugxFDBb5oB0z48bDcVHZ7Xbz+Zx9dfAMDVs0vF2tVnQ9weNvjW6ZPogV
YgEzYxNyS3SL6ypg9AvoD3lsePibYhj0TcEgh8SQuN4CQPzH8Mhv/cXfDnbR
Z3mHXBEu4Dr0SFVVxHk4wuS96/XadkPwFSWHy+WSsQmcst1udVnabgV+TlF9
tVrZbgXwE0qDF4sFPZprFM/ZGwEuOx6PGkFr5GK7IfiNYrgiOQdvwX11XVN8
c4Git/4QbKABX7y+vvIstl2K25xTAO+Y65ZT/6wgbsNfypMVOsiTB8Y4Eb67
3+9ZllGXGwx1aYRBoWO5XO52O9sNCR/z4AjMarViQWmvzHJQ260AOsaC0v4o
0+B3i1CpT2S1c+eOx6OGJ7ZbAfRIoxXWPHfIzJ5Q00DwlFEzw9IJs06D2RNE
Qnk16zqedLlcWKeBqCiv1jXPKujWzJo6VoQiNuapKxait0DURczItFswS3AZ
5SFm5uB7KnvfR1UZ+PE2KaDQwUzidzCLDbxT1q3cm9DxNUUM1uoDH7FS+mv8
foCfYhX6Z1gUCnyBot+j2+02m82YdQI+oy5V9wjLmT7Ksozj8ICvKWgodJCT
G4zdgG+iBmhQ1gAaodBBWQNoikIHZQ2ghZgLHZQ1gNbiLHRQ1gCeFFuhg7IG
8LzYCh2UNYBOxFPooKwBdCiGQgdlDaBzYRc6FC6SJKGsAXQr7EIHG/IAPQn1
YDJ2PAN6FeR0w3w+P51OtlsBBOt6vU6n05C65v1+n+e57VYAgQtpsvJ2uyVJ
omBouyFA4JRspGkaxoFNCoAKg7ZbAUThdDrN53PbrXiWQt9sNrPdCiAiASzn
UNbEWY3AkK7Xa5Ik/h70VpZlURS2WwFEx99bT0FPIxTKoYAVuvt8LJAGMMgC
/OVjabGu6zRNbbcCiJqGKhqw2G5FA57mSEBI/Fo6FdKiNcBrvtyM9/t9Op36
EuKAsPlyP/oS34BIeHFLTiYT94MbEA/3U47D4ZBlme1WAPh/HE85mEYBHORy
ykGyATjL2ZSDZANw1u12m0wmru0GRrIBOM7BnXBINgDHubYBaRhbDAHBcyrl
CHIDdiA87qQcPj6uC0TLkZSDZAPwiAspB8kG4B3rfb31BgBoym5370LCA6AF
i+eubrfb9Xpt5aMBPKOqquVyaeWjlWxcLhcrHw3gGRomTCaT4c9YOR6Pi8Vi
4A8F0BUrE7JURAGvDV8dpSIKBGDgx8qoiAIBGPg4SCqiQACG3JSDs9iAYOR5
vt/vB/ggjVA0ThnggwD0TUFDoWOAD2KQAgRDg5TxeNz3UIVBChCYAYYqDFKA
wAywhpNBChCYvtecM0gBgrRcLquq6unNGaQAQep1qMJhB0CQ+ptVuVwu0+m0
87cF4ALlG8o6On9bixt9AOhbTwfIDrYeFcDwehpQaPgz/O5AAAbT+SoLTnIE
glcURVmWHb7h5k2HbwjANYfDIcuyDt+QGVggeN3Oxup9RqNRJ28FwGVpmtZ1
3clbUdwAItHhJucUN4BIdFji6GkhGQDX3G638XjcyVuxcgOIRyerOOweXQ1g
YJ08U9/TqnUAburkSbReN/QA4JpOhhhJkpzP507aA8ALo9HomdVfrPgCIvTk
6i+KokCEnnzAbeBjZwG44MnZkA4XnQLwxZOPlrBSFIjQk6tGWSkKxGkymVyv
1xYv1Kv02s7bA8B9rccaA5waCcBNrWubTKYA0Wo9pcKpjkC0Wm/EwYEpQLRa
r/nscKdBAH5pPRXbeiIGQABaLMPocLswAD5qcfoJT7QBkcuy7HA4NHpJ5yc3
AfBLiyUcLN4AIrfdbtfrdaOXcGYKELkWG43yBD0QuRbFCrYjBiLXYhcOdt4A
Ine5XKbTaaOXKM4o2vTTHAAeaLGIq5Oz3gB47eXlpdH3s8gcQNM40DTOAAhP
02PXiBsAmtY5iRsAGsWNFvMvAMJD3ADQFHEDQFONNgslbgD40fB5EzbtAfCj
Ydx48lRZAGEgbgBoirgBoKlGcaOu6zRN+2wOAA80ihvMpwD4QdwA0BxxA0BT
rBcF0FSjuHG/30ejUZ/NAeABnqMH0BRxA0BTTY+WbnGEPYDANN2fnP3MAYxG
o/v9/v3vT9O0ruv+2gPAfU3rFZy7BESuxXoMzocFInc+n5MkafSSoijKsuyp
PQDc1+K5+M2bfpoDwAOHwyHLskYv2e12q9Wqp/YAcF9VVcvlstFL9vt9nuc9
tQeA+7bb7Xq9bvQStu4BIteiyHm9XieTSU/tAeC+xWJxPB6bvoql5kDM2i0a
b/pIC4CQtHu4Ncuyw+HQeWMAuK/15l2r1Wq323XeHgDua30YCks4gGi1WLxh
tFgtBiAM6/V6u922eGGLp1oAhOGZ8mbTXTsAhEE5gzKHdq9l9x4gQk+eaMDT
9ECEXl9fZ7NZ65czpQJESNmCcobWLz8ej4vFosP2AHDfk2u3brfbeDzusD0A
3NfuibaPJpPJ9Xrtqj0A3Pf8Xf985AHgkU720GCjUSAqnSwUb/14CwAfdfJA
6/1+H4/HrBoFItHVxjts4ANEosM8gY04gEh0WJfggXogEh3Og7D6C4hEt+su
2u1sDMAv3Z5iwIOxQPA6X3RBiQMIXueLPFnFAQSvjxUXSmCUxnT7ngAc0dP0
B3v4AAFrffDB157cOgyAyxQ0FDr6eGdmY4FQ9XeOfH8RCYBFdV2nadrTm7Pd
KBCk1qezfcf9fp9MJj0lMwBs6bsEwVAFCEyvgxSDoQoQmF4HKQZDFSAww8yT
MlQBgjHAIMVgqAIEY4BBisFQBQjGkIs52XEUCMDAp5zwrAoQgDzP9/v9kJ+Y
pmld10N+IoAOXa9XDVIG3lSnp6duAQzDys4YVEcBryVJcj6fh/9cqqOApyye
+0x1FPDU8BXRj6iOAt6xUhH9iPMRAO+4UGHgtHrAI47MaJByAB5x52ACUg7A
C0o2ptPp9Xq13ZDf7Pf7PM9ttwLAL7iTbPxwLIgB+CkH71On4hiARw7epA6G
MgAf2VpY/jUHoxkAw9l5T1IOwFkuT3qScgAOcjbZMJRyjMdji+veATxyOdkw
XFj6DuCd48mGYf1ROwAfLRaL4/FouxW/RsoBOMKjTXJut1uSJEysANa5X9n4
iF2LAevKsiyKwnYrmmErMMAiJfxKNrxL+z0aWAHh8ff8dwqkgBWDnTLfB1ae
A1b4VQ59xJY+wMDCeNxjPp+fTifbrQCiEMzCS+VLGmoF8IMA7rN7oFK31uv1
dru13QogcMfjcbFY2G5FZyiQAn3TXTabzRzc0esZXjyUB/hLKb0Se9ut6J4v
z+UB3rlcLkmSBFlFVAalPCrIHw2wS8m8UnrbrehLGDPLgFNieIw07MAIDCyS
NP52u+nH1HDMdkMA7wU5h/KZuq7n83nwERLom78PvbZDoQN4UgxljUcUOoDW
IilrPKLQAbQTVVnjEYUOoIXYyhqPKHQAjcRZ1nhEoQP4pmjLGo8odADfEXlZ
4xGFDuCXKGs8otABfIGyxmcIp8BPsdnmF/RrybKMPTqAjy6Xy2w2u91uthvi
LoUOxVWvj34AOqSgMZ/PmTX4JcVVhQ6KxoDuBQUNutFvIsYCyr0XiwVnDzWi
GKvQwZgO0WI/3nYUafWro4aMCDG3+IzAzpEBvmPzxnYr/MZyF0SFBZBdIfwi
Evv9Ps9z260IhyKw4rDtVgA90qg8yzIKet0K6aBt4B+wkrwnZhU6oQPhYdVB
rxQ6lHWUZWm7IUBnNDwhaAygKArKpAiD8mdl0QSNYShuMDkL3ylzVv5MTWNI
VVVRfIa/1Pcpc7bdihgdDofFYkGOB+8oW2asbdHpdJrP59fr1XZDgG8x04I8
e2KdmfjmoXu4T7mxMmRO/XCE2UiN7U3gMmXFyo3ZT8MpZmck9iuAm9S1sQGm
mxQ6WFAKBylccLKYy8yCUirVcEdVVco0mPVzn+IGkyywTr3Y8g2rjHxxOp2U
GVKDgi3mAGjmW71jyteMWTA8hQsOgPYaYxYMibFJMBizYBiMTQLDmAV9Y2wS
KsYs6ANjk+AxZkG3GJtEgjELusLYJDaKGzwvgNbU+2RZxtgkQnVdq7NYrVas
AUYj2+12Op3yOHzMdrtdkiQ8DYfvOJ1OulrW6zVpBpRz5nk+n88ZqOIzXCT4
KTPVQleCRxqYkJTiM4oYZujK/j8wTBFMvQlFMHxNGeniDRutxEyXwXK5ZNIN
jSjlUGq62WwYtkSoLEv99VnNhRYUMRQ3lKYy4xaP0+mkHKMoCgYmeMb5fM6y
jOgRPHMWj9R1bbstCIQGuYoe5K5BUo+gHINDCtAT5R7L5XI6nRI9wqCIoUxS
PQI5Bvp2uVwUPSaTyW63o2rqKUV+xX9FDKZLMKTr9bparXTtbbdbami+UJwv
y1J/NUV+5tlhi6LHer3WdbjZbIgeLlPEUH6ov1RRFEQMuEARQ3FD16QyEPYT
cw1/HbhM16d6tMlkkuc5K9VdUNe1qUQpbhAx4Lj9fr9YLEzpg8t1ePqdmwWf
aZpWVUXtGh7RIHq9XpN+DEm/Z/229TsvioIH3uG19/RD42tm/fqg36qZ29Lv
mafdERKlH7vdbjabEUC6oozCTGbpt6rfLbMkCBgB5EkKF5vNJnmz3W4JF4jK
ewDReHy5XCrBZgXIZ+73++FwKIpCwdbsb0D5ApG7Xq9VVeV5Ph6P0zRV7s3j
EoaSMWUU8/l8NBplWVaWJdkF8EgRQ3eKoodiyGKx0NexPaSp34DSMEUJpWFm
j77YfgNAaxqzHI9H3TXqbV9eXkweolw9vAUhGoPoJzWn9yqv0E+6Wq2C/EmB
gZk8xPTCYo6q3O/3PpZVz+ezwoLar4QqSRLFCn2h/6m8gjVaQE/UEesW042W
57kyeWUj+m99rX/R/ejU3aesSe0xUcJs86vWKlYoAOpflGZQ3gRsUdah3EN3
ou5Hk+2boY1JS0yRxOgj+denmzcvy1Ifp1GGPtcEtPF4rK9NlKiqinov4Djd
pCYtMUUSQ2OclzeKLfMH+s7NJx6/+eV3ChHmX4qi0Hfudjt9ro8DKABf01jm
9ECZyWdx4/Gbbf8EAAAAAAAAAAAAgKP+DwAVnG4=
              "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
             Column[{
               Style["City B", "Title", 20], 
               Style["Latent       =", 
                RGBColor[0, 0, 1], Bold], 
               Style["Contagious   =", 
                RGBColor[1, 0, 0], Bold], 
               Style["Susceptible  =", 
                RGBColor[0., 0.5, 0.], Bold], 
               Style["Recovered    =", 
                RGBColor[0., 0.5, 0.], Bold]}]}}, 
           Spacings -> {{10, 2}, 1.8}], {200, 400}], $CellContext`Recovery$$ = 
        3, $CellContext`running$$ = False, $CellContext`TotalPop$$ = 
        10, $CellContext`Transfer$$ = 0, $CellContext`w$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`w$$, $CellContext`w$2734$$, 0], 
        Hold[$CellContext`Days$$, $CellContext`Days$2735$$, 0], 
        Hold[$CellContext`TotalPop$$, $CellContext`TotalPop$2736$$, 0], 
        Hold[$CellContext`InfectedA$$, $CellContext`InfectedA$2737$$, 0], 
        Hold[$CellContext`InfectedB$$, $CellContext`InfectedB$2738$$, 0], 
        Hold[$CellContext`Transfer$$, $CellContext`Transfer$2739$$, 0], 
        Hold[$CellContext`Infectious$$, $CellContext`Infectious$2740$$, 0], 
        Hold[$CellContext`Incubation$$, $CellContext`Incubation$2741$$, 0], 
        Hold[$CellContext`Recovery$$, $CellContext`Recovery$2742$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Refresh[If[$CellContext`moving$$, $CellContext`w$$ = 
           1; $CellContext`Pops$$ = {}; $CellContext`PopA = Table[{
              StringJoin[
               ToString[$CellContext`k], "A"], 
              RandomReal[{0, 1.8}], 
              RandomReal[{0, 2 Pi}], "u", 0}, {$CellContext`k, 
              1, $CellContext`TotalPop$$}]; $CellContext`PopB = Table[{
              StringJoin[
               ToString[$CellContext`k], "B"], 
              RandomReal[{0, 1.8}], 
              RandomReal[{0, 2 Pi}], "u", 0}, {$CellContext`k, 
              1, $CellContext`TotalPop$$}]; 
          For[$CellContext`j$$ = 
            1, $CellContext`j$$ < $CellContext`InfectedA$$ + 1, 
            Increment[$CellContext`j$$], Part[
              Part[$CellContext`PopA, $CellContext`j$$], 4] = "i"]; 
          For[$CellContext`j$$ = 
            1, $CellContext`j$$ < $CellContext`InfectedB$$ + 1, 
            Increment[$CellContext`j$$], Part[
              Part[$CellContext`PopB, $CellContext`j$$], 4] = "i"]; 
          For[$CellContext`k = 1, $CellContext`k < $CellContext`Days$$ + 1, 
            
            Increment[$CellContext`k], $CellContext`Pops$$ = 
             Append[$CellContext`Pops$$, 
               Grid[{{"", 
                  Image[
                   Graphics[
                    Join[{{
                    Circle[{0, 0}, 2]}}, 
                    Table[{
                    If[
                    Or[Part[
                    Part[$CellContext`PopA, $CellContext`i$$], 4] == "u", Part[
                    Part[$CellContext`PopA, $CellContext`i$$], 4] == "r"], 
                    Darker[Green, 0.5], 
                    If[Part[
                    Part[$CellContext`PopA, $CellContext`i$$], 4] == "i", Red,
                     Blue]], 
                    Disk[{Part[
                    Part[$CellContext`PopA, $CellContext`i$$], 2] Cos[
                    Part[
                    Part[$CellContext`PopA, $CellContext`i$$], 3]], Part[
                    Part[$CellContext`PopA, $CellContext`i$$], 2] Sin[
                    Part[
                    Part[$CellContext`PopA, $CellContext`i$$], 3]]}, 
                    0.1]}, {$CellContext`i$$, 1, 
                    Length[$CellContext`PopA]}]]]], 
                  Column[{
                    Style["City A", "Title", 20], 
                    Style[
                    StringJoin["Latent       ", "=", 
                    ToString[
                    Length[
                    Cases[$CellContext`PopA, {
                    Blank[], 
                    Blank[], 
                    Blank[], "n", 
                    Blank[]}]]]], Blue, Bold], 
                    Style[
                    StringJoin["Contagious   ", "=", 
                    ToString[
                    Length[
                    Cases[$CellContext`PopA, {
                    Blank[], 
                    Blank[], 
                    Blank[], "i", 
                    Blank[]}]]]], Red, Bold], 
                    Style[
                    StringJoin["Susceptible  ", "=", 
                    ToString[
                    Length[
                    Cases[$CellContext`PopA, {
                    Blank[], 
                    Blank[], 
                    Blank[], "u", 
                    Blank[]}]]]], 
                    Darker[Green, 0.5], Bold], 
                    Style[
                    StringJoin["Recovered    ", "=", 
                    ToString[
                    Length[
                    Cases[$CellContext`PopA, {
                    Blank[], 
                    Blank[], 
                    Blank[], "r", 
                    Blank[]}]]]], 
                    Darker[Green, 0.5], Bold]}]}, {"", 
                  Image[
                   Graphics[
                    Join[{{
                    Circle[{0, 0}, 2]}}, 
                    Table[{
                    If[
                    Or[Part[
                    Part[$CellContext`PopB, $CellContext`i$$], 4] == "u", Part[
                    Part[$CellContext`PopB, $CellContext`i$$], 4] == "r"], 
                    Darker[Green, 0.5], 
                    If[Part[
                    Part[$CellContext`PopB, $CellContext`i$$], 4] == "i", Red,
                     Blue]], 
                    Disk[{Part[
                    Part[$CellContext`PopB, $CellContext`i$$], 2] Cos[
                    Part[
                    Part[$CellContext`PopB, $CellContext`i$$], 3]], Part[
                    Part[$CellContext`PopB, $CellContext`i$$], 2] Sin[
                    Part[
                    Part[$CellContext`PopB, $CellContext`i$$], 3]]}, 
                    0.1]}, {$CellContext`i$$, 1, 
                    Length[$CellContext`PopB]}]]]], 
                  Column[{
                    Style["City B", "Title", 20], 
                    Style[
                    StringJoin["Latent       ", "=", 
                    ToString[
                    Length[
                    Cases[$CellContext`PopB, {
                    Blank[], 
                    Blank[], 
                    Blank[], "n", 
                    Blank[]}]]]], Blue, Bold], 
                    Style[
                    StringJoin["Contagious   ", "=", 
                    ToString[
                    Length[
                    Cases[$CellContext`PopB, {
                    Blank[], 
                    Blank[], 
                    Blank[], "i", 
                    Blank[]}]]]], Red, Bold], 
                    Style[
                    StringJoin["Susceptible  ", "=", 
                    ToString[
                    Length[
                    Cases[$CellContext`PopB, {
                    Blank[], 
                    Blank[], 
                    Blank[], "u", 
                    Blank[]}]]]], 
                    Darker[Green, 0.5], Bold], 
                    Style[
                    StringJoin["Recovered    ", "=", 
                    ToString[
                    Length[
                    Cases[$CellContext`PopB, {
                    Blank[], 
                    Blank[], 
                    Blank[], "r", 
                    Blank[]}]]]], 
                    Darker[Green, 0.5], Bold]}]}}, 
                Spacings -> {{10, 2}, 1.8}]]; 
            For[$CellContext`i$$ = 1, $CellContext`i$$ < 
              Length[$CellContext`PopA] + 1, 
              Increment[$CellContext`i$$], Which[
                And[Part[
                   Part[$CellContext`PopA, $CellContext`i$$], 
                   5] == $CellContext`Recovery$$, Part[
                   Part[$CellContext`PopA, $CellContext`i$$], 4] == "i"], Part[
                   Part[$CellContext`PopA, $CellContext`i$$], 5] = 0; Part[
                   Part[$CellContext`PopA, $CellContext`i$$], 4] = "r", 
                And[Part[
                   Part[$CellContext`PopA, $CellContext`i$$], 
                   5] == $CellContext`Incubation$$ - 1, Part[
                   Part[$CellContext`PopA, $CellContext`i$$], 4] == "n"], Part[
                   Part[$CellContext`PopA, $CellContext`i$$], 5] = 0; Part[
                   Part[$CellContext`PopA, $CellContext`i$$], 4] = "i"]; 
              Null]; For[$CellContext`i$$ = 1, $CellContext`i$$ < 
              Length[$CellContext`PopB] + 1, 
              Increment[$CellContext`i$$], Which[
                And[Part[
                   Part[$CellContext`PopB, $CellContext`i$$], 
                   5] == $CellContext`Recovery$$, Part[
                   Part[$CellContext`PopB, $CellContext`i$$], 4] == "i"], Part[
                   Part[$CellContext`PopB, $CellContext`i$$], 5] = 0; Part[
                   Part[$CellContext`PopB, $CellContext`i$$], 4] = "r", 
                And[Part[
                   Part[$CellContext`PopB, $CellContext`i$$], 
                   5] == $CellContext`Incubation$$ - 1, Part[
                   Part[$CellContext`PopB, $CellContext`i$$], 4] == "n"], Part[
                   Part[$CellContext`PopB, $CellContext`i$$], 5] = 0; Part[
                   Part[$CellContext`PopB, $CellContext`i$$], 4] = "i"]; 
              Null]; For[$CellContext`i$$ = 1, $CellContext`i$$ < 
              Length[$CellContext`PopA] + 1, 
              Increment[$CellContext`i$$], 
              If[
               Or[Part[
                  Part[$CellContext`PopA, $CellContext`i$$], 4] == "i", Part[
                  Part[$CellContext`PopA, $CellContext`i$$], 4] == "n"], Part[
                 Part[$CellContext`PopA, $CellContext`i$$], 5] = Part[
                  Part[$CellContext`PopA, $CellContext`i$$], 5] + 1]]; 
            For[$CellContext`i$$ = 1, $CellContext`i$$ < 
              Length[$CellContext`PopB] + 1, 
              Increment[$CellContext`i$$], 
              If[
               Or[Part[
                  Part[$CellContext`PopB, $CellContext`i$$], 4] == "i", Part[
                  Part[$CellContext`PopB, $CellContext`i$$], 4] == "n"], Part[
                 Part[$CellContext`PopB, $CellContext`i$$], 5] = Part[
                  Part[$CellContext`PopB, $CellContext`i$$], 5] + 
                1]]; $CellContext`TotalPeopleA = 
             Length[$CellContext`PopA]; $CellContext`PeopleMetA = 
             Random[Integer, {10, 20}]; $CellContext`TotalPeopleB = 
             Length[$CellContext`PopB]; $CellContext`PeopleMetB = 
             Random[Integer, {10, 20}]; 
            For[$CellContext`j$$ = 
               1, $CellContext`j$$ < $CellContext`TotalPeopleA + 1, 
               Increment[$CellContext`j$$], 
               
               For[$CellContext`i$$ = 
                0, $CellContext`i$$ < $CellContext`PeopleMetA, 
                
                Increment[$CellContext`i$$], $CellContext`ContactA = 
                 Random[Integer, {1, $CellContext`TotalPeopleA}]; If[Part[
                    Part[$CellContext`PopA, $CellContext`ContactA], 4] == "i", 
                  If[
                   And[Part[
                    Part[$CellContext`PopA, $CellContext`j$$], 4] != "i", Part[
                    Part[$CellContext`PopA, $CellContext`j$$], 4] != "n", Part[
                    Part[$CellContext`PopA, $CellContext`j$$], 4] != "r", 
                    Random[Integer, {1, 100}] < $CellContext`Infectious$$], 
                   Part[
                    Part[$CellContext`PopA, $CellContext`j$$], 4] = "n"], 
                  If[
                   And[Part[
                    Part[$CellContext`PopA, $CellContext`ContactA], 4] != "n",
                     Part[
                    Part[$CellContext`PopA, $CellContext`ContactA], 4] != "r",
                     Part[
                    Part[$CellContext`PopA, $CellContext`j$$], 4] == "i", 
                    Random[Real, {0, 1}] < $CellContext`Infectious$$], Part[
                    Part[$CellContext`PopA, $CellContext`ContactA], 4] = 
                   "n"]]]] 
             For[$CellContext`j$$ = 
               1, $CellContext`j$$ < $CellContext`TotalPeopleB + 1, 
               Increment[$CellContext`j$$], 
               
               For[$CellContext`i$$ = 
                0, $CellContext`i$$ < $CellContext`PeopleMetB, 
                
                Increment[$CellContext`i$$], $CellContext`ContactB = 
                 Random[Integer, {1, $CellContext`TotalPeopleB}]; If[Part[
                    Part[$CellContext`PopB, $CellContext`ContactB], 4] == "i", 
                  If[
                   And[Part[
                    Part[$CellContext`PopB, $CellContext`j$$], 4] != "i", Part[
                    Part[$CellContext`PopB, $CellContext`j$$], 4] != "n", Part[
                    Part[$CellContext`PopB, $CellContext`j$$], 4] != "r", 
                    Random[Integer, {1, 100}] < $CellContext`Infectious$$], 
                   Part[
                    Part[$CellContext`PopB, $CellContext`j$$], 4] = "n"], 
                  If[
                   And[Part[
                    Part[$CellContext`PopB, $CellContext`ContactB], 4] != "n",
                     Part[
                    Part[$CellContext`PopB, $CellContext`ContactB], 4] != "r",
                     Part[
                    Part[$CellContext`PopB, $CellContext`j$$], 4] == "i", 
                    Random[Real, {0, 1}] < $CellContext`Infectious$$], Part[
                    Part[$CellContext`PopB, $CellContext`ContactB], 4] = 
                   "n"]]]]; $CellContext`ToA = {}; $CellContext`ToB = {}; 
            For[$CellContext`i$$ = 0, 
              Length[$CellContext`ToA] < $CellContext`Transfer$$, 
              Increment[$CellContext`i$$], $CellContext`j$$ = 
               RandomChoice[$CellContext`PopB]; $CellContext`ToA = 
               Append[$CellContext`ToA, $CellContext`j$$]; $CellContext`PopB = 
               Complement[$CellContext`PopB, $CellContext`ToA]]; 
            For[$CellContext`i$$ = 0, 
              Length[$CellContext`ToB] < $CellContext`Transfer$$, 
              
              Increment[$CellContext`i$$], $CellContext`j$$ = 
               RandomChoice[$CellContext`PopA]; $CellContext`ToB = 
               Append[$CellContext`ToB, $CellContext`j$$]; $CellContext`PopA = 
               Complement[$CellContext`PopA, $CellContext`ToB]]; \
$CellContext`PopA = 
             Join[$CellContext`PopA, $CellContext`ToA]; $CellContext`PopB = 
             Join[$CellContext`PopB, $CellContext`ToB]; 
            Null]; $CellContext`moving$$ = False; Null]; 
        Part[$CellContext`Pops$$, $CellContext`w$$], UpdateInterval -> 
        If[$CellContext`moving$$, 2, Infinity]], 
      "Specifications" :> {{$CellContext`moving$$, False, ControlType -> 
         None}, {$CellContext`running$$, False, ControlType -> 
         None}, {$CellContext`Pops$$, 
         Pane[
          Grid[{{"", 
             Image[CompressedData["
1:eJzt3S1w60yWxvHsBzA0NPQwQUNB7yJD1QwR9EzV7oqta2ar1oMMDQ0FBQ0N
DQ0FAw0NDQ0N7z5vut5UdnyTG8mS+uv/q5qpzJ3Y7iTS6dOnW91/+Mt///E/
//nl5eVvI/3XH//8v//217/++e9/+lf9j3//+//8x1/+RV/81z+9vBT6z29f
/wAAAAAAAAAAAADQ0Pl8Pv3u9fXVdnMADO1yuej2PxwOm99lWTZ/M5vNXn4m
SZL57z77Hv27+Qa92/s761P0WQo7tn9oAN/1Hh+KotAdrdtfN/h0Ov3p3f1k
LqHXmjd5jEgfP3e5XOrf9/u9vvN+v3f4wwJoQd26uWcXi4VuUt2q7/GhLEvr
/b7Jc6qqUnvyPFfbRqPRZDLRFyaS1HVtsXlAJHQn6jZULpGmqRlNmChxPB71
f9lu3bdcr1cFExNJzE+h8Y6+VqCjkAJ0RZ3ybrdTfFBPraRCab9usZB6aoUL
5R4Khgog4/FYuZOiimKL7XYBntGttN1ulc+rO1anvFqtNB5RT227Xb273W7K
nRQ33n/29XodUpAEuqVbRt2u0gnlFep5db/Q5ypiKH4qeigP0VhGY7QYgifw
S+fzmVvjlx6DKsUQREjhQtl48oZUvBEziFP0mE6nGsERQBC8j+FCX7A+6hmX
y2W32xFAECql2WVZEi568jGAKBVhoAffaQBiRuVFURAu+qYAokGfftt5nh+P
R9vNAZp5TzDSNK2qivXVA9vv92YNLekHvKAujwTDER/TD6ofcJOuTF2f6uNI
MFyj9MM8vcuSGLijrussy3Rl6vq03RZ8SkHDPPh/OBxstwVRM5dimqZcir7Q
n8wEef5kGJ6uOtN5kfr6SINKRQ8zqLTdFkRBEUO9la46IobvTBFb0aMsS0pS
6In6Jl1jihgU50Oi6FEUhf6yu92O6IEOqT8ye1/4sj0Omrper6vVajKZbDYb
ogeeVNd1mqbqj4gYMbjdboob6iNYbop2dAmZHfl4WDU2yj0Wb+gs0EhVVUmS
aHhiuyGwRimHroHtdsuwBb90Pp+VYyyXS55rgCLGer2ezWYMW/AZDUx0kaiL
YWCCj9SVaMySZRldCf7B4XAwSanthsBRXCH4iN4E30RGih9vo9fNZsPoFY1Q
AYuZugxFDBb5oB0z48bDcVHZ7Xbz+Zx9dfAMDVs0vF2tVnQ9weNvjW6ZPogV
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
9ECZyWdx4/Gbbf8EAAAAAAAAAAAAgKP+DwAVnG4=
              "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
             Column[{
               Style["City A", "Title", 20], 
               Style["Latent       =", 
                RGBColor[0, 0, 1], Bold], 
               Style["Contagious   =", 
                RGBColor[1, 0, 0], Bold], 
               Style["Susceptible  =", 
                RGBColor[0., 0.5, 0.], Bold], 
               Style["Recovered    =", 
                RGBColor[0., 0.5, 0.], Bold]}]}, {"", 
             Image[CompressedData["
1:eJzt3S1w60yWxvHsBzA0NPQwQUNB7yJD1QwR9EzV7oqta2ar1oMMDQ0FBQ0N
DQ0FAw0NDQ0N7z5vut5UdnyTG8mS+uv/q5qpzJ3Y7iTS6dOnW91/+Mt///E/
//nl5eVvI/3XH//8v//217/++e9/+lf9j3//+//8x1/+RV/81z+9vBT6z29f
/wAAAAAAAAAAAADQ0Pl8Pv3u9fXVdnMADO1yuej2PxwOm99lWTZ/M5vNXn4m
SZL57z77Hv27+Qa92/s761P0WQo7tn9oAN/1Hh+KotAdrdtfN/h0Ov3p3f1k
LqHXmjd5jEgfP3e5XOrf9/u9vvN+v3f4wwJoQd26uWcXi4VuUt2q7/GhLEvr
/b7Jc6qqUnvyPFfbRqPRZDLRFyaS1HVtsXlAJHQn6jZULpGmqRlNmChxPB71
f9lu3bdcr1cFExNJzE+h8Y6+VqCjkAJ0RZ3ybrdTfFBPraRCab9usZB6aoUL
5R4Khgog4/FYuZOiimKL7XYBntGttN1ulc+rO1anvFqtNB5RT227Xb273W7K
nRQ33n/29XodUpAEuqVbRt2u0gnlFep5db/Q5ypiKH4qeigP0VhGY7QYgifw
S+fzmVvjlx6DKsUQREjhQtl48oZUvBEziFP0mE6nGsERQBC8j+FCX7A+6hmX
y2W32xFAECql2WVZEi568jGAKBVhoAffaQBiRuVFURAu+qYAokGfftt5nh+P
R9vNAZp5TzDSNK2qivXVA9vv92YNLekHvKAujwTDER/TD6ofcJOuTF2f6uNI
MFyj9MM8vcuSGLijrussy3Rl6vq03RZ8SkHDPPh/OBxstwVRM5dimqZcir7Q
n8wEef5kGJ6uOtN5kfr6SINKRQ8zqLTdFkRBEUO9la46IobvTBFb0aMsS0pS
6In6Jl1jihgU50Oi6FEUhf6yu92O6IEOqT8ye1/4sj0Omrper6vVajKZbDYb
ogeeVNd1mqbqj4gYMbjdboob6iNYbop2dAmZHfl4WDU2yj0Wb+gs0EhVVUmS
aHhiuyGwRimHroHtdsuwBb90Pp+VYyyXS55rgCLGer2ezWYMW/AZDUx0kaiL
YWCCj9SVaMySZRldCf7B4XAwSanthsBRXCH4iN4E30RGih9vo9fNZsPoFY1Q
AYuZugxFDBb5oB0z48bDcVHZ7Xbz+Zx9dfAMDVs0vF2tVnQ9weNvjW6ZPogV
YgEzYxNyS3SL6ypg9AvoD3lsePibYhj0TcEgh8SQuN4CQPzH8Mhv/cXfDnbR
Z3mHXBEu4Dr0SFVVxHk4wuS96/XadkPwFSWHy+WSsQmcst1udVnabgV+TlF9
tVrZbgXwE0qDF4sFPZprFM/ZGwEuOx6PGkFr5GK7IfiNYrgiOQdvwX11XVN8
c4Git/4QbKABX7y+vvIstl2K25xTAO+Y65ZT/6wgbsNfypMVOsiTB8Y4Eb67
3+9ZllGXGwx1aYRBoWO5XO52O9sNCR/z4AjMarViQWmvzHJQ260AOsaC0v4o
0+B3i1CpT2S1c+eOx6OGJ7ZbAfRIoxXWPHfIzJ5Q00DwlFEzw9IJs06D2RNE
Qnk16zqedLlcWKeBqCiv1jXPKujWzJo6VoQiNuapKxait0DURczItFswS3AZ
5SFm5uB7KnvfR1UZ+PE2KaDQwUzidzCLDbxT1q3cm9DxNUUM1uoDH7FS+mv8
foCfYhX6Z1gUCnyBot+j2+02m82YdQI+oy5V9wjLmT7Ksozj8ICvKWgodJCT
G4zdgG+iBmhQ1gAaodBBWQNoikIHZQ2ghZgLHZQ1gNbiLHRQ1gCeFFuhg7IG
8LzYCh2UNYBOxFPooKwBdCiGQgdlDaBzYRc6FC6SJKGsAXQr7EIHG/IAPQn1
YDJ2PAN6FeR0w3w+P51OtlsBBOt6vU6n05C65v1+n+e57VYAgQtpsvJ2uyVJ
omBouyFA4JRspGkaxoFNCoAKg7ZbAUThdDrN53PbrXiWQt9sNrPdCiAiASzn
UNbEWY3AkK7Xa5Ik/h70VpZlURS2WwFEx99bT0FPIxTKoYAVuvt8LJAGMMgC
/OVjabGu6zRNbbcCiJqGKhqw2G5FA57mSEBI/Fo6FdKiNcBrvtyM9/t9Op36
EuKAsPlyP/oS34BIeHFLTiYT94MbEA/3U47D4ZBlme1WAPh/HE85mEYBHORy
ykGyATjL2ZSDZANw1u12m0wmru0GRrIBOM7BnXBINgDHubYBaRhbDAHBcyrl
CHIDdiA87qQcPj6uC0TLkZSDZAPwiAspB8kG4B3rfb31BgBoym5370LCA6AF
i+eubrfb9Xpt5aMBPKOqquVyaeWjlWxcLhcrHw3gGRomTCaT4c9YOR6Pi8Vi
4A8F0BUrE7JURAGvDV8dpSIKBGDgx8qoiAIBGPg4SCqiQACG3JSDs9iAYOR5
vt/vB/ggjVA0ThnggwD0TUFDoWOAD2KQAgRDg5TxeNz3UIVBChCYAYYqDFKA
wAywhpNBChCYvtecM0gBgrRcLquq6unNGaQAQep1qMJhB0CQ+ptVuVwu0+m0
87cF4ALlG8o6On9bixt9AOhbTwfIDrYeFcDwehpQaPgz/O5AAAbT+SoLTnIE
glcURVmWHb7h5k2HbwjANYfDIcuyDt+QGVggeN3Oxup9RqNRJ28FwGVpmtZ1
3clbUdwAItHhJucUN4BIdFji6GkhGQDX3G638XjcyVuxcgOIRyerOOweXQ1g
YJ08U9/TqnUAburkSbReN/QA4JpOhhhJkpzP507aA8ALo9HomdVfrPgCIvTk
6i+KokCEnnzAbeBjZwG44MnZkA4XnQLwxZOPlrBSFIjQk6tGWSkKxGkymVyv
1xYv1Kv02s7bA8B9rccaA5waCcBNrWubTKYA0Wo9pcKpjkC0Wm/EwYEpQLRa
r/nscKdBAH5pPRXbeiIGQABaLMPocLswAD5qcfoJT7QBkcuy7HA4NHpJ5yc3
AfBLiyUcLN4AIrfdbtfrdaOXcGYKELkWG43yBD0QuRbFCrYjBiLXYhcOdt4A
Ine5XKbTaaOXKM4o2vTTHAAeaLGIq5Oz3gB47eXlpdH3s8gcQNM40DTOAAhP
02PXiBsAmtY5iRsAGsWNFvMvAMJD3ADQFHEDQFONNgslbgD40fB5EzbtAfCj
Ydx48lRZAGEgbgBoirgBoKlGcaOu6zRN+2wOAA80ihvMpwD4QdwA0BxxA0BT
rBcF0FSjuHG/30ejUZ/NAeABnqMH0BRxA0BTTY+WbnGEPYDANN2fnP3MAYxG
o/v9/v3vT9O0ruv+2gPAfU3rFZy7BESuxXoMzocFInc+n5MkafSSoijKsuyp
PQDc1+K5+M2bfpoDwAOHwyHLskYv2e12q9Wqp/YAcF9VVcvlstFL9vt9nuc9
tQeA+7bb7Xq9bvQStu4BIteiyHm9XieTSU/tAeC+xWJxPB6bvoql5kDM2i0a
b/pIC4CQtHu4Ncuyw+HQeWMAuK/15l2r1Wq323XeHgDua30YCks4gGi1WLxh
tFgtBiAM6/V6u922eGGLp1oAhOGZ8mbTXTsAhEE5gzKHdq9l9x4gQk+eaMDT
9ECEXl9fZ7NZ65czpQJESNmCcobWLz8ej4vFosP2AHDfk2u3brfbeDzusD0A
3NfuibaPJpPJ9Xrtqj0A3Pf8Xf985AHgkU720GCjUSAqnSwUb/14CwAfdfJA
6/1+H4/HrBoFItHVxjts4ANEosM8gY04gEh0WJfggXogEh3Og7D6C4hEt+su
2u1sDMAv3Z5iwIOxQPA6X3RBiQMIXueLPFnFAQSvjxUXSmCUxnT7ngAc0dP0
B3v4AAFrffDB157cOgyAyxQ0FDr6eGdmY4FQ9XeOfH8RCYBFdV2nadrTm7Pd
KBCk1qezfcf9fp9MJj0lMwBs6bsEwVAFCEyvgxSDoQoQmF4HKQZDFSAww8yT
MlQBgjHAIMVgqAIEY4BBisFQBQjGkIs52XEUCMDAp5zwrAoQgDzP9/v9kJ+Y
pmld10N+IoAOXa9XDVIG3lSnp6duAQzDys4YVEcBryVJcj6fh/9cqqOApyye
+0x1FPDU8BXRj6iOAt6xUhH9iPMRAO+4UGHgtHrAI47MaJByAB5x52ACUg7A
C0o2ptPp9Xq13ZDf7Pf7PM9ttwLAL7iTbPxwLIgB+CkH71On4hiARw7epA6G
MgAf2VpY/jUHoxkAw9l5T1IOwFkuT3qScgAOcjbZMJRyjMdji+veATxyOdkw
XFj6DuCd48mGYf1ROwAfLRaL4/FouxW/RsoBOMKjTXJut1uSJEysANa5X9n4
iF2LAevKsiyKwnYrmmErMMAiJfxKNrxL+z0aWAHh8ff8dwqkgBWDnTLfB1ae
A1b4VQ59xJY+wMDCeNxjPp+fTifbrQCiEMzCS+VLGmoF8IMA7rN7oFK31uv1
dru13QogcMfjcbFY2G5FZyiQAn3TXTabzRzc0esZXjyUB/hLKb0Se9ut6J4v
z+UB3rlcLkmSBFlFVAalPCrIHw2wS8m8UnrbrehLGDPLgFNieIw07MAIDCyS
NP52u+nH1HDMdkMA7wU5h/KZuq7n83nwERLom78PvbZDoQN4UgxljUcUOoDW
IilrPKLQAbQTVVnjEYUOoIXYyhqPKHQAjcRZ1nhEoQP4pmjLGo8odADfEXlZ
4xGFDuCXKGs8otABfIGyxmcIp8BPsdnmF/RrybKMPTqAjy6Xy2w2u91uthvi
LoUOxVWvj34AOqSgMZ/PmTX4JcVVhQ6KxoDuBQUNutFvIsYCyr0XiwVnDzWi
GKvQwZgO0WI/3nYUafWro4aMCDG3+IzAzpEBvmPzxnYr/MZyF0SFBZBdIfwi
Evv9Ps9z260IhyKw4rDtVgA90qg8yzIKet0K6aBt4B+wkrwnZhU6oQPhYdVB
rxQ6lHWUZWm7IUBnNDwhaAygKArKpAiD8mdl0QSNYShuMDkL3ylzVv5MTWNI
VVVRfIa/1Pcpc7bdihgdDofFYkGOB+8oW2asbdHpdJrP59fr1XZDgG8x04I8
e2KdmfjmoXu4T7mxMmRO/XCE2UiN7U3gMmXFyo3ZT8MpZmck9iuAm9S1sQGm
mxQ6WFAKBylccLKYy8yCUirVcEdVVco0mPVzn+IGkyywTr3Y8g2rjHxxOp2U
GVKDgi3mAGjmW71jyteMWTA8hQsOgPYaYxYMibFJMBizYBiMTQLDmAV9Y2wS
KsYs6ANjk+AxZkG3GJtEgjELusLYJDaKGzwvgNbU+2RZxtgkQnVdq7NYrVas
AUYj2+12Op3yOHzMdrtdkiQ8DYfvOJ1OulrW6zVpBpRz5nk+n88ZqOIzXCT4
KTPVQleCRxqYkJTiM4oYZujK/j8wTBFMvQlFMHxNGeniDRutxEyXwXK5ZNIN
jSjlUGq62WwYtkSoLEv99VnNhRYUMRQ3lKYy4xaP0+mkHKMoCgYmeMb5fM6y
jOgRPHMWj9R1bbstCIQGuYoe5K5BUo+gHINDCtAT5R7L5XI6nRI9wqCIoUxS
PQI5Bvp2uVwUPSaTyW63o2rqKUV+xX9FDKZLMKTr9bparXTtbbdbami+UJwv
y1J/NUV+5tlhi6LHer3WdbjZbIgeLlPEUH6ov1RRFEQMuEARQ3FD16QyEPYT
cw1/HbhM16d6tMlkkuc5K9VdUNe1qUQpbhAx4Lj9fr9YLEzpg8t1ePqdmwWf
aZpWVUXtGh7RIHq9XpN+DEm/Z/229TsvioIH3uG19/RD42tm/fqg36qZ29Lv
mafdERKlH7vdbjabEUC6oozCTGbpt6rfLbMkCBgB5EkKF5vNJnmz3W4JF4jK
ewDReHy5XCrBZgXIZ+73++FwKIpCwdbsb0D5ApG7Xq9VVeV5Ph6P0zRV7s3j
EoaSMWUU8/l8NBplWVaWJdkF8EgRQ3eKoodiyGKx0NexPaSp34DSMEUJpWFm
j77YfgNAaxqzHI9H3TXqbV9eXkweolw9vAUhGoPoJzWn9yqv0E+6Wq2C/EmB
gZk8xPTCYo6q3O/3PpZVz+ezwoLar4QqSRLFCn2h/6m8gjVaQE/UEesW042W
57kyeWUj+m99rX/R/ejU3aesSe0xUcJs86vWKlYoAOpflGZQ3gRsUdah3EN3
ou5Hk+2boY1JS0yRxOgj+denmzcvy1Ifp1GGPtcEtPF4rK9NlKiqinov4Djd
pCYtMUUSQ2OclzeKLfMH+s7NJx6/+eV3ChHmX4qi0Hfudjt9ro8DKABf01jm
9ECZyWdx4/Gbbf8EAAAAAAAAAAAAgKP+DwAVnG4=
              "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
             Column[{
               Style["City B", "Title", 20], 
               Style["Latent       =", 
                RGBColor[0, 0, 1], Bold], 
               Style["Contagious   =", 
                RGBColor[1, 0, 0], Bold], 
               Style["Susceptible  =", 
                RGBColor[0., 0.5, 0.], Bold], 
               Style["Recovered    =", 
                RGBColor[0., 0.5, 0.], Bold]}]}}, 
           Spacings -> {{10, 2}, 1.8}], {200, 400}], ControlType -> 
         None}, {$CellContext`InfectedA$$, 1, ControlType -> 
         None}, {$CellContext`InfectedB$$, 1, ControlType -> 
         None}, {$CellContext`Days$$, 7, ControlType -> 
         None}, {$CellContext`Recovery$$, 3, ControlType -> 
         None}, {$CellContext`Incubation$$, 3, ControlType -> 
         None}, {$CellContext`Infectious$$, 10, ControlType -> 
         None}, {$CellContext`Transfer$$, 0, ControlType -> 
         None}, {$CellContext`w$$, 1, ControlType -> 
         None}, {$CellContext`TotalPop$$, 10, ControlType -> 
         None}, {$CellContext`i$$, 0, ControlType -> None}, {$CellContext`j$$,
          0, ControlType -> None}, {{$CellContext`w$$, 1, ""}, 1, 
         Dynamic[$CellContext`Days$$], 1, Appearance -> "Labeled", 
         ControlPlacement -> 1}, {{$CellContext`Days$$, 7, ""}, 1, 21, 1, 
         ControlType -> Slider, Appearance -> "Labeled", ControlPlacement -> 
         2}, {{$CellContext`TotalPop$$, 10, ""}, 1, 100, 1, ControlType -> 
         Slider, Appearance -> "Labeled", ControlPlacement -> 
         3}, {{$CellContext`InfectedA$$, 1, ""}, 0, 
         Dynamic[$CellContext`TotalPop$$], 1, ControlType -> Slider, 
         Appearance -> "Labeled", ControlPlacement -> 
         4}, {{$CellContext`InfectedB$$, 1, ""}, 0, 
         Dynamic[$CellContext`TotalPop$$], 1, ControlType -> Slider, 
         Appearance -> "Labeled", ControlPlacement -> 
         5}, {{$CellContext`Transfer$$, 0, ""}, 0, 
         Dynamic[$CellContext`TotalPop$$], 1, ControlType -> Slider, 
         Appearance -> "Labeled", ControlPlacement -> 
         6}, {{$CellContext`Infectious$$, 0.1, ""}, 0, 1, 0.01, ControlType -> 
         Slider, Appearance -> "Labeled", ControlPlacement -> 
         7}, {{$CellContext`Incubation$$, 3, ""}, 1, 7, 1, ControlType -> 
         Slider, Appearance -> "Labeled", ControlPlacement -> 
         8}, {{$CellContext`Recovery$$, 3, ""}, 1, 7, 1, ControlType -> 
         Slider, Appearance -> "Labeled", ControlPlacement -> 9}, 
        Column[{
          Dynamic[
           Button[
            StringJoin[
             If[$CellContext`running$$, "reset", "run"], " simulation"], {
             If[
              Not[$CellContext`running$$], $CellContext`moving$$ = 
              True], $CellContext`running$$ = Not[$CellContext`running$$]}, 
            ImageSize -> 225, Alignment -> Center]], 
          Dynamic[
           If[$CellContext`running$$, 
            Column[{
              Column[{
                Spacer[{0, 10}], "day (morning)", 
                Manipulate`Place[1]}, Left], 
              Column[{
                Spacer[{0, 10}], 
                Row[{"duration of simulation = ", 
                  ToString[$CellContext`Days$$]}], 
                Spacer[{0, 15}], 
                Row[{"city population = ", 
                  ToString[$CellContext`TotalPop$$]}], 
                Spacer[{0, 15}], 
                Row[{"initial infected cases, City A = ", 
                  ToString[$CellContext`InfectedA$$]}], 
                Spacer[{0, 15}], 
                Row[{"initial infected cases, City B = ", 
                  ToString[$CellContext`InfectedB$$]}], 
                Spacer[{0, 15}], 
                Row[{"travellers/day = ", 
                  ToString[$CellContext`Transfer$$]}], 
                Spacer[{0, 15}], 
                Row[{"chance of infection on contact = ", 
                  ToString[$CellContext`Infectious$$]}], 
                Spacer[{0, 15}], 
                Row[{"latency before contagious state [days] = ", 
                  ToString[$CellContext`Incubation$$]}], 
                Spacer[{0, 15}], 
                Row[{"duration of contagious state [days] = ", 
                  ToString[$CellContext`Recovery$$]}]}, Right]}, Center], 
            ""]], 
          Dynamic[
           If[
            Not[$CellContext`running$$], 
            Column[{"duration of simulation [days]", 
              Manipulate`Place[2], "city population", 
              Manipulate`Place[3], "initial infected cases, City A", 
              Manipulate`Place[4], "initial infected cases, City B", 
              Manipulate`Place[5], "travellers/day", 
              Manipulate`Place[6], "chance of infection on contact", 
              Manipulate`Place[7], "latency before contagious state [days]", 
              Manipulate`Place[8], "duration of contagious state [days]", 
              Manipulate`Place[9]}, Left, 0.45], ""]]}, Center]}, 
      "Options" :> {
       ControlPlacement -> Left, ContentSize -> {340, 400}, FrameMargins -> 
        0}, "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{633., {216., 221.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.551043162209744*^9, 3.5510436253077993`*^9, 
  3.551044137983535*^9, 3.551044452052223*^9, 3.5510450722867823`*^9, 
  3.551045616724972*^9, 3.551045681033531*^9, 3.551045711535167*^9, 
  3.5510466249608626`*^9, 3.5510467849698353`*^9, 3.5510475765080357`*^9, 
  3.551047662502887*^9},
 CellID->1870202]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "DetailsSection"],

Cell["\<\
Adjust the sliders and press the run simulation button. The slider then \
showed can be used  to see the condition of the two communities at a \
particular day. To change the parameters, press the reset button which brings \
it back to the original screen.\
\>", "DetailNotes",
 CellChangeTimes->{{3.5510021437877903`*^9, 3.551002239162924*^9}, {
  3.551002270082967*^9, 3.5510022924629984`*^9}, {3.551002353918084*^9, 
  3.5510023694431057`*^9}, {3.5510024153881702`*^9, 3.5510024418482075`*^9}, {
  3.55104251669555*^9, 3.5510425203037567`*^9}},
 CellID->136320496]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ControlSuggestionsSection"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Resize Images"]}],
  "\"Click inside an image to reveal its orange resize frame.\\nDrag any of \
the orange resize handles to resize the image.\"",
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"ResizeImages"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Rotate and Zoom in 3D"]}],
  RowBox[{
   "\"Drag a 3D graphic to rotate it. Starting the drag near the center \
tumbles\\nthe graphic; starting near a corner turns it parallel to the plane \
of the screen.\\nHold down \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" (or \"", 
    FrameBox[
    "Cmd", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" on Mac) and drag up and down to zoom.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"RotateAndZoomIn3D"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Drag Locators"]}],
  RowBox[{"\"Drag any locator (\"", 
    GraphicsBox[
     LocatorBox[
      Scaled[{0.5, 0.5}]], ImageSize -> 20], 
    "\", etc.) to move it around.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"DragLocators"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Create and Delete Locators"]}],
  RowBox[{"\"Insert a new locator in the graphic by holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key\\nand clicking where you want it to be. Delete a locator by \
clicking it\\nwhile holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" key.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"CreateAndDeleteLocators"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Slider Zoom"]}],
  RowBox[{"\"Hold down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key while moving a slider to make fine adjustments in the slider \
value.\\nHold \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" and/or \"", 
    FrameBox[
    "Shift", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" at the same time as \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" to make ever finer adjustments.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"SliderZoom"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Gamepad Controls"]}],
  "\"Control this Demonstration with a gamepad or other\\nhuman interface \
device connected to your computer.\"",
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.35696210375764*^9, 3.3895522232313623`*^9},
 FontFamily->"Verdana",
 CellTags->"GamepadControls"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Automatic Animation"]}],
  RowBox[{"\"Animate a slider in this Demonstration by clicking the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJzzTSzJSM1NLMlMTlRwL0osyMhMLlZwyy8CCjEzMjAwcIKwAgOI/R/IhBKc\n\
/4EAyGAG0f+nTZsGwgysIJIRKsWKLAXGIHFmEpUgLADxWUAkI24jZs+eTaEt\n\
IG+wQKRmzJgBlYf5lhEA30OqWA=="], "Graphics", ImageSize -> {9, 9}, ImageMargins -> 
      0, CellBaseline -> Baseline], BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"button\\nnext to the slider, and then clicking the play button that \
appears.\\nAnimate all controls by selecting \"", 
    StyleBox["Autorun", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"AutomaticAnimation"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Bookmark Animation"]}],
  RowBox[{
   "\"See a prepared animation of this Demonstration by selecting\\n\"", 
    StyleBox["Animate Bookmarks", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"BookmarkAnimation"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SearchTermsSection"],

Cell["disease", "SearchTerms",
 CellChangeTimes->{{3.5510285431506257`*^9, 3.5510285452406282`*^9}, {
  3.5510442938123198`*^9, 3.5510442961644545`*^9}},
 CellID->214825245],

Cell["contagion model", "SearchTerms",
 CellChangeTimes->{
  3.551028582062833*^9, {3.5510442906941414`*^9, 3.551044300688713*^9}},
 CellID->515488252],

Cell["infection", "SearchTerms",
 CellChangeTimes->{{3.5510443206198463`*^9, 3.5510443453431387`*^9}, {
  3.5510444251006975`*^9, 3.5510444301029835`*^9}},
 CellID->297739362],

Cell["biology", "SearchTerms",
 CellChangeTimes->{{3.551044345647156*^9, 3.5510443519835176`*^9}},
 CellID->501911869],

Cell["modeling", "SearchTerms",
 CellChangeTimes->{{3.551044352310537*^9, 3.551044359443945*^9}},
 CellID->126069941],

Cell["epidemiology", "SearchTerms",
 CellChangeTimes->{{3.551044359779964*^9, 3.55104436180608*^9}, {
  3.5510444010353236`*^9, 3.5510444010363235`*^9}},
 CellID->711016019],

Cell["medicine", "SearchTerms",
 CellChangeTimes->{{3.551044407611697*^9, 3.5510444169872336`*^9}},
 CellID->67781409],

Cell["", "SearchTerms",
 CellID->601618811]
}, Open  ]],

Cell["", "RelatedLinksSection"],

Cell[CellGroupData[{

Cell["", "AuthorSection"],

Cell["Contributed by: Arjun Adhia", "Author",
 CellChangeTimes->{{3.551001612558037*^9, 3.5510016138730383`*^9}}],

Cell[TextData[{
 "(",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " Summer Camp 2012)"
}], "Author",
 CellChangeTimes->{{3.551043678671814*^9, 3.5510436892354183`*^9}},
 CellID->123124801]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1350, 633},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"8.0 for Microsoft Windows (64-bit) (October 6, 2011)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "Demonstration.nb", 
  CharacterEncoding -> "WindowsANSI"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "AutomaticAnimation"->{
  Cell[304718, 5760, 1464, 31, 22, "ControlSuggestions",
   CellTags->"AutomaticAnimation"]},
 "BookmarkAnimation"->{
  Cell[306185, 5793, 908, 21, 22, "ControlSuggestions",
   CellTags->"BookmarkAnimation"]},
 "CreateAndDeleteLocators"->{
  Cell[302859, 5709, 637, 15, 22, "ControlSuggestions",
   CellTags->"CreateAndDeleteLocators"]},
 "DragLocators"->{
  Cell[302516, 5696, 340, 11, 22, "ControlSuggestions",
   CellTags->"DragLocators"]},
 "GamepadControls"->{
  Cell[304346, 5749, 369, 9, 22, "ControlSuggestions",
   CellTags->"GamepadControls"]},
 "ResizeImages"->{
  Cell[301520, 5668, 312, 8, 22, "ControlSuggestions",
   CellTags->"ResizeImages"]},
 "RotateAndZoomIn3D"->{
  Cell[301835, 5678, 678, 16, 22, "ControlSuggestions",
   CellTags->"RotateAndZoomIn3D"]},
 "SliderZoom"->{
  Cell[303499, 5726, 844, 21, 22, "ControlSuggestions",
   CellTags->"SliderZoom"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"AutomaticAnimation", 309068, 5888},
 {"BookmarkAnimation", 309186, 5891},
 {"CreateAndDeleteLocators", 309308, 5894},
 {"DragLocators", 309425, 5897},
 {"GamepadControls", 309534, 5900},
 {"ResizeImages", 309642, 5903},
 {"RotateAndZoomIn3D", 309752, 5906},
 {"SliderZoom", 309861, 5909}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 196, 4, 74, "DemoTitle"],
Cell[778, 28, 33, 0, 287, "InitializationSection"],
Cell[CellGroupData[{
Cell[836, 32, 29, 0, 194, "ManipulateSection"],
Cell[CellGroupData[{
Cell[890, 36, 58500, 1243, 4788, "Input"],
Cell[59393, 1281, 80269, 1445, 449, "Output",
 CellID->312576312]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[139711, 2732, 36, 0, 169, "ManipulateCaptionSection"],
Cell[139750, 2734, 378, 6, 37, "ManipulateCaption"]
}, Open  ]],
Cell[CellGroupData[{
Cell[140165, 2745, 28, 0, 173, "ThumbnailSection"],
Cell[140196, 2747, 80269, 1445, 449, "Output",
 CellID->344992128]
}, Open  ]],
Cell[CellGroupData[{
Cell[220502, 4197, 28, 0, 143, "SnapshotsSection"],
Cell[220533, 4199, 80267, 1445, 449, "Output",
 CellID->1870202]
}, Open  ]],
Cell[CellGroupData[{
Cell[300837, 5649, 26, 0, 336, "DetailsSection"],
Cell[300866, 5651, 577, 10, 37, "DetailNotes",
 CellID->136320496]
}, Open  ]],
Cell[CellGroupData[{
Cell[301480, 5666, 37, 0, 126, "ControlSuggestionsSection"],
Cell[301520, 5668, 312, 8, 22, "ControlSuggestions",
 CellTags->"ResizeImages"],
Cell[301835, 5678, 678, 16, 22, "ControlSuggestions",
 CellTags->"RotateAndZoomIn3D"],
Cell[302516, 5696, 340, 11, 22, "ControlSuggestions",
 CellTags->"DragLocators"],
Cell[302859, 5709, 637, 15, 22, "ControlSuggestions",
 CellTags->"CreateAndDeleteLocators"],
Cell[303499, 5726, 844, 21, 22, "ControlSuggestions",
 CellTags->"SliderZoom"],
Cell[304346, 5749, 369, 9, 22, "ControlSuggestions",
 CellTags->"GamepadControls"],
Cell[304718, 5760, 1464, 31, 22, "ControlSuggestions",
 CellTags->"AutomaticAnimation"],
Cell[306185, 5793, 908, 21, 22, "ControlSuggestions",
 CellTags->"BookmarkAnimation"]
}, Open  ]],
Cell[CellGroupData[{
Cell[307130, 5819, 30, 0, 155, "SearchTermsSection"],
Cell[307163, 5821, 173, 3, 22, "SearchTerms",
 CellID->214825245],
Cell[307339, 5826, 151, 3, 22, "SearchTerms",
 CellID->515488252],
Cell[307493, 5831, 175, 3, 22, "SearchTerms",
 CellID->297739362],
Cell[307671, 5836, 118, 2, 22, "SearchTerms",
 CellID->501911869],
Cell[307792, 5840, 117, 2, 22, "SearchTerms",
 CellID->126069941],
Cell[307912, 5844, 173, 3, 22, "SearchTerms",
 CellID->711016019],
Cell[308088, 5849, 118, 2, 22, "SearchTerms",
 CellID->67781409],
Cell[308209, 5853, 43, 1, 22, "SearchTerms",
 CellID->601618811]
}, Open  ]],
Cell[308267, 5857, 31, 0, 141, "RelatedLinksSection"],
Cell[CellGroupData[{
Cell[308323, 5861, 25, 0, 129, "AuthorSection"],
Cell[308351, 5863, 113, 1, 22, "Author"],
Cell[308467, 5866, 194, 7, 22, "Author",
 CellID->123124801]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
