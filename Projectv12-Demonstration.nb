(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    237954,       4596]
NotebookOptionsPosition[    236006,       4529]
NotebookOutlinePosition[    236839,       4559]
CellTagsIndexPosition[    236666,       4552]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"To", " ", "Do"}], "\[IndentingNewLine]", "-", " ", 
    RowBox[{
    "Include", " ", "a", " ", "True", " ", "False", " ", "loop", " ", "for", 
     " ", "days"}], "\[IndentingNewLine]", "-", " ", 
    RowBox[{"make", " ", "disc", " ", "represent", " ", "10", " ", "people"}],
     "\[IndentingNewLine]", "-", 
    RowBox[{"To", " ", "put", " ", "play", " ", "button"}]}], ",", " ", 
   RowBox[{
   "make", " ", "the", " ", "day", " ", "slider", " ", 
    "disappear"}]}]}]], "Input",
 CellChangeTimes->{{3.5503546811293025`*^9, 3.5503547150482426`*^9}, {
  3.550404195920215*^9, 3.550404214558281*^9}, {3.5504196615433216`*^9, 
  3.5504196638294525`*^9}, {3.5505776386273403`*^9, 3.5505776389273405`*^9}, {
  3.550698464155487*^9, 3.5506984838446865`*^9}, {3.550698551890537*^9, 
  3.550698558995547*^9}, {3.5508515219213057`*^9, 3.5508515372511826`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"moving", "=", "False"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"running", "=", "False"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Pops", "=", 
   RowBox[{"Pane", "[", 
    RowBox[{"\"\<adjust options and run simulation\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"200", ",", "400"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Refresh", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{"moving", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Clear", " ", "[", "Pops", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Pops", "=", 
          RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"PopA", " ", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"k", "*", "A"}], ",", 
              RowBox[{"RandomReal", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1.8"}], "}"}], "]"}], ",", 
              RowBox[{"RandomReal", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"2", "Pi"}]}], "}"}], "]"}], ",", "\"\<u\>\"", ",", 
              "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "1", ",", "TotalPop"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"PopB", " ", "=", " ", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"k", "*", "B"}], ",", 
              RowBox[{"RandomReal", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1.8"}], "}"}], "]"}], ",", 
              RowBox[{"RandomReal", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"2", "Pi"}]}], "}"}], "]"}], ",", "\"\<u\>\"", ",", 
              "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "1", ",", "TotalPop"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", "=", "1"}], ",", 
           RowBox[{"j", "<", 
            RowBox[{"InfectedA", "+", "1"}]}], ",", 
           RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{
             "PopA", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}], 
             "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], "=", 
            "\"\<i\>\""}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", "=", "1"}], ",", 
           RowBox[{"j", "<", 
            RowBox[{"InfectedB", "+", "1"}]}], ",", 
           RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{
             "PopB", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}], 
             "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], "=", 
            "\"\<i\>\""}]}], "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"k", "=", "1"}], ",", 
           RowBox[{"k", "<", 
            RowBox[{"Days", "+", "1"}]}], ",", 
           RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"i", "=", "1"}], ",", 
              RowBox[{"i", "<", 
               RowBox[{
                RowBox[{"Length", "[", "PopA", "]"}], "+", "1"}]}], ",", 
              RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Which", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "Recovery"}], "&&", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "\"\<i\>\""}]}], 
                 ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}], "=", "0"}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "=", "\"\<r\>\""}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}], "\[Equal]", 
                   RowBox[{"Incubation", "-", "1"}]}], "&&", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "\"\<n\>\""}]}], 
                 ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}], "=", "0"}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "=", "\"\<i\>\""}]}]}], 
                "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
             "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"i", "=", "1"}], ",", 
              RowBox[{"i", "<", 
               RowBox[{
                RowBox[{"Length", "[", "PopB", "]"}], "+", "1"}]}], ",", 
              RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Which", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "Recovery"}], "&&", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "\"\<i\>\""}]}], 
                 ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}], "=", "0"}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "=", "\"\<r\>\""}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}], "\[Equal]", 
                   RowBox[{"Incubation", "-", "1"}]}], "&&", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "\"\<n\>\""}]}], 
                 ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}], "=", "0"}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "=", "\"\<i\>\""}]}]}], 
                "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
             "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"i", "=", "1"}], ",", 
              RowBox[{"i", "<", 
               RowBox[{
                RowBox[{"Length", "[", "PopA", "]"}], "+", "1"}]}], ",", 
              RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                   "PopA", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                   "\[RightDoubleBracket]"}], "\[Equal]", "\"\<i\>\""}], "||", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                   "PopA", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                   "\[RightDoubleBracket]"}], "\[Equal]", " ", 
                  "\"\<n\>\""}]}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                  "PopA", "\[LeftDoubleBracket]", "i", 
                   "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "5", 
                  "\[RightDoubleBracket]"}], "=", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                   "PopA", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "5", 
                   "\[RightDoubleBracket]"}], "+", "1"}]}]}], "]"}]}], 
             "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"i", "=", "1"}], ",", 
              RowBox[{"i", "<", 
               RowBox[{
                RowBox[{"Length", "[", "PopB", "]"}], "+", "1"}]}], ",", 
              RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                   "PopB", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                   "\[RightDoubleBracket]"}], "\[Equal]", "\"\<i\>\""}], "||", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                   "PopB", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                   "\[RightDoubleBracket]"}], "\[Equal]", " ", 
                  "\"\<n\>\""}]}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                  "PopB", "\[LeftDoubleBracket]", "i", 
                   "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "5", 
                  "\[RightDoubleBracket]"}], "=", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                   "PopB", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "5", 
                   "\[RightDoubleBracket]"}], "+", "1"}]}]}], "]"}]}], 
             "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"TotalPeopleA", " ", "=", " ", 
             RowBox[{"Length", "[", "PopA", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"PeopleMetA", " ", "=", " ", 
             RowBox[{"Random", "[", 
              RowBox[{"Integer", ",", 
               RowBox[{"{", 
                RowBox[{"10", ",", "20"}], "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"Print", "[", 
               RowBox[{"\"\<People Met in City A\>\"", "PeopleMetA"}], "]"}], 
              ";"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"TotalPeopleB", " ", "=", " ", 
             RowBox[{"Length", "[", "PopB", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"PeopleMetB", " ", "=", " ", 
             RowBox[{"Random", "[", 
              RowBox[{"Integer", ",", 
               RowBox[{"{", 
                RowBox[{"10", ",", "20"}], "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"Print", "[", 
               RowBox[{"\"\<People Met in City B\>\"", "PeopleMetB"}], "]"}], 
              ";"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"j", "=", "1"}], ",", 
               RowBox[{"j", "<", 
                RowBox[{"TotalPeopleA", "+", "1"}]}], ",", " ", 
               RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"i", "=", "0"}], ",", 
                 RowBox[{"i", "<", "PeopleMetA"}], ",", 
                 RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"ContactA", " ", "=", 
                   RowBox[{"Random", "[", 
                    RowBox[{"Integer", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "TotalPeopleA"}], "}"}]}], "]"}]}], ";",
                   "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "ContactA", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "\"\<i\>\""}], ",",
                     "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[NotEqual]", "\"\<i\>\""}], "&&", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[NotEqual]", "\"\<n\>\""}], "&&", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[NotEqual]", "\"\<r\>\""}], "&&", 
                    RowBox[{
                    RowBox[{"Random", "[", 
                    RowBox[{"Integer", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "100"}], "}"}]}], "]"}], "<", " ", 
                    "Infectious"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "=", "\"\<n\>\""}]}], "]"}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "ContactA", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[NotEqual]", "\"\<n\>\""}], "&&", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "ContactA", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[NotEqual]", "\"\<r\>\""}], "&&", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "\"\<i\>\""}], "&&", 
                    RowBox[{
                    RowBox[{"Random", "[", 
                    RowBox[{"Integer", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "100"}], "}"}]}], "]"}], "<", 
                    "Infectious"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "ContactA", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "=", "\"\<n\>\""}]}], "]"}]}], 
                   "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
                "]"}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"j", "=", "1"}], ",", 
               RowBox[{"j", "<", 
                RowBox[{"TotalPeopleB", "+", "1"}]}], ",", " ", 
               RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"i", "=", "0"}], ",", 
                 RowBox[{"i", "<", "PeopleMetB"}], ",", 
                 RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"ContactB", " ", "=", 
                   RowBox[{"Random", "[", 
                    RowBox[{"Integer", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "TotalPeopleB"}], "}"}]}], "]"}]}], ";",
                   "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "ContactB", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "\"\<i\>\""}], ",",
                     "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[NotEqual]", "\"\<i\>\""}], "&&", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[NotEqual]", "\"\<n\>\""}], "&&", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[NotEqual]", "\"\<r\>\""}], "&&", 
                    RowBox[{
                    RowBox[{"Random", "[", 
                    RowBox[{"Integer", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "100"}], "}"}]}], "]"}], "<", " ", 
                    "Infectious"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "=", "\"\<n\>\""}]}], "]"}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "ContactB", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[NotEqual]", "\"\<n\>\""}], "&&", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "ContactB", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[NotEqual]", "\"\<r\>\""}], "&&", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "\"\<i\>\""}], "&&", 
                    RowBox[{
                    RowBox[{"Random", "[", 
                    RowBox[{"Integer", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "100"}], "}"}]}], "]"}], "<", " ", 
                    "Infectious"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "ContactB", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "=", "\"\<n\>\""}]}], "]"}]}], 
                   "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
                "]"}]}], "\[IndentingNewLine]", "]"}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"ToA", "=", 
             RowBox[{"RandomChoice", "[", 
              RowBox[{"PopB", ",", "Transfer"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"ToB", "=", 
             RowBox[{"RandomChoice", "[", 
              RowBox[{"PopA", ",", "Transfer"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"PopA", "=", 
             RowBox[{"Complement", "[", 
              RowBox[{"PopA", ",", "ToB"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"PopB", "=", 
             RowBox[{"Complement", "[", 
              RowBox[{"PopB", ",", "ToA"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"i", "=", "1"}], ",", 
              RowBox[{"i", "<", 
               RowBox[{
                RowBox[{"Length", "[", "ToA", "]"}], "+", "1"}]}], ",", 
              RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{
                "ToA", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
                 "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "=", 
               RowBox[{
                RowBox[{
                "ToA", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
                 "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
             "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"i", "=", "1"}], ",", 
              RowBox[{"i", "<", 
               RowBox[{
                RowBox[{"Length", "[", "ToB", "]"}], "+", "1"}]}], ",", 
              RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{
                "ToB", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
                 "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "=", 
               RowBox[{
                RowBox[{
                "ToB", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
                 "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
             "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"PopA", "=", 
             RowBox[{"Join", "[", 
              RowBox[{"PopA", ",", "ToA"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"PopB", "=", 
             RowBox[{"Join", "[", 
              RowBox[{"PopB", ",", "ToB"}], "]"}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"Pops", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"Pops", ",", "\[IndentingNewLine]", 
               RowBox[{"Grid", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<City A\>\"", ",", "\"\<Title\>\"", ",", "16"}], 
                    "]"}], "}"}], ",", 
                  RowBox[{"{", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"Image", "[", "\[IndentingNewLine]", 
                    RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
                    RowBox[{"Join", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"Circle", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", "2"}], "]"}], "}"}], 
                    "}"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "\"\<u\>\""}], "||", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "\"\<r\>\""}]}], 
                    ",", "\[IndentingNewLine]", "Green", ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "\"\<i\>\""}], ",",
                     "\[IndentingNewLine]", "Red", ",", "Blue"}], "]"}]}], 
                    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Disk", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "*", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"PopA", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "]"}]}]}], "}"}], ",", ".1"}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", 
                    RowBox[{"Length", "[", "PopA", "]"}]}], "}"}]}], 
                    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
                    "]"}], "\[IndentingNewLine]", "]"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Column", "[", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"\"\<Latent= \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Cases", "[", 
                    RowBox[{"PopA", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "_", ",", "_", ",", "_", ",", "\"\<n\>\"", ",", "_"}], 
                    "}"}]}], "]"}], "]"}], "]"}]}], ",", "Blue"}], "]"}], ",",
                     "\[IndentingNewLine]", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"\"\<Contagious= \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Cases", "[", 
                    RowBox[{"PopA", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "_", ",", "_", ",", "_", ",", "\"\<i\>\"", ",", "_"}], 
                    "}"}]}], "]"}], "]"}], "]"}]}], ",", "Red"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"\"\<Susceptible= \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Cases", "[", 
                    RowBox[{"PopA", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "_", ",", "_", ",", "_", ",", "\"\<u\>\"", ",", "_"}], 
                    "}"}]}], "]"}], "]"}], "]"}]}], ",", 
                    RowBox[{"Darker", "[", 
                    RowBox[{"Green", ",", ".5"}], "]"}]}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"\"\<Recovered= \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Cases", "[", 
                    RowBox[{"PopA", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "_", ",", "_", ",", "_", ",", "\"\<r\>\"", ",", "_"}], 
                    "}"}]}], "]"}], "]"}], "]"}]}], ",", 
                    RowBox[{"Darker", "[", 
                    RowBox[{"Green", ",", ".5"}], "]"}]}], "]"}]}], "}"}], 
                    "\[IndentingNewLine]", "]"}]}], "}"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<City B\>\"", ",", "\"\<Title\>\"", ",", "16"}], 
                    "]"}], "}"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Image", "[", "\[IndentingNewLine]", 
                    RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
                    RowBox[{"Join", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"Circle", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", "2"}], "]"}], "}"}], 
                    "}"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "\"\<u\>\""}], "||", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "\"\<r\>\""}]}], 
                    ",", "\[IndentingNewLine]", "Green", ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "\"\<i\>\""}], ",",
                     "\[IndentingNewLine]", "Red", ",", "Blue"}], "]"}]}], 
                    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Disk", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "*", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"PopB", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "]"}]}]}], "}"}], ",", ".1"}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", 
                    RowBox[{"Length", "[", "PopB", "]"}]}], "}"}]}], 
                    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
                    "]"}], "\[IndentingNewLine]", "]"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Column", "[", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"\"\<Latent= \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Cases", "[", 
                    RowBox[{"PopB", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "_", ",", "_", ",", "_", ",", "\"\<n\>\"", ",", "_"}], 
                    "}"}]}], "]"}], "]"}], "]"}]}], ",", "Blue"}], "]"}], ",",
                     "\[IndentingNewLine]", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"\"\<Contagious= \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Cases", "[", 
                    RowBox[{"PopB", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "_", ",", "_", ",", "_", ",", "\"\<i\>\"", ",", "_"}], 
                    "}"}]}], "]"}], "]"}], "]"}]}], ",", "Red"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"\"\<Susceptible= \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Cases", "[", 
                    RowBox[{"PopB", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "_", ",", "_", ",", "_", ",", "\"\<u\>\"", ",", "_"}], 
                    "}"}]}], "]"}], "]"}], "]"}]}], ",", 
                    RowBox[{"Darker", "[", 
                    RowBox[{"Green", ",", ".5"}], "]"}]}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"\"\<Recovered= \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Cases", "[", 
                    RowBox[{"PopB", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "_", ",", "_", ",", "_", ",", "\"\<r\>\"", ",", "_"}], 
                    "}"}]}], "]"}], "]"}], "]"}]}], ",", 
                    RowBox[{"Darker", "[", 
                    RowBox[{"Green", ",", ".5"}], "]"}]}], "]"}]}], "}"}], 
                    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
                   "}"}]}], "}"}], "\[IndentingNewLine]", "]"}]}], 
              "\[IndentingNewLine]", "]"}]}], ";"}]}], "\[IndentingNewLine]", 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"moving", "=", "False"}], ";"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{
      "Pops", "\[LeftDoubleBracket]", "w", "\[RightDoubleBracket]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"UpdateInterval", "\[Rule]", " ", 
      RowBox[{"If", "[", 
       RowBox[{"moving", ",", "2", ",", "Infinity"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Dynamic", "@", 
    RowBox[{"Button", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{"running", ",", "\"\<reset\>\"", ",", "\"\<run\>\""}], "]"}], 
       "<>", "\"\< simulation\>\""}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", "running"}], ",", 
          RowBox[{"moving", "=", "True"}]}], "]"}], ",", 
        RowBox[{"running", "=", 
         RowBox[{"!", "running"}]}]}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", " ", "225"}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Dynamic", "@", 
    RowBox[{"If", "[", 
     RowBox[{"running", ",", "\[IndentingNewLine]", 
      RowBox[{"Column", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<day shown\>\"", ",", "\[IndentingNewLine]", 
          RowBox[{"Control", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"w", ",", "1", ",", "\"\<\>\""}], "}"}], ",", "1", ",", 
             "Days", ",", "1", ",", 
             RowBox[{"Appearance", "\[Rule]", " ", "\"\<Labeled\>\""}]}], 
            "}"}], "]"}]}], "\[IndentingNewLine]", "}"}], ",", "Left", ",", 
        ".8"}], "]"}], "\[IndentingNewLine]", ",", "\"\<\>\""}], "]"}]}], ",",
    "\[IndentingNewLine]", 
   RowBox[{"Dynamic", "@", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", "running"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Column", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<duration of simulation\>\"", ",", "\[IndentingNewLine]", 
          RowBox[{"Control", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"Days", ",", "7", ",", "\"\<\>\""}], "}"}], ",", "1", 
             ",", "21", ",", "1", ",", 
             RowBox[{"Appearance", "\[Rule]", " ", "\"\<Labeled\>\""}]}], 
            "}"}], "]"}], ",", "\[IndentingNewLine]", 
          "\"\<city population\>\"", ",", "\[IndentingNewLine]", 
          RowBox[{"Control", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"TotalPop", ",", "10", ",", "\"\<\>\""}], "}"}], ",", 
             "1", ",", "100", ",", "1", ",", 
             RowBox[{"Appearance", "\[Rule]", " ", "\"\<Labeled\>\""}]}], 
            "}"}], "]"}], ",", "\[IndentingNewLine]", 
          "\"\<people transfered between cities [days]\>\"", ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Control", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"Transfer", ",", "1", ",", "\"\<\>\""}], "}"}], ",", 
             "0", ",", "TotalPop", ",", "1", ",", 
             RowBox[{"Appearance", "\[Rule]", " ", "\"\<Labeled\>\""}]}], 
            "}"}], "]"}], ",", "\[IndentingNewLine]", 
          "\"\<% chance of being infected upon contact\>\"", ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Control", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"Infectious", ",", "10", ",", "\"\<\>\""}], "}"}], ",", 
             "1", ",", "100", ",", "1", ",", 
             RowBox[{"Appearance", "\[Rule]", " ", "\"\<Labeled\>\""}]}], 
            "}"}], "]"}], ",", "\[IndentingNewLine]", 
          "\"\<initial infected cases in City A\>\"", ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Control", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"InfectedA", ",", "1", ",", "\"\<\>\""}], "}"}], ",", 
             "0", ",", "TotalPop", ",", "1", ",", 
             RowBox[{"Appearance", "\[Rule]", " ", "\"\<Labeled\>\""}]}], 
            "}"}], "]"}], ",", "\[IndentingNewLine]", 
          "\"\<initial infected cases in City B\>\"", ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Control", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"InfectedB", ",", "1", ",", "\"\<\>\""}], "}"}], ",", 
             "0", ",", "TotalPop", ",", "1", ",", 
             RowBox[{"Appearance", "\[Rule]", " ", "\"\<Labeled\>\""}]}], 
            "}"}], "]"}], ",", "\[IndentingNewLine]", 
          "\"\<recovery from contagious state [days]\>\"", ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Control", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"Recovery", ",", "3", ",", "\"\<\>\""}], "}"}], ",", 
             "1", ",", "Days", ",", "1", ",", 
             RowBox[{"Appearance", "\[Rule]", " ", "\"\<Labeled\>\""}]}], 
            "}"}], "]"}], ",", "\[IndentingNewLine]", 
          "\"\<latency before contagious state [days]\>\"", ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Control", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"Incubation", ",", "3", ",", "\"\<\>\""}], "}"}], ",", 
             "1", ",", "Days", ",", "1", ",", 
             RowBox[{"Appearance", "\[Rule]", " ", "\"\<Labeled\>\""}]}], 
            "}"}], "]"}]}], "}"}], ",", "Left", ",", ".7"}], "]"}], 
      "\[IndentingNewLine]", ",", "\"\<\>\""}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ControlPlacement", "\[Rule]", "Left"}], ",", 
   RowBox[{"ContentSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"330", ",", "425"}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.5503314730937166`*^9, 3.550331565750016*^9}, {
   3.5503316077174163`*^9, 3.5503316085734653`*^9}, {3.550331673739193*^9, 
   3.550331918892215*^9}, 3.550332027758442*^9, {3.5503320707399*^9, 
   3.5503320855707483`*^9}, {3.550332140997918*^9, 3.550332142473003*^9}, {
   3.5503321792851086`*^9, 3.5503321845134077`*^9}, {3.550332227806884*^9, 
   3.5503324885968*^9}, {3.5503325353414736`*^9, 3.5503325775678887`*^9}, {
   3.5503326093277054`*^9, 3.55033264437971*^9}, {3.550332686772135*^9, 
   3.5503327511748185`*^9}, {3.5503327926001883`*^9, 3.550332796342402*^9}, {
   3.5503328926769123`*^9, 3.550332898716257*^9}, {3.550333011302697*^9, 
   3.5503330347010355`*^9}, {3.550333103104948*^9, 3.5503332018055935`*^9}, {
   3.5503332452550783`*^9, 3.5503332859564066`*^9}, {3.550333394853635*^9, 
   3.550333414896781*^9}, {3.5503334496957717`*^9, 3.550333451636883*^9}, {
   3.5503335130513954`*^9, 3.550333514668488*^9}, {3.550333549102457*^9, 
   3.550333602285499*^9}, {3.550333640968712*^9, 3.5503337236724424`*^9}, {
   3.5503339659593005`*^9, 3.550334058230578*^9}, {3.550334090869445*^9, 
   3.550334147674694*^9}, 3.550334186226899*^9, {3.5503494542623425`*^9, 
   3.550349454574361*^9}, {3.5503496412600384`*^9, 3.550349670741725*^9}, {
   3.5503498062904778`*^9, 3.5503498593385115`*^9}, {3.5503501239586473`*^9, 
   3.550350303469915*^9}, {3.55035039744129*^9, 3.55035042228271*^9}, {
   3.550350459846859*^9, 3.550350475671764*^9}, {3.550350516079075*^9, 
   3.5503505511730824`*^9}, {3.5503505857860622`*^9, 
   3.5503506098984413`*^9}, {3.5503506879609065`*^9, 
   3.5503506918961315`*^9}, {3.5503507302243233`*^9, 
   3.5503507387668123`*^9}, {3.550350797672181*^9, 3.5503508491121235`*^9}, {
   3.55035088960944*^9, 3.55035089101552*^9}, {3.5503510933830953`*^9, 
   3.550351130235203*^9}, {3.550351178295952*^9, 3.5503512101917763`*^9}, {
   3.550351816354447*^9, 3.5503518200036554`*^9}, 3.5503518965070314`*^9, {
   3.550351935027234*^9, 3.5503521429951296`*^9}, {3.550352193412013*^9, 
   3.550352195947158*^9}, {3.5503522481441436`*^9, 3.5503522575976844`*^9}, {
   3.5503523129748516`*^9, 3.5503523574833975`*^9}, {3.5503524084873147`*^9, 
   3.5503524332577314`*^9}, {3.550352543707049*^9, 3.550352666765087*^9}, {
   3.550352821445935*^9, 3.5503528436932073`*^9}, {3.550352884505542*^9, 
   3.5503528919549675`*^9}, {3.55035297487171*^9, 3.5503530030073195`*^9}, {
   3.5503534736782403`*^9, 3.550353545773364*^9}, {3.55035363783663*^9, 
   3.550353702603334*^9}, {3.550353819457018*^9, 3.5503538449874783`*^9}, 
   3.5503546088171663`*^9, {3.5503549624943953`*^9, 3.5503549660756006`*^9}, {
   3.5503550524995437`*^9, 3.5503550598999667`*^9}, {3.550355188471321*^9, 
   3.55035523146778*^9}, {3.550403033978756*^9, 3.5504030681477103`*^9}, {
   3.55040330538828*^9, 3.5504033797565336`*^9}, {3.5504034488904877`*^9, 
   3.550403450842599*^9}, 3.5504035149902687`*^9, {3.5504035535844755`*^9, 
   3.5504035930207314`*^9}, {3.5504036255265903`*^9, 3.550403668489048*^9}, {
   3.5504037106964617`*^9, 3.5504037683277583`*^9}, {3.5504038177945876`*^9, 
   3.5504039019574013`*^9}, {3.5504039363243675`*^9, 
   3.5504040481347623`*^9}, {3.5504040816666803`*^9, 3.550404086762972*^9}, {
   3.55040412886238*^9, 3.5504041540318193`*^9}, {3.550404278967965*^9, 
   3.5504043468278465`*^9}, {3.550404405594208*^9, 3.550404561792142*^9}, {
   3.5504050434186897`*^9, 3.550405044518752*^9}, {3.5504052668454685`*^9, 
   3.5504052962181487`*^9}, {3.550405375833702*^9, 3.5504053791278906`*^9}, {
   3.550405418761158*^9, 3.550405423132408*^9}, {3.550405463279704*^9, 
   3.550405466512889*^9}, {3.5504055960302973`*^9, 3.55040567422777*^9}, {
   3.5504058340619116`*^9, 3.5504059349946847`*^9}, {3.550405970145695*^9, 
   3.550405994114066*^9}, {3.5504060970659547`*^9, 3.550406199356805*^9}, {
   3.5504068782776375`*^9, 3.550406909694434*^9}, {3.5504069433783607`*^9, 
   3.55040708060421*^9}, {3.550407243839546*^9, 3.5504073639524164`*^9}, {
   3.550412007323779*^9, 3.5504120606068263`*^9}, {3.550412115474965*^9, 
   3.550412148540856*^9}, {3.550412263984459*^9, 3.5504122648665094`*^9}, {
   3.550412595423416*^9, 3.5504126022428064`*^9}, 3.5504128930714407`*^9, {
   3.550412930916605*^9, 3.5504129712069097`*^9}, 3.5504130091310787`*^9, {
   3.5504131372844086`*^9, 3.5504131689222183`*^9}, {3.55041322017915*^9, 
   3.5504132393682475`*^9}, {3.5504153608013334`*^9, 
   3.5504153623374214`*^9}, {3.550415508217765*^9, 3.5504155085877867`*^9}, {
   3.550415626559534*^9, 3.5504156267965474`*^9}, {3.5504157657494955`*^9, 
   3.550415793056057*^9}, {3.550415833913394*^9, 3.5504158463921075`*^9}, {
   3.5504160075333242`*^9, 3.5504160364319773`*^9}, 3.5504163314148493`*^9, {
   3.550416566384289*^9, 3.550416613522985*^9}, {3.5504168191867485`*^9, 
   3.5504168473823605`*^9}, {3.550416919119464*^9, 3.55041694824613*^9}, {
   3.550416980836994*^9, 3.55041698182205*^9}, {3.5504170660218663`*^9, 
   3.55041712623431*^9}, 3.5504172840613375`*^9, {3.5504174636876116`*^9, 
   3.5504176460930443`*^9}, {3.5504178083243237`*^9, 
   3.5504178095593944`*^9}, {3.5504178782403226`*^9, 
   3.5504179054228773`*^9}, {3.5504179356686077`*^9, 3.550417966263357*^9}, {
   3.5504184814548244`*^9, 3.5504184977197547`*^9}, {3.550418549598722*^9, 
   3.5504185888389664`*^9}, {3.5504186188446827`*^9, 
   3.5504186533696575`*^9}, {3.5504187403236313`*^9, 3.550418899003707*^9}, {
   3.5504189620893154`*^9, 3.5504189624953384`*^9}, {3.5504189997464695`*^9, 
   3.5504190506843824`*^9}, {3.550419319231743*^9, 3.550419325089078*^9}, {
   3.550419412946103*^9, 3.5504194240917406`*^9}, {3.550419699944518*^9, 
   3.5504197021206427`*^9}, {3.5504197920277853`*^9, 3.550419792253798*^9}, {
   3.5504198333181467`*^9, 3.550419833842177*^9}, {3.55042003774984*^9, 
   3.5504200430271416`*^9}, {3.550488326676118*^9, 3.550488329388273*^9}, {
   3.550488545805651*^9, 3.5504885524820333`*^9}, {3.5504979526237526`*^9, 
   3.550497954238845*^9}, {3.550499053583724*^9, 3.550499064239333*^9}, {
   3.5504991015724688`*^9, 3.5504991283670015`*^9}, {3.5504992078355465`*^9, 
   3.5504992479398403`*^9}, {3.5505029355677605`*^9, 
   3.5505029394259815`*^9}, {3.550503347449319*^9, 3.550503349099413*^9}, {
   3.550503432894206*^9, 3.5505034330372143`*^9}, {3.5505034691802816`*^9, 
   3.5505034901434803`*^9}, {3.550503566059823*^9, 3.5505035937704077`*^9}, 
   3.5505036346417456`*^9, {3.550503753188526*^9, 3.5505037637121277`*^9}, {
   3.550503857300481*^9, 3.5505038919484625`*^9}, {3.5505039484876966`*^9, 
   3.550503950313801*^9}, {3.5505039803655195`*^9, 3.5505039890540166`*^9}, {
   3.5505041599017887`*^9, 3.550504205918421*^9}, {3.55050426238065*^9, 
   3.55050434123316*^9}, {3.550504383082554*^9, 3.5505044203536854`*^9}, {
   3.550504461739053*^9, 3.550504470367546*^9}, {3.5505046864049025`*^9, 
   3.550504713685463*^9}, {3.550505109718115*^9, 3.550505136013619*^9}, {
   3.5505052568295293`*^9, 3.5505053711130657`*^9}, 3.5505054713427987`*^9, {
   3.5505055869644117`*^9, 3.5505055899495826`*^9}, {3.5505057258313546`*^9, 
   3.550505729558568*^9}, {3.5505060411083875`*^9, 3.5505060534570937`*^9}, {
   3.5505227229781127`*^9, 3.55052273411775*^9}, {3.5505228330014057`*^9, 
   3.550522833272421*^9}, {3.550522868764451*^9, 3.5505228964610357`*^9}, {
   3.550522944718796*^9, 3.5505229741704803`*^9}, {3.550523093557309*^9, 
   3.55052310651505*^9}, {3.550523158358015*^9, 3.550523179340215*^9}, {
   3.550523367060952*^9, 3.550523375955461*^9}, {3.550523416063755*^9, 
   3.550523438210022*^9}, {3.5505234738720617`*^9, 3.550523483138592*^9}, {
   3.5505236669251037`*^9, 3.5505236772066917`*^9}, {3.5505238963262243`*^9, 
   3.5505239112440777`*^9}, 3.550524358068635*^9, {3.5505245062351093`*^9, 
   3.550524512058442*^9}, {3.550524647185171*^9, 3.550524649307293*^9}, {
   3.5505249011916995`*^9, 3.550524972235763*^9}, {3.550525035888404*^9, 
   3.550525218220833*^9}, {3.5505252763531575`*^9, 3.550525291271011*^9}, {
   3.5505253274800816`*^9, 3.550525351643464*^9}, {3.550525383946312*^9, 
   3.5505253914947433`*^9}, {3.5505254655419784`*^9, 3.550525483873027*^9}, {
   3.550525585027813*^9, 3.550525665980443*^9}, {3.550525742226804*^9, 
   3.550525927252387*^9}, {3.5505259725829797`*^9, 3.550526108292742*^9}, {
   3.550526160684738*^9, 3.5505261911554813`*^9}, {3.5505262958884716`*^9, 
   3.550526327174261*^9}, {3.5505263724248495`*^9, 3.5505263890508003`*^9}, {
   3.550526459299818*^9, 3.550526470204442*^9}, {3.5505266405701866`*^9, 
   3.5505266451904507`*^9}, {3.5505268136430855`*^9, 3.55052684117066*^9}, {
   3.5505269232193527`*^9, 3.55052698402083*^9}, {3.550527102327597*^9, 
   3.550527107200876*^9}, {3.5505272164111223`*^9, 3.550527226130678*^9}, {
   3.5505273163358383`*^9, 3.5505273173598967`*^9}, {3.5505279197783527`*^9, 
   3.5505279212044344`*^9}, {3.550577211063359*^9, 3.5505772188283696`*^9}, {
   3.5505772494204693`*^9, 3.5505772496054697`*^9}, {3.5505772856675806`*^9, 
   3.5505772866075816`*^9}, {3.5505775889591584`*^9, 3.550577597766227*^9}, {
   3.550577647983412*^9, 3.550577674044531*^9}, {3.550577711201792*^9, 
   3.5505777372359457`*^9}, {3.55057782738136*^9, 3.550577829536363*^9}, {
   3.5505782380180893`*^9, 3.55057826153515*^9}, {3.550578333648573*^9, 
   3.550578351100653*^9}, {3.5505784620551505`*^9, 3.550578503934326*^9}, {
   3.550578544041442*^9, 3.550578642206851*^9}, {3.5505786848881397`*^9, 
   3.5505787899118643`*^9}, {3.550578879550458*^9, 3.550578920235823*^9}, 
   3.5505789759023924`*^9, {3.550579013551564*^9, 3.5505790333869405`*^9}, {
   3.5505790639830947`*^9, 3.550579064178095*^9}, {3.5505790970196333`*^9, 
   3.5505791212667236`*^9}, {3.550579221632548*^9, 3.550579246099641*^9}, {
   3.5505792813911457`*^9, 3.55057936144674*^9}, {3.5505794022593236`*^9, 
   3.5505794065293293`*^9}, {3.550579477700163*^9, 3.5505794824901695`*^9}, {
   3.550579813668023*^9, 3.550579868563328*^9}, {3.5505806044654474`*^9, 
   3.550580644732993*^9}, {3.5505892218280315`*^9, 3.550589335654562*^9}, {
   3.550589381469965*^9, 3.550589419215227*^9}, {3.5505894639519787`*^9, 
   3.550589505015498*^9}, {3.550589886578602*^9, 3.5505898894226665`*^9}, {
   3.550589993245406*^9, 3.550589996633577*^9}, {3.5506122102692823`*^9, 
   3.550612210966287*^9}, {3.5506124033243866`*^9, 3.550612409662633*^9}, {
   3.550612466759885*^9, 3.55061248742253*^9}, {3.5506125190096865`*^9, 
   3.550612597520406*^9}, {3.5506126294195843`*^9, 3.550612632256664*^9}, {
   3.5506126969249916`*^9, 3.550612700544136*^9}, {3.550612747238025*^9, 
   3.550612747699052*^9}, {3.5506130498353558`*^9, 3.5506131977760305`*^9}, {
   3.550613330474021*^9, 3.5506133327260923`*^9}, {3.5506837403769903`*^9, 
   3.5506838545071497`*^9}, {3.5506840445524178`*^9, 3.550684073127458*^9}, {
   3.550684229597677*^9, 3.550684240332692*^9}, {3.550684319757803*^9, 
   3.550684320227804*^9}, {3.5506843978129125`*^9, 3.5506844406829724`*^9}, {
   3.550684578101166*^9, 3.550684580321169*^9}, {3.5506851159069185`*^9, 
   3.5506851396919518`*^9}, {3.550685248857105*^9, 3.550685461147402*^9}, {
   3.550685530557499*^9, 3.5506855310725*^9}, {3.550685653071184*^9, 
   3.5506856558461885`*^9}, {3.5506857541313257`*^9, 
   3.5506858482864575`*^9}, {3.5506859345665784`*^9, 3.550685983171646*^9}, {
   3.550686058551752*^9, 3.550686074296774*^9}, {3.5506866982526474`*^9, 
   3.550686700892651*^9}, {3.5506922473838515`*^9, 3.550692300032095*^9}, {
   3.550692432815806*^9, 3.5506924407268744`*^9}, {3.5506927422375107`*^9, 
   3.5506927895166965`*^9}, {3.550692840257942*^9, 3.5506929344624825`*^9}, {
   3.5506929710195894`*^9, 3.550692988076674*^9}, {3.5506930853300433`*^9, 
   3.5506931709554567`*^9}, {3.5506932137737503`*^9, 3.550693215853753*^9}, {
   3.550693245921856*^9, 3.5506932486229167`*^9}, {3.5506933130791793`*^9, 
   3.5506933134091797`*^9}, {3.5506935321101418`*^9, 3.550693581636386*^9}, {
   3.550693619468498*^9, 3.5506936683297415`*^9}, {3.5506937066039104`*^9, 
   3.550693801237282*^9}, {3.5506938421864567`*^9, 3.5506938859256363`*^9}, {
   3.5506939425118895`*^9, 3.5506939791489983`*^9}, {3.550694010191102*^9, 
   3.5506940584152884`*^9}, {3.550694117094486*^9, 3.5506942621941695`*^9}, {
   3.5506943556675267`*^9, 3.5506943836896224`*^9}, {3.5506944164037857`*^9, 
   3.5506944203737917`*^9}, {3.550694821487522*^9, 3.550694823462525*^9}, {
   3.5506952454484005`*^9, 3.550695278775505*^9}, {3.550695600625657*^9, 
   3.5506956169477386`*^9}, {3.550695667508983*^9, 3.5506958145275383`*^9}, {
   3.550695862071721*^9, 3.5506959535621386`*^9}, {3.5506960329784317`*^9, 
   3.550696089399686*^9}, {3.5506964757824*^9, 3.5506965022094946`*^9}, {
   3.5506965688078165`*^9, 3.5506966989883146`*^9}, {3.550696818416808*^9, 
   3.550696824681817*^9}, {3.5506968816700764`*^9, 3.55069688414008*^9}, {
   3.550697071590928*^9, 3.550697144562208*^9}, {3.5506974427826424`*^9, 
   3.550697524013935*^9}, {3.5506978498768663`*^9, 3.5506978519093866`*^9}, {
   3.550697891063648*^9, 3.550697916805435*^9}, {3.550698149142171*^9, 
   3.5506981602002873`*^9}, {3.5506981946267376`*^9, 
   3.5506981970667696`*^9}, {3.550698236005102*^9, 3.5506982371701684`*^9}, {
   3.5506983451703243`*^9, 3.5506983461403255`*^9}, {3.550698713184501*^9, 
   3.550698722126626*^9}, {3.550699081291771*^9, 3.550699090403842*^9}, {
   3.550699156427318*^9, 3.5506991999760303`*^9}, {3.550699253168762*^9, 
   3.5506993049196267`*^9}, {3.5506994965863566`*^9, 
   3.5506995701108646`*^9}, {3.5506996149100165`*^9, 
   3.5506996588842106`*^9}, {3.5508349319341555`*^9, 
   3.5508349790167875`*^9}, {3.5508351366972504`*^9, 
   3.5508351376833067`*^9}, {3.550836648878502*^9, 3.5508366880677395`*^9}, {
   3.550836781985875*^9, 3.5508367903013344`*^9}, {3.550836830308457*^9, 
   3.550836856547863*^9}, {3.550836889802696*^9, 3.5508369643207693`*^9}, {
   3.550837211733468*^9, 3.5508372396470346`*^9}, {3.5508372857236567`*^9, 
   3.550837341673751*^9}, {3.5508374359639997`*^9, 3.550837439479195*^9}, {
   3.550837482388527*^9, 3.5508375292231884`*^9}, {3.550837628439848*^9, 
   3.5508376328100977`*^9}, {3.5508377122126236`*^9, 3.550837765783575*^9}, {
   3.550837879186049*^9, 3.55083799244152*^9}, {3.5508380691987505`*^9, 
   3.5508380821854935`*^9}, {3.5508382163911543`*^9, 
   3.5508382241295967`*^9}, {3.5508383503427906`*^9, 3.550838351317847*^9}, {
   3.550838445440134*^9, 3.5508384715535545`*^9}, {3.550838645651283*^9, 
   3.550838660011099*^9}, 3.5508388287125025`*^9, {3.550838869717845*^9, 
   3.550838889858908*^9}, 3.55083892548882*^9, {3.550838975135624*^9, 
   3.5508391174006033`*^9}, {3.5508392043055215`*^9, 
   3.5508392093108077`*^9}, {3.5508394329155035`*^9, 
   3.5508394391478553`*^9}, {3.550839535904317*^9, 3.550839593457529*^9}, {
   3.550839847150691*^9, 3.550839872243125*^9}, {3.550839921171918*^9, 
   3.550839966533511*^9}, {3.550840004597619*^9, 3.550840024853717*^9}, {
   3.5508401415263524`*^9, 3.550840206315997*^9}, {3.5508402408179693`*^9, 
   3.5508402499114895`*^9}, {3.5508435011086082`*^9, 
   3.5508435706085267`*^9}, {3.550843735562913*^9, 3.5508437417752647`*^9}, {
   3.5508446083158464`*^9, 3.550844638340564*^9}, {3.5508446847981553`*^9, 
   3.550844858325794*^9}, {3.5508449499998093`*^9, 3.550844965949722*^9}, {
   3.5508473540585146`*^9, 3.5508473772988434`*^9}, {3.550848338862496*^9, 
   3.5508484483456593`*^9}, {3.5508490129428663`*^9, 3.550849117590672*^9}, {
   3.5508491508884563`*^9, 3.550849164042029*^9}, {3.5508493276123466`*^9, 
   3.550849354603873*^9}, {3.5508493997784276`*^9, 3.5508494655351*^9}, {
   3.550849537620058*^9, 3.5508495656906605`*^9}, {3.550849601514696*^9, 
   3.550849605452921*^9}, {3.550849668807449*^9, 3.5508497011312976`*^9}, {
   3.5508497668609743`*^9, 3.5508498971153655`*^9}, {3.550849931317322*^9, 
   3.550850016289143*^9}, {3.5508502774257545`*^9, 3.550850302752185*^9}, {
   3.5508503437293983`*^9, 3.5508504233037667`*^9}, {3.5508504550445824`*^9, 
   3.550850773324258*^9}, {3.550851020694306*^9, 3.5508510797865763`*^9}, {
   3.5508518039250555`*^9, 3.550851900671514*^9}, {3.5508520044432845`*^9, 
   3.5508520222242002`*^9}, {3.550852071979039*^9, 3.5508521315463467`*^9}, {
   3.5508523147914248`*^9, 3.5508523188956594`*^9}, {3.550856529451786*^9, 
   3.550856530849866*^9}, {3.5508565854429708`*^9, 3.5508566510647216`*^9}, 
   3.5508567017226048`*^9, 3.5508598571684103`*^9, {3.5508599459414597`*^9, 
   3.5508599470025206`*^9}, {3.5508600662183046`*^9, 
   3.5508600703775425`*^9}, {3.5508601397604876`*^9, 3.550860145782832*^9}, {
   3.550870745874962*^9, 3.5508707714744263`*^9}, {3.550921398397413*^9, 
   3.550921405311808*^9}, {3.550921436498592*^9, 3.5509214782199783`*^9}, {
   3.5509215586435785`*^9, 3.550921564669923*^9}, {3.55092162458235*^9, 
   3.550921714225477*^9}, {3.5509219369382153`*^9, 3.5509219548212385`*^9}, {
   3.55092218790457*^9, 3.5509221881375833`*^9}, {3.5509223467606564`*^9, 
   3.5509225683073273`*^9}, 3.5509227263933697`*^9, {3.5509227567281046`*^9, 
   3.550922785119729*^9}, {3.5509228701755934`*^9, 3.5509230360320797`*^9}, {
   3.550923122248011*^9, 3.5509232075548906`*^9}, {3.5509232744017143`*^9, 
   3.5509232918267107`*^9}, {3.5509233346641607`*^9, 3.550923392819487*^9}, {
   3.5509234762882614`*^9, 3.550923532476475*^9}, {3.5509237535721207`*^9, 
   3.550923865287511*^9}, {3.55092390688789*^9, 3.550923917129476*^9}, {
   3.550924426635618*^9, 3.5509244457557116`*^9}, {3.550924714825102*^9, 
   3.550924821692214*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`Days$$ = 7, $CellContext`Incubation$$ = 
    3, $CellContext`InfectedA$$ = 1, $CellContext`InfectedB$$ = 
    1, $CellContext`Infectious$$ = 10, $CellContext`Recovery$$ = 
    3, $CellContext`TotalPop$$ = 10, $CellContext`Transfer$$ = 
    1, $CellContext`w$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       Dynamic[
        Button[
         StringJoin[
          If[$CellContext`running, "reset", "run"], " simulation"], {
          If[
           Not[$CellContext`running], $CellContext`moving = 
           True], $CellContext`running = Not[$CellContext`running]}, 
         ImageSize -> 225]]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`w$$], 1, ""}, 1, 
      Dynamic[$CellContext`Days$$], 1}, {
      Hold[
       Dynamic[
        If[$CellContext`running, 
         Column[{"day shown", 
           Manipulate`Place[1]}, Left, 0.8], ""]]], 
      Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`Days$$], 7, ""}, 1, 21, 1}, {{
       Hold[$CellContext`TotalPop$$], 10, ""}, 1, 100, 1}, {{
       Hold[$CellContext`Transfer$$], 1, ""}, 0, 
      Dynamic[$CellContext`TotalPop$$], 1}, {{
       Hold[$CellContext`Infectious$$], 10, ""}, 1, 100, 1}, {{
       Hold[$CellContext`InfectedA$$], 1, ""}, 0, 
      Dynamic[$CellContext`TotalPop$$], 1}, {{
       Hold[$CellContext`InfectedB$$], 1, ""}, 0, 
      Dynamic[$CellContext`TotalPop$$], 1}, {{
       Hold[$CellContext`Recovery$$], 3, ""}, 1, 
      Dynamic[$CellContext`Days$$], 1}, {{
       Hold[$CellContext`Incubation$$], 3, ""}, 1, 
      Dynamic[$CellContext`Days$$], 1}, {
      Hold[
       Dynamic[
        If[
         Not[$CellContext`running], 
         Column[{"duration of simulation", 
           Manipulate`Place[2], "city population", 
           Manipulate`Place[3], "people transfered between cities [days]", 
           Manipulate`Place[4], "% chance of being infected upon contact", 
           Manipulate`Place[5], "initial infected cases in City A", 
           Manipulate`Place[6], "initial infected cases in City B", 
           Manipulate`Place[7], "recovery from contagious state [days]", 
           Manipulate`Place[8], "latency before contagious state [days]", 
           Manipulate`Place[9]}, Left, 0.7], ""]]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {231., {2., 8.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`w$37184$$ = 0, $CellContext`Days$37185$$ = 
    0, $CellContext`TotalPop$37186$$ = 0, $CellContext`Transfer$37187$$ = 
    0, $CellContext`Infectious$37188$$ = 0, $CellContext`InfectedA$37189$$ = 
    0, $CellContext`InfectedB$37190$$ = 0, $CellContext`Recovery$37191$$ = 
    0, $CellContext`Incubation$37192$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`Days$$ = 7, $CellContext`Incubation$$ = 
        3, $CellContext`InfectedA$$ = 1, $CellContext`InfectedB$$ = 
        1, $CellContext`Infectious$$ = 10, $CellContext`Recovery$$ = 
        3, $CellContext`TotalPop$$ = 10, $CellContext`Transfer$$ = 
        1, $CellContext`w$$ = 1}, "ControllerVariables" :> {
        Hold[$CellContext`w$$, $CellContext`w$37184$$, 0], 
        Hold[$CellContext`Days$$, $CellContext`Days$37185$$, 0], 
        Hold[$CellContext`TotalPop$$, $CellContext`TotalPop$37186$$, 0], 
        Hold[$CellContext`Transfer$$, $CellContext`Transfer$37187$$, 0], 
        Hold[$CellContext`Infectious$$, $CellContext`Infectious$37188$$, 0], 
        Hold[$CellContext`InfectedA$$, $CellContext`InfectedA$37189$$, 0], 
        Hold[$CellContext`InfectedB$$, $CellContext`InfectedB$37190$$, 0], 
        Hold[$CellContext`Recovery$$, $CellContext`Recovery$37191$$, 0], 
        Hold[$CellContext`Incubation$$, $CellContext`Incubation$37192$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Refresh[If[$CellContext`moving, 
          Clear[$CellContext`Pops]; $CellContext`Pops = {}; $CellContext`PopA = 
           Table[{$CellContext`k $CellContext`A, 
              RandomReal[{0, 1.8}], 
              RandomReal[{0, 2 Pi}], "u", 0}, {$CellContext`k, 
              1, $CellContext`TotalPop$$}]; $CellContext`PopB = 
           Table[{$CellContext`k $CellContext`B, 
              RandomReal[{0, 1.8}], 
              RandomReal[{0, 2 Pi}], "u", 0}, {$CellContext`k, 
              1, $CellContext`TotalPop$$}]; 
          For[$CellContext`j = 
            1, $CellContext`j < $CellContext`InfectedA$$ + 1, 
            Increment[$CellContext`j], Part[
              Part[$CellContext`PopA, $CellContext`j], 4] = "i"]; 
          For[$CellContext`j = 
            1, $CellContext`j < $CellContext`InfectedB$$ + 1, 
            Increment[$CellContext`j], Part[
              Part[$CellContext`PopB, $CellContext`j], 4] = "i"]; 
          For[$CellContext`k = 1, $CellContext`k < $CellContext`Days$$ + 1, 
            Increment[$CellContext`k], 
            For[$CellContext`i = 1, $CellContext`i < 
              Length[$CellContext`PopA] + 1, 
              Increment[$CellContext`i], Which[
                And[Part[
                   Part[$CellContext`PopA, $CellContext`i], 
                   5] == $CellContext`Recovery$$, Part[
                   Part[$CellContext`PopA, $CellContext`i], 4] == "i"], Part[
                   Part[$CellContext`PopA, $CellContext`i], 5] = 0; Part[
                   Part[$CellContext`PopA, $CellContext`i], 4] = "r", 
                And[Part[
                   Part[$CellContext`PopA, $CellContext`i], 
                   5] == $CellContext`Incubation$$ - 1, Part[
                   Part[$CellContext`PopA, $CellContext`i], 4] == "n"], Part[
                   Part[$CellContext`PopA, $CellContext`i], 5] = 0; Part[
                   Part[$CellContext`PopA, $CellContext`i], 4] = "i"]; Null]; 
            For[$CellContext`i = 1, $CellContext`i < 
              Length[$CellContext`PopB] + 1, 
              Increment[$CellContext`i], Which[
                And[Part[
                   Part[$CellContext`PopB, $CellContext`i], 
                   5] == $CellContext`Recovery$$, Part[
                   Part[$CellContext`PopB, $CellContext`i], 4] == "i"], Part[
                   Part[$CellContext`PopB, $CellContext`i], 5] = 0; Part[
                   Part[$CellContext`PopB, $CellContext`i], 4] = "r", 
                And[Part[
                   Part[$CellContext`PopB, $CellContext`i], 
                   5] == $CellContext`Incubation$$ - 1, Part[
                   Part[$CellContext`PopB, $CellContext`i], 4] == "n"], Part[
                   Part[$CellContext`PopB, $CellContext`i], 5] = 0; Part[
                   Part[$CellContext`PopB, $CellContext`i], 4] = "i"]; Null]; 
            For[$CellContext`i = 1, $CellContext`i < 
              Length[$CellContext`PopA] + 1, 
              Increment[$CellContext`i], 
              If[
               Or[Part[
                  Part[$CellContext`PopA, $CellContext`i], 4] == "i", Part[
                  Part[$CellContext`PopA, $CellContext`i], 4] == "n"], Part[
                 Part[$CellContext`PopA, $CellContext`i], 5] = Part[
                  Part[$CellContext`PopA, $CellContext`i], 5] + 1]]; 
            For[$CellContext`i = 1, $CellContext`i < 
              Length[$CellContext`PopB] + 1, 
              Increment[$CellContext`i], 
              If[
               Or[Part[
                  Part[$CellContext`PopB, $CellContext`i], 4] == "i", Part[
                  Part[$CellContext`PopB, $CellContext`i], 4] == "n"], Part[
                 Part[$CellContext`PopB, $CellContext`i], 5] = Part[
                  Part[$CellContext`PopB, $CellContext`i], 5] + 
                1]]; $CellContext`TotalPeopleA = 
             Length[$CellContext`PopA]; $CellContext`PeopleMetA = 
             Random[Integer, {10, 20}]; $CellContext`TotalPeopleB = 
             Length[$CellContext`PopB]; $CellContext`PeopleMetB = 
             Random[Integer, {10, 20}]; 
            For[$CellContext`j = 
               1, $CellContext`j < $CellContext`TotalPeopleA + 1, 
               Increment[$CellContext`j], 
               
               For[$CellContext`i = 
                0, $CellContext`i < $CellContext`PeopleMetA, 
                
                Increment[$CellContext`i], $CellContext`ContactA = 
                 Random[Integer, {1, $CellContext`TotalPeopleA}]; If[Part[
                    Part[$CellContext`PopA, $CellContext`ContactA], 4] == "i", 
                  If[
                   And[Part[
                    Part[$CellContext`PopA, $CellContext`j], 4] != "i", Part[
                    Part[$CellContext`PopA, $CellContext`j], 4] != "n", Part[
                    Part[$CellContext`PopA, $CellContext`j], 4] != "r", 
                    Random[Integer, {1, 100}] < $CellContext`Infectious$$], 
                   Part[
                    Part[$CellContext`PopA, $CellContext`j], 4] = "n"], 
                  If[
                   And[Part[
                    Part[$CellContext`PopA, $CellContext`ContactA], 4] != "n",
                     Part[
                    Part[$CellContext`PopA, $CellContext`ContactA], 4] != "r",
                     Part[
                    Part[$CellContext`PopA, $CellContext`j], 4] == "i", 
                    Random[Integer, {1, 100}] < $CellContext`Infectious$$], 
                   Part[
                    Part[$CellContext`PopA, $CellContext`ContactA], 4] = 
                   "n"]]]] 
             For[$CellContext`j = 
               1, $CellContext`j < $CellContext`TotalPeopleB + 1, 
               Increment[$CellContext`j], 
               
               For[$CellContext`i = 
                0, $CellContext`i < $CellContext`PeopleMetB, 
                
                Increment[$CellContext`i], $CellContext`ContactB = 
                 Random[Integer, {1, $CellContext`TotalPeopleB}]; If[Part[
                    Part[$CellContext`PopB, $CellContext`ContactB], 4] == "i", 
                  If[
                   And[Part[
                    Part[$CellContext`PopB, $CellContext`j], 4] != "i", Part[
                    Part[$CellContext`PopB, $CellContext`j], 4] != "n", Part[
                    Part[$CellContext`PopB, $CellContext`j], 4] != "r", 
                    Random[Integer, {1, 100}] < $CellContext`Infectious$$], 
                   Part[
                    Part[$CellContext`PopB, $CellContext`j], 4] = "n"], 
                  If[
                   And[Part[
                    Part[$CellContext`PopB, $CellContext`ContactB], 4] != "n",
                     Part[
                    Part[$CellContext`PopB, $CellContext`ContactB], 4] != "r",
                     Part[
                    Part[$CellContext`PopB, $CellContext`j], 4] == "i", 
                    Random[Integer, {1, 100}] < $CellContext`Infectious$$], 
                   Part[
                    Part[$CellContext`PopB, $CellContext`ContactB], 4] = 
                   "n"]]]]; $CellContext`ToA = 
             RandomChoice[$CellContext`PopB, $CellContext`Transfer$$]; \
$CellContext`ToB = 
             RandomChoice[$CellContext`PopA, $CellContext`Transfer$$]; \
$CellContext`PopA = 
             Complement[$CellContext`PopA, $CellContext`ToB]; \
$CellContext`PopB = Complement[$CellContext`PopB, $CellContext`ToA]; 
            For[$CellContext`i = 1, $CellContext`i < 
              Length[$CellContext`ToA] + 1, 
              Increment[$CellContext`i], Part[
                Part[$CellContext`ToA, $CellContext`i], 2] = Part[
                Part[$CellContext`ToA, $CellContext`i], 2]]; 
            For[$CellContext`i = 1, $CellContext`i < 
              Length[$CellContext`ToB] + 1, 
              Increment[$CellContext`i], Part[
                Part[$CellContext`ToB, $CellContext`i], 2] = Part[
                Part[$CellContext`ToB, $CellContext`i], 
                2]]; $CellContext`PopA = 
             Join[$CellContext`PopA, $CellContext`ToA]; $CellContext`PopB = 
             Join[$CellContext`PopB, $CellContext`ToB]; $CellContext`Pops = 
             Append[$CellContext`Pops, 
               Grid[{{
                  Style["City A", "Title", 16]}, {
                  Image[
                   Graphics[
                    Join[{{
                    Circle[{0, 0}, 2]}}, 
                    Table[{
                    If[
                    Or[Part[
                    Part[$CellContext`PopA, $CellContext`i], 4] == "u", Part[
                    Part[$CellContext`PopA, $CellContext`i], 4] == "r"], 
                    Green, 
                    If[Part[
                    Part[$CellContext`PopA, $CellContext`i], 4] == "i", Red, 
                    Blue]], 
                    Disk[{Part[
                    Part[$CellContext`PopA, $CellContext`i], 2] Cos[
                    Part[
                    Part[$CellContext`PopA, $CellContext`i], 3]], Part[
                    Part[$CellContext`PopA, $CellContext`i], 2] Sin[
                    Part[
                    Part[$CellContext`PopA, $CellContext`i], 3]]}, 
                    0.1]}, {$CellContext`i, 1, 
                    Length[$CellContext`PopA]}]]]], 
                  Column[{
                    Style[
                    StringJoin["Latent= ", 
                    ToString[
                    Length[
                    Cases[$CellContext`PopA, {
                    Blank[], 
                    Blank[], 
                    Blank[], "n", 
                    Blank[]}]]]], Blue], 
                    Style[
                    StringJoin["Contagious= ", 
                    ToString[
                    Length[
                    Cases[$CellContext`PopA, {
                    Blank[], 
                    Blank[], 
                    Blank[], "i", 
                    Blank[]}]]]], Red], 
                    Style[
                    StringJoin["Susceptible= ", 
                    ToString[
                    Length[
                    Cases[$CellContext`PopA, {
                    Blank[], 
                    Blank[], 
                    Blank[], "u", 
                    Blank[]}]]]], 
                    Darker[Green, 0.5]], 
                    Style[
                    StringJoin["Recovered= ", 
                    ToString[
                    Length[
                    Cases[$CellContext`PopA, {
                    Blank[], 
                    Blank[], 
                    Blank[], "r", 
                    Blank[]}]]]], 
                    Darker[Green, 0.5]]}]}, {
                  Style["City B", "Title", 16]}, {
                  Image[
                   Graphics[
                    Join[{{
                    Circle[{0, 0}, 2]}}, 
                    Table[{
                    If[
                    Or[Part[
                    Part[$CellContext`PopB, $CellContext`i], 4] == "u", Part[
                    Part[$CellContext`PopB, $CellContext`i], 4] == "r"], 
                    Green, 
                    If[Part[
                    Part[$CellContext`PopB, $CellContext`i], 4] == "i", Red, 
                    Blue]], 
                    Disk[{Part[
                    Part[$CellContext`PopB, $CellContext`i], 2] Cos[
                    Part[
                    Part[$CellContext`PopB, $CellContext`i], 3]], Part[
                    Part[$CellContext`PopB, $CellContext`i], 2] Sin[
                    Part[
                    Part[$CellContext`PopB, $CellContext`i], 3]]}, 
                    0.1]}, {$CellContext`i, 1, 
                    Length[$CellContext`PopB]}]]]], 
                  Column[{
                    Style[
                    StringJoin["Latent= ", 
                    ToString[
                    Length[
                    Cases[$CellContext`PopB, {
                    Blank[], 
                    Blank[], 
                    Blank[], "n", 
                    Blank[]}]]]], Blue], 
                    Style[
                    StringJoin["Contagious= ", 
                    ToString[
                    Length[
                    Cases[$CellContext`PopB, {
                    Blank[], 
                    Blank[], 
                    Blank[], "i", 
                    Blank[]}]]]], Red], 
                    Style[
                    StringJoin["Susceptible= ", 
                    ToString[
                    Length[
                    Cases[$CellContext`PopB, {
                    Blank[], 
                    Blank[], 
                    Blank[], "u", 
                    Blank[]}]]]], 
                    Darker[Green, 0.5]], 
                    Style[
                    StringJoin["Recovered= ", 
                    ToString[
                    Length[
                    Cases[$CellContext`PopB, {
                    Blank[], 
                    Blank[], 
                    Blank[], "r", 
                    Blank[]}]]]], 
                    Darker[Green, 0.5]]}]}}]]; Null]; $CellContext`moving = 
           False; Null]; Part[$CellContext`Pops, $CellContext`w$$], 
        UpdateInterval -> If[$CellContext`moving, 2, Infinity]], 
      "Specifications" :> {
        Dynamic[
         Button[
          StringJoin[
           If[$CellContext`running, "reset", "run"], " simulation"], {
           If[
            Not[$CellContext`running], $CellContext`moving = 
            True], $CellContext`running = Not[$CellContext`running]}, 
          ImageSize -> 225]], {{$CellContext`w$$, 1, ""}, 1, 
         Dynamic[$CellContext`Days$$], 1, Appearance -> "Labeled", 
         ControlPlacement -> 1}, 
        Dynamic[
         If[$CellContext`running, 
          Column[{"day shown", 
            Manipulate`Place[1]}, Left, 0.8], ""]], {{$CellContext`Days$$, 7, 
          ""}, 1, 21, 1, Appearance -> "Labeled", ControlPlacement -> 
         2}, {{$CellContext`TotalPop$$, 10, ""}, 1, 100, 1, Appearance -> 
         "Labeled", ControlPlacement -> 3}, {{$CellContext`Transfer$$, 1, ""},
          0, 
         Dynamic[$CellContext`TotalPop$$], 1, Appearance -> "Labeled", 
         ControlPlacement -> 4}, {{$CellContext`Infectious$$, 10, ""}, 1, 100,
          1, Appearance -> "Labeled", ControlPlacement -> 
         5}, {{$CellContext`InfectedA$$, 1, ""}, 0, 
         Dynamic[$CellContext`TotalPop$$], 1, Appearance -> "Labeled", 
         ControlPlacement -> 6}, {{$CellContext`InfectedB$$, 1, ""}, 0, 
         Dynamic[$CellContext`TotalPop$$], 1, Appearance -> "Labeled", 
         ControlPlacement -> 7}, {{$CellContext`Recovery$$, 3, ""}, 1, 
         Dynamic[$CellContext`Days$$], 1, Appearance -> "Labeled", 
         ControlPlacement -> 8}, {{$CellContext`Incubation$$, 3, ""}, 1, 
         Dynamic[$CellContext`Days$$], 1, Appearance -> "Labeled", 
         ControlPlacement -> 9}, 
        Dynamic[
         If[
          Not[$CellContext`running], 
          Column[{"duration of simulation", 
            Manipulate`Place[2], "city population", 
            Manipulate`Place[3], "people transfered between cities [days]", 
            Manipulate`Place[4], "% chance of being infected upon contact", 
            Manipulate`Place[5], "initial infected cases in City A", 
            Manipulate`Place[6], "initial infected cases in City B", 
            Manipulate`Place[7], "recovery from contagious state [days]", 
            Manipulate`Place[8], "latency before contagious state [days]", 
            Manipulate`Place[9]}, Left, 0.7], ""]]}, 
      "Options" :> {ControlPlacement -> Left, ContentSize -> {330, 425}}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{624., {228., 233.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.550923505362924*^9, 3.550923534084567*^9}, 
   3.5509238367518787`*^9, 3.550923877006181*^9, 3.550923917856518*^9, 
   3.5509241972834997`*^9, 3.550924447264798*^9, {3.550924782852992*^9, 
   3.5509248223342505`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Dynamic", "[", "running", "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.5508495076113887`*^9, 3.5508495092554817`*^9}, {
  3.55084957424615*^9, 3.5508495800234804`*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`running, StandardForm],
  ImageSizeCache->{35., {0., 8.}}]], "Output",
 CellChangeTimes->{3.5508495097695107`*^9, 3.550849580429504*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["running"], "Input",
 CellChangeTimes->{{3.5508495136607304`*^9, 3.5508495142997675`*^9}}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.550849515076812*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Style"}]], "Input",
 CellChangeTimes->{{3.5508520352129364`*^9, 3.5508520360209827`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Style\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"options\\\
\", \\\"TI\\\"]}], \\\"]\\\"}]\\) displays with \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) formatted using the specified \
option settings. \\n\\!\\(\\*RowBox[{\\\"Style\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"style\\\\\\\",\\\\\\\"TI\
\\\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True]}], \\\"]\\\"}]\\) \
uses the option settings for the specified style in the current notebook. \\n\
\\!\\(\\*RowBox[{\\\"Style\\\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"color\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
displays using the specified color. \\n\\!\\(\\*RowBox[{\\\"Style\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
\\\"Bold\\\"}], \\\"]\\\"}]\\) displays with fonts made bold. \
\\n\\!\\(\\*RowBox[{\\\"Style\\\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \
\\\"TI\\\"], \\\",\\\", \\\"Italic\\\"}], \\\"]\\\"}]\\) displays with fonts \
made italic. \\n\\!\\(\\*RowBox[{\\\"Style\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \\\"Underlined\\\"}], \
\\\"]\\\"}]\\) displays with fonts underlined. \
\\n\\!\\(\\*RowBox[{\\\"Style\\\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \
\\\"TI\\\"], \\\",\\\", \\\"Larger\\\"}], \\\"]\\\"}]\\) displays with fonts \
made larger. \\n\\!\\(\\*RowBox[{\\\"Style\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \\\"Smaller\\\"}], \
\\\"]\\\"}]\\) displays with fonts made smaller. \
\\n\\!\\(\\*RowBox[{\\\"Style\\\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
displays with font size \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"Style\\\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \
\\\"TI\\\"], \\\",\\\", \\\"Tiny\\\"}], \\\"]\\\"}]\\), \
\\!\\(\\*RowBox[{\\\"Style\\\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \
\\\"TI\\\"], \\\",\\\", \\\"Small\\\"}], \\\"]\\\"}]\\), etc. display with \
fonts that are tiny, small, etc. \"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Style"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.5508520366520185`*^9},
 CellTags->"Info3550837636-7782294"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Image"}]], "Input",
 CellChangeTimes->{{3.5508706989772797`*^9, 3.550870699718322*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Image\\\", \\\"[\\\", \
StyleBox[\\\"data\\\", \\\"TI\\\"], \\\"]\\\"}]\\) represents a raster image \
with pixel values given by the array \\!\\(\\*StyleBox[\\\"data\\\", \\\"TI\\\
\"]\\).\\n\\!\\(\\*RowBox[{\\\"Image\\\", \\\"[\\\", \
StyleBox[\\\"graphics\\\", \\\"TI\\\"], \\\"]\\\"}]\\) creates a raster image \
from a graphics object. \\n\\!\\(\\*RowBox[{\\\"Image\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"obj\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"options\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives an image that \
uses the specified options.\"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Image"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.550870700514367*^9},
 CellTags->"Info3550856300-3619482"]
}, Open  ]],

Cell[BoxData["Pops"], "Input",
 CellChangeTimes->{{3.5508708520310335`*^9, 3.5508708532041006`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Clear", " ", "Pops"}]], "Input",
 CellChangeTimes->{{3.5509212768284597`*^9, 3.5509212780955315`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Clear", " ", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"City A\"\>", "Title",
         StripOnInput->False,
         FontSize->16], ""},
       {
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1: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
ykyexY3Hf+z6NwAAAAAAAAAAAABa6v8BqHOAlQ==
           "], {{0, 359}, {360, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
          Selectable->False],
         BaseStyle->"ImageGraphics",
         ImageSizeRaw->{360, 359},
         PlotRange->{{0, 360}, {0, 359}}], 
        TagBox[GridBox[{
           {
            StyleBox["\<\"Infected= 2\"\>",
             StripOnInput->False,
             LineColor->RGBColor[0, 0, 1],
             FrontFaceColor->RGBColor[0, 0, 1],
             BackFaceColor->RGBColor[0, 0, 1],
             GraphicsColor->RGBColor[0, 0, 1],
             FontColor->RGBColor[0, 0, 1]]},
           {
            StyleBox["\<\"Contagious= 1\"\>",
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontColor->RGBColor[1, 0, 0]]},
           {
            StyleBox["\<\"Susceptible= 7\"\>",
             StripOnInput->False,
             LineColor->RGBColor[0., 0.5, 0.],
             FrontFaceColor->RGBColor[0., 0.5, 0.],
             BackFaceColor->RGBColor[0., 0.5, 0.],
             GraphicsColor->RGBColor[0., 0.5, 0.],
             FontColor->RGBColor[0., 0.5, 0.]]},
           {
            StyleBox["\<\"Recovered= 0\"\>",
             StripOnInput->False,
             LineColor->RGBColor[0., 0.5, 0.],
             FrontFaceColor->RGBColor[0., 0.5, 0.],
             BackFaceColor->RGBColor[0., 0.5, 0.],
             GraphicsColor->RGBColor[0., 0.5, 0.],
             FontColor->RGBColor[0., 0.5, 0.]]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Column"]},
       {
        StyleBox["\<\"City B\"\>", "Title",
         StripOnInput->False,
         FontSize->16], ""},
       {
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1: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
WO2hGos3CjVWiyF843G1oKE4wzIwD6VputlsanxjjbtaED6dgyrFDTYo99Mr
5c2qXTsQvu22WtxY0pHYS8oZlDnU+1669+B3ef5jVUb5SQqX8j304o4G3E2P
D5RfwsFScz+9v7+PX5hgckkFHytT5UgSKqKeUrawfGGCeTwep9OpxfEgHFn2
Y23GZ0EjTQka/npx7dbtdhuybgefyfMficfjldk4NvM5N9H7rt4dbY+iKMr1
9gC+djqRYATj9aP+9cgDwCNWemjQaBToFSsLxWvf3gLAR1ZuaL3f78PhkFWj
QE/YarxDAx+gJyzmCTTiAHrCYl2CG+qBnrB4HYTVX0BP2F13Ua+zMQC/2N3F
gBtjgeBZX3RBiQMInvVFnqziAILXxIoLJTBKY+z+TACOaOjyBz18gIDV3vjg
ay+2DgPgMgUNhY4mfjJXY4FQNbePfHMRCUCHzudzkiQN/fAg240ezXFt1hMz
iUykj6lJ92Z/N1w5Qo/U3p2tjPv9HkVRQ8lM+y7mkpjkw766sYnPhiaZ6Ium
SxDBTFUykw3M4OtW/spDuh4m0LhGJymFMKYqyjS+DRrFQ7OYrgcLNKvRSUoh
jKnKZ9OT50dkopvx+5cFvtbOdVLfpyp7s6+yL/JbatKuhww0pYVJSsH3qcrK
rCrFjYmhLTOC1cIkpeD7VKX8JKV4DA09ixCsNhdzet1xtGRF9PFxNdeuRw3Y
1/IuJ17fqzI240pBQ3GGZWAI0nw+3+/3bT5jkiRnP7cPXphFpbihONP1kAH7
8jzXJKXlpjoN3XXbgq3ZVoobS7PsesiAfZ10xvC3OpqbPDJR+UnKu2HPKQQo
juPL5dL+8/pbHS2/hIOl5ghSh/s+e10dLVPlSExCRRRBar8i+sjf6qj5eWvb
0Aw/CxqpSQkaCFInFdFHvu+PkJtcicfjldnYxHMz5yZ6BMyFCkMwu9WfzIkE
A8Fz5IqG7ykH0CvubEwQTMoBhE3Jxmg0yvO864H8sN/v5/N516MA8A13kg3j
WBAD8CEHj1On4hiAZw4epA6GMgCPulpY/jUHoxmAgrPXPUk5AGe5fNGTlANw
kLPJRkEpx3A47HDdO4BnLicbBReWvgP4xfFko9D5rXYAHk2n0+PRg20HSTkA
R3jUJOd2u8VxzIUVoHPuVzYe+du1GAjGbrdbLj3rqu11KzDAd0r4lWx4l/Z7
NLECwuPv/u8USIFOtLbLfBNYeQ50wq9y6DNa+gAtC+N2j8lkcjqduh4F0AvB
LLxUvqSpVgC/COC+bjdUsitN081m0/UogMAdj8fpdNr1KKyhQAo0TUfZeDx2
sKPXK7y4KQ/wl1J6JfZdj8I+X+7LA7xzvV7jOA6yiqgMSnlUkL8a0C0l80rp
ux5FU8K4sgw4pQ+3kYYdGIGW9SSNv91u+jU1Het6IID3gryG8pnz+TyZTIKP
kEDT/L3ptR4KHcCL+lDWeEahA6itJ2WNZxQ6gHp6VdZ4RqEDqKFvZY1nFDqA
SvpZ1nhGoQMoqbdljWcUOoAyel7WeEahA/gWZY1nFDqAL1DW+AzhFPgQzTa/
oD/LbDajRwfw6Hq9jsfj2+3W9UDcpdChuOr11g+ARQoak8mEqwbfUlxV6KBo
DOhYUNDgNFoSMRZQ7j2dTtl7qBLFWIUO5nToLfrx1qNIqz8dNWT0ENcWXxHY
PjJAGeufuh6F31jugl5hAaQthF/0xH6/n8/nXY8iHIrAisNdjwJokGbls9mM
gp5dIW20DfyGleQNKVahEzoQHlYdNEqhQ1nHbrfreiCANZqeEDRasFwuKZMi
DMqflUUTNNqhuMHFWfhOmbPyZ2oabcqyjOIz/KVznzLnrkfRR4fDYTqdkuPB
O8qWmWt36HQ6TSaTPM+7HghQSnFZkHtPOldc+Oame7hPubEyZHb9cETRSI32
JnCZsmLlxvTTcErRGYl+BXCTTm00wHSTQgcLSuEghQt2FnNZsaCUSjXckWWZ
Mg2u+rlPcYOLLOiczmKLn1hl5IvT6aTMkBoUulJsAM31Vu8U5WvmLGifwgUb
QHuNOQvaxNwkGMxZ0A7mJoFhzoKmMTcJFXMWNIG5SfCYs8Au5iY9wZwFtjA3
6RvFDe4XQG06+8xmM+YmPXQ+n3WyWK1WrAFGJZvNZjQacTt8n2232ziOuRsO
ZZxOJ71b0jQlzYByzvl8PplMmKjiM7xJ8KHiUgunEjzTxISkFJ9RxCimrvT/
QaEogulsQhEMX1NGOv2JRit9prfBYrHgohsqUcqh1HS9XjNt6aHdbqdXn9Vc
qEERQ3FDaSpX3PrjdDopx1gul0xM8IrL5TKbzYgewSv24pHz+dz1WBAITXIV
Pchdg6QzgnIMNilAQ5R7LBaL0WhE9AiDIoYySZ0RyDHQtOv1qugRRdF2u6Vq
6ilFfsV/RQwul6BNeZ6vViu99zabDTU0XyjO73Y7vWqK/FxnR1cUPdI01ftw
vV4TPVymiKH8UK/UcrkkYsAFihiKG3pPKgOhn5hreHXgMr0/dUaLomg+n7NS
3QXn87moRCluEDHguP1+P51Oi9IHb9f26W9eLPhMkiTLMmrX8Igm0Wmakn60
SX9n/bX1N18ul9zwDq/9Sj80v+aqXxP0Vy2ubenvzN3uCInSj+12Ox6PCSC2
KKMoLmbpr6q/LVdJEDACyIsULtbrdfzTZrMhXKBXfgUQzccXi4USbFaAfOZ+
vx8Oh+VyqWBb9DegfIGey/M8y7L5fD4cDpMkUe7N7RIFJWPKKCaTyWAwmM1m
u92O7AJ4poihI0XRQzFkOp3q877dpKm/gNIwRQmlYUWPvr79BYDaNGc5Ho86
anS2fXt7K/IQ5erhLQjRHES/abF7r/IK/aar1SrI3xRoWZGHFGdhKbaq3O/3
PpZVL5eLwoLGr4QqjmPFCn2i/1RewRotoCE6EesQ04E2n8+VySsb0Ud9rn/R
8ejU0aesSeMpokTR5lejVaxQANS/KM2gvAl0RVmHcg8diToei2y/mNoUaUlR
JCk0kfzr2Ysfvtvt9HSaZeh5i4A2HA71eRElsiyj3gs4TgdpkZYURZKC5jhv
Pym2TJ7oK9efeP7itz8oRBT/slwu9ZXb7VbP6+MECsDXNJc5PVFm8lnceP7i
rn8DAAAAAAAAAAAAwFH/B7j1AMs=
           "], {{0, 359}, {360, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
          Selectable->False],
         BaseStyle->"ImageGraphics",
         ImageSizeRaw->{360, 359},
         PlotRange->{{0, 360}, {0, 359}}], 
        TagBox[GridBox[{
           {
            StyleBox["\<\"Infected= 1\"\>",
             StripOnInput->False,
             LineColor->RGBColor[0, 0, 1],
             FrontFaceColor->RGBColor[0, 0, 1],
             BackFaceColor->RGBColor[0, 0, 1],
             GraphicsColor->RGBColor[0, 0, 1],
             FontColor->RGBColor[0, 0, 1]]},
           {
            StyleBox["\<\"Contagious= 1\"\>",
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontColor->RGBColor[1, 0, 0]]},
           {
            StyleBox["\<\"Susceptible= 8\"\>",
             StripOnInput->False,
             LineColor->RGBColor[0., 0.5, 0.],
             FrontFaceColor->RGBColor[0., 0.5, 0.],
             BackFaceColor->RGBColor[0., 0.5, 0.],
             GraphicsColor->RGBColor[0., 0.5, 0.],
             FontColor->RGBColor[0., 0.5, 0.]]},
           {
            StyleBox["\<\"Recovered= 0\"\>",
             StripOnInput->False,
             LineColor->RGBColor[0., 0.5, 0.],
             FrontFaceColor->RGBColor[0., 0.5, 0.],
             BackFaceColor->RGBColor[0., 0.5, 0.],
             GraphicsColor->RGBColor[0., 0.5, 0.],
             FontColor->RGBColor[0., 0.5, 0.]]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Column"]}
      },
      AutoDelete->False,
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Grid"]}], ",", 
   RowBox[{"Clear", " ", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"City A\"\>", "Title",
         StripOnInput->False,
         FontSize->16], ""},
       {
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1: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
ykyexY3Hf+z6OwAAAAAAAAAAAAA89f8+CYCV
           "], {{0, 359}, {360, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
          Selectable->False],
         BaseStyle->"ImageGraphics",
         ImageSizeRaw->{360, 359},
         PlotRange->{{0, 360}, {0, 359}}], 
        TagBox[GridBox[{
           {
            StyleBox["\<\"Infected= 4\"\>",
             StripOnInput->False,
             LineColor->RGBColor[0, 0, 1],
             FrontFaceColor->RGBColor[0, 0, 1],
             BackFaceColor->RGBColor[0, 0, 1],
             GraphicsColor->RGBColor[0, 0, 1],
             FontColor->RGBColor[0, 0, 1]]},
           {
            StyleBox["\<\"Contagious= 1\"\>",
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontColor->RGBColor[1, 0, 0]]},
           {
            StyleBox["\<\"Susceptible= 5\"\>",
             StripOnInput->False,
             LineColor->RGBColor[0., 0.5, 0.],
             FrontFaceColor->RGBColor[0., 0.5, 0.],
             BackFaceColor->RGBColor[0., 0.5, 0.],
             GraphicsColor->RGBColor[0., 0.5, 0.],
             FontColor->RGBColor[0., 0.5, 0.]]},
           {
            StyleBox["\<\"Recovered= 0\"\>",
             StripOnInput->False,
             LineColor->RGBColor[0., 0.5, 0.],
             FrontFaceColor->RGBColor[0., 0.5, 0.],
             BackFaceColor->RGBColor[0., 0.5, 0.],
             GraphicsColor->RGBColor[0., 0.5, 0.],
             FontColor->RGBColor[0., 0.5, 0.]]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Column"]},
       {
        StyleBox["\<\"City B\"\>", "Title",
         StripOnInput->False,
         FontSize->16], ""},
       {
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1: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
           "], {{0, 359}, {360, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
          Selectable->False],
         BaseStyle->"ImageGraphics",
         ImageSizeRaw->{360, 359},
         PlotRange->{{0, 360}, {0, 359}}], 
        TagBox[GridBox[{
           {
            StyleBox["\<\"Infected= 3\"\>",
             StripOnInput->False,
             LineColor->RGBColor[0, 0, 1],
             FrontFaceColor->RGBColor[0, 0, 1],
             BackFaceColor->RGBColor[0, 0, 1],
             GraphicsColor->RGBColor[0, 0, 1],
             FontColor->RGBColor[0, 0, 1]]},
           {
            StyleBox["\<\"Contagious= 1\"\>",
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontColor->RGBColor[1, 0, 0]]},
           {
            StyleBox["\<\"Susceptible= 6\"\>",
             StripOnInput->False,
             LineColor->RGBColor[0., 0.5, 0.],
             FrontFaceColor->RGBColor[0., 0.5, 0.],
             BackFaceColor->RGBColor[0., 0.5, 0.],
             GraphicsColor->RGBColor[0., 0.5, 0.],
             FontColor->RGBColor[0., 0.5, 0.]]},
           {
            StyleBox["\<\"Recovered= 0\"\>",
             StripOnInput->False,
             LineColor->RGBColor[0., 0.5, 0.],
             FrontFaceColor->RGBColor[0., 0.5, 0.],
             BackFaceColor->RGBColor[0., 0.5, 0.],
             GraphicsColor->RGBColor[0., 0.5, 0.],
             FontColor->RGBColor[0., 0.5, 0.]]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Column"]}
      },
      AutoDelete->False,
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Grid"]}], ",", 
   RowBox[{"Clear", " ", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"City A\"\>", "Title",
         StripOnInput->False,
         FontSize->16], ""},
       {
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1: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
TB7Fjfsvtv0bAAAAAAAAAAAAAI76f0v4gJU=
           "], {{0, 359}, {360, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
          Selectable->False],
         BaseStyle->"ImageGraphics",
         ImageSizeRaw->{360, 359},
         PlotRange->{{0, 360}, {0, 359}}], 
        TagBox[GridBox[{
           {
            StyleBox["\<\"Infected= 4\"\>",
             StripOnInput->False,
             LineColor->RGBColor[0, 0, 1],
             FrontFaceColor->RGBColor[0, 0, 1],
             BackFaceColor->RGBColor[0, 0, 1],
             GraphicsColor->RGBColor[0, 0, 1],
             FontColor->RGBColor[0, 0, 1]]},
           {
            StyleBox["\<\"Contagious= 1\"\>",
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontColor->RGBColor[1, 0, 0]]},
           {
            StyleBox["\<\"Susceptible= 5\"\>",
             StripOnInput->False,
             LineColor->RGBColor[0., 0.5, 0.],
             FrontFaceColor->RGBColor[0., 0.5, 0.],
             BackFaceColor->RGBColor[0., 0.5, 0.],
             GraphicsColor->RGBColor[0., 0.5, 0.],
             FontColor->RGBColor[0., 0.5, 0.]]},
           {
            StyleBox["\<\"Recovered= 0\"\>",
             StripOnInput->False,
             LineColor->RGBColor[0., 0.5, 0.],
             FrontFaceColor->RGBColor[0., 0.5, 0.],
             BackFaceColor->RGBColor[0., 0.5, 0.],
             GraphicsColor->RGBColor[0., 0.5, 0.],
             FontColor->RGBColor[0., 0.5, 0.]]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Column"]},
       {
        StyleBox["\<\"City B\"\>", "Title",
         StripOnInput->False,
         FontSize->16], ""},
       {
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1: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
           "], {{0, 359}, {360, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
          Selectable->False],
         BaseStyle->"ImageGraphics",
         ImageSizeRaw->{360, 359},
         PlotRange->{{0, 360}, {0, 359}}], 
        TagBox[GridBox[{
           {
            StyleBox["\<\"Infected= 4\"\>",
             StripOnInput->False,
             LineColor->RGBColor[0, 0, 1],
             FrontFaceColor->RGBColor[0, 0, 1],
             BackFaceColor->RGBColor[0, 0, 1],
             GraphicsColor->RGBColor[0, 0, 1],
             FontColor->RGBColor[0, 0, 1]]},
           {
            StyleBox["\<\"Contagious= 1\"\>",
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontColor->RGBColor[1, 0, 0]]},
           {
            StyleBox["\<\"Susceptible= 5\"\>",
             StripOnInput->False,
             LineColor->RGBColor[0., 0.5, 0.],
             FrontFaceColor->RGBColor[0., 0.5, 0.],
             BackFaceColor->RGBColor[0., 0.5, 0.],
             GraphicsColor->RGBColor[0., 0.5, 0.],
             FontColor->RGBColor[0., 0.5, 0.]]},
           {
            StyleBox["\<\"Recovered= 0\"\>",
             StripOnInput->False,
             LineColor->RGBColor[0., 0.5, 0.],
             FrontFaceColor->RGBColor[0., 0.5, 0.],
             BackFaceColor->RGBColor[0., 0.5, 0.],
             GraphicsColor->RGBColor[0., 0.5, 0.],
             FontColor->RGBColor[0., 0.5, 0.]]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Column"]}
      },
      AutoDelete->False,
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Grid"]}], ",", 
   RowBox[{"Clear", " ", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"City A\"\>", "Title",
         StripOnInput->False,
         FontSize->16], ""},
       {
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1: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
GzbSqoGuviYWSFvQycKnlmbpFDfGpvFluiZqYmnxeDxGUVR3K1CK5zsp9hiY
wiZwwYm6Kuqw1N0KBw3NkfCMJyuit8fZnOtudRc1a+hUmwat4d7IjJyChuJM
R4eBeaApF+P1eh0Oh00JcchhbuZOcUNxpu4md1dTrsemxDfktjGbb2LFftJb
/XdvfOgFmb7+Q/w/Be0cgjwacUkGQeB/cMMrMpMFJvg8YpzCXnT8NJoUtHMI
nPmfcux2u+l0WncrULrPh3Ak817/+nWnpZzpXPiG5ykHj1G64+cqhzKN74KG
PYrYOQRufE45SDa6JjHJwAz+HA8edE/ujyJ2DoEzb1MOko0OykymxOPv0j86
jecoYucQuLlcLkEQ+LYaGMlGl9W0cwjceLgSDslGl9W3cwgc+LYAaTuWGEJu
9e0cAjdepRytXIAdz6t15xA48CflaOJ0XRSr7p1D4MCTlINkA3XvHAIHPqQc
JBswXuwcAge13+trbwA8UffOIXBQ7+3eh4QH/nDaOYTdmupV476r6/U6ZuQf
bjyzcwi7NfkgSZK5An0dlGyceQyPv/T1ziHs1uQJdROCIKh+j5X9fj+ZTCp+
UzTLTzuHsFuTV2p5IEtFFK7Yrckr1VdHqYjCFbs1eajiaWVUROGK3Zo8VPF2
kDkrovv9+8P78fh9kJC+KvKwXm1nsFuTh6pclCPPXmyn08O51qxX2w3s1uSn
2WyW6vZdPvVQ1E9xeEGSfD/RmkGEbcduTX5S0FDoqOCN3DopyjSeXJ2B9Wpb
jd2a/KROymAwKLur4txJeX4pKNarbbXvd2v6y2NhmDRbkQq6Km6dlOcnO9mD
ZzTt9dVuTZ91Ut4Mk2YrUsEYTrdOCuvV4sbzQzgYal6lssecl9hJsQfr1bbd
M1WOyERURCs2n8+TJCnpmzs/SWG9Wtz5i92a7o7YxASN6pXaVXEelcp6tfiM
3a3p9slsaMKZmTGJvi7lPVU5n8/D4dDtNaxXi+8czIEEwwfKN/YljIXIs9AH
69UCDVHSBrJ5HvKyXi3QEHk6FE9Q9yfPkxrWqwUaovAV/F7aydFpvVoANVks
FtvttsBvuPqQ//XPrFcLoFa73W46nRb4DQtYF+jr9WoB1K3Yp7H6Pv1+v5Bv
9Wc/rVcLwA9RFB0LupW/VNwA0BwFLnL+anEDQEMUWOIoaSAZAN9cLpdBQdNL
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
H/edgJU=
           "], {{0, 359}, {360, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
          Selectable->False],
         BaseStyle->"ImageGraphics",
         ImageSizeRaw->{360, 359},
         PlotRange->{{0, 360}, {0, 359}}], 
        TagBox[GridBox[{
           {
            StyleBox["\<\"Infected= 4\"\>",
             StripOnInput->False,
             LineColor->RGBColor[0, 0, 1],
             FrontFaceColor->RGBColor[0, 0, 1],
             BackFaceColor->RGBColor[0, 0, 1],
             GraphicsColor->RGBColor[0, 0, 1],
             FontColor->RGBColor[0, 0, 1]]},
           {
            StyleBox["\<\"Contagious= 3\"\>",
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontColor->RGBColor[1, 0, 0]]},
           {
            StyleBox["\<\"Susceptible= 3\"\>",
             StripOnInput->False,
             LineColor->RGBColor[0., 0.5, 0.],
             FrontFaceColor->RGBColor[0., 0.5, 0.],
             BackFaceColor->RGBColor[0., 0.5, 0.],
             GraphicsColor->RGBColor[0., 0.5, 0.],
             FontColor->RGBColor[0., 0.5, 0.]]},
           {
            StyleBox["\<\"Recovered= 0\"\>",
             StripOnInput->False,
             LineColor->RGBColor[0., 0.5, 0.],
             FrontFaceColor->RGBColor[0., 0.5, 0.],
             BackFaceColor->RGBColor[0., 0.5, 0.],
             GraphicsColor->RGBColor[0., 0.5, 0.],
             FontColor->RGBColor[0., 0.5, 0.]]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Column"]},
       {
        StyleBox["\<\"City B\"\>", "Title",
         StripOnInput->False,
         FontSize->16], ""},
       {
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1: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
Zso/
           "], {{0, 359}, {360, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
          Selectable->False],
         BaseStyle->"ImageGraphics",
         ImageSizeRaw->{360, 359},
         PlotRange->{{0, 360}, {0, 359}}], 
        TagBox[GridBox[{
           {
            StyleBox["\<\"Infected= 3\"\>",
             StripOnInput->False,
             LineColor->RGBColor[0, 0, 1],
             FrontFaceColor->RGBColor[0, 0, 1],
             BackFaceColor->RGBColor[0, 0, 1],
             GraphicsColor->RGBColor[0, 0, 1],
             FontColor->RGBColor[0, 0, 1]]},
           {
            StyleBox["\<\"Contagious= 0\"\>",
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontColor->RGBColor[1, 0, 0]]},
           {
            StyleBox["\<\"Susceptible= 5\"\>",
             StripOnInput->False,
             LineColor->RGBColor[0., 0.5, 0.],
             FrontFaceColor->RGBColor[0., 0.5, 0.],
             BackFaceColor->RGBColor[0., 0.5, 0.],
             GraphicsColor->RGBColor[0., 0.5, 0.],
             FontColor->RGBColor[0., 0.5, 0.]]},
           {
            StyleBox["\<\"Recovered= 2\"\>",
             StripOnInput->False,
             LineColor->RGBColor[0., 0.5, 0.],
             FrontFaceColor->RGBColor[0., 0.5, 0.],
             BackFaceColor->RGBColor[0., 0.5, 0.],
             GraphicsColor->RGBColor[0., 0.5, 0.],
             FontColor->RGBColor[0., 0.5, 0.]]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Column"]}
      },
      AutoDelete->False,
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Grid"]}], ",", 
   RowBox[{"Clear", " ", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"City A\"\>", "Title",
         StripOnInput->False,
         FontSize->16], ""},
       {
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1: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
z1/s+jcAAAAAAAAAAAAAPPW/T9I62w==
           "], {{0, 359}, {360, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
          Selectable->False],
         BaseStyle->"ImageGraphics",
         ImageSizeRaw->{360, 359},
         PlotRange->{{0, 360}, {0, 359}}], 
        TagBox[GridBox[{
           {
            StyleBox["\<\"Infected= 5\"\>",
             StripOnInput->False,
             LineColor->RGBColor[0, 0, 1],
             FrontFaceColor->RGBColor[0, 0, 1],
             BackFaceColor->RGBColor[0, 0, 1],
             GraphicsColor->RGBColor[0, 0, 1],
             FontColor->RGBColor[0, 0, 1]]},
           {
            StyleBox["\<\"Contagious= 4\"\>",
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontColor->RGBColor[1, 0, 0]]},
           {
            StyleBox["\<\"Susceptible= 1\"\>",
             StripOnInput->False,
             LineColor->RGBColor[0., 0.5, 0.],
             FrontFaceColor->RGBColor[0., 0.5, 0.],
             BackFaceColor->RGBColor[0., 0.5, 0.],
             GraphicsColor->RGBColor[0., 0.5, 0.],
             FontColor->RGBColor[0., 0.5, 0.]]},
           {
            StyleBox["\<\"Recovered= 0\"\>",
             StripOnInput->False,
             LineColor->RGBColor[0., 0.5, 0.],
             FrontFaceColor->RGBColor[0., 0.5, 0.],
             BackFaceColor->RGBColor[0., 0.5, 0.],
             GraphicsColor->RGBColor[0., 0.5, 0.],
             FontColor->RGBColor[0., 0.5, 0.]]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Column"]},
       {
        StyleBox["\<\"City B\"\>", "Title",
         StripOnInput->False,
         FontSize->16], ""},
       {
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1:eJzt3S+Q8lqax/HeOyuQiBGRrItERrKrkKkZg2SmandxS81s1TIKiUQikZFI
ahQS2RKJjEQis7/uU7eLe+k/JOTP+fP9FPNW33fe7j5NJ0+e5+TJOf/21//5
03/98vLy8vee/vjTX/7v3//2t7/848//qv/4j3/873/+9Q/64L//5eVlpv+9
fVwAAAAAAAAAAAAAKOl0Oh1+9fr62vVwALTtfD7r9N/tdstfpWk6ejccDl8+
E8fx6Fdf/Rv9vfkH+mofX1nfRd9LYafrHxrAoz7iw2w20xmt018n+GAw+PTs
fjKX0OeaL3IfkW6/73Q61d9nWaZ/eb1ea/xhAVSgy7o5Z8fjsU5Snaof8WGz
2XR+3Td5zna71Xgmk4nG1uv1oijSByaSHI/HDocHBEJnok5D5RJJkphqwkSJ
/X6v/6vr0T0kz3MFExNJzE+hekcfK9AxkQLURRfl9Xqt+KArtZIKpf06xXy6
UitcKPdQMFQA6ff7yp0UVRRbuh4X4BidSqvVSvm8Lse6KM/nc9UjulJ3Pa7G
XS4X5U6KGx8/+2Kx8ClIAvXSKaPLrtIJ5RW68up84ZqriKH4qeihPES1jGq0
EIIn8KPT6cSp8aP7oMpkCAKkcKFsPH5HKl6KKeIUPQaDgSo4Agi8dxsu9AH9
Uc84n8/r9ZoAAl8pzd5sNoSLhtwGEKUiFHpwnQoQU5XPZjPCRdMUQFT06d2e
TCb7/b7r4QDlfCQYSZJst1v6q1uWZZnpoSX9gBN0ySPBsMRt+sHsB+ykI1PH
p65xJBi2Ufphnt6lJQb2OB6PaZrqyNTx2fVY8CUFDfPg/26363osCJo5FJMk
4VB0hX5lJsjzK0P7dNSZixepr4tUVCp6mKKy67EgCIoYulrpqCNiuM5MYit6
bDYbpqTQEF2bdIwpYjA57xNFj9lspt/ser0meqBGuh6ZtS9cWR4HZeV5Pp/P
oyhaLpdEDzzpeDwmSaLrEREjBJfLRXFD1wjaTVGNDiGzIh8Pq4ZGucf4HRcL
lLLdbuM4VnnS9UDQGaUcOgZWqxVlC350Op2UY0ynU55rgCLGYrEYDoeULfiK
ChMdJLrEUJjgli4lqlnSNOVSgt/Z7XYmKe16ILAURwhucTXBg8hIUbxXr8vl
kuoVpTADFjJdMhQxaPJBNeaOGw/HBWW9Xo9GI9bVwTNUtqi8nc/nXHq8x+8a
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
           "], {{0, 359}, {360, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
          Selectable->False],
         BaseStyle->"ImageGraphics",
         ImageSizeRaw->{360, 359},
         PlotRange->{{0, 360}, {0, 359}}], 
        TagBox[GridBox[{
           {
            StyleBox["\<\"Infected= 5\"\>",
             StripOnInput->False,
             LineColor->RGBColor[0, 0, 1],
             FrontFaceColor->RGBColor[0, 0, 1],
             BackFaceColor->RGBColor[0, 0, 1],
             GraphicsColor->RGBColor[0, 0, 1],
             FontColor->RGBColor[0, 0, 1]]},
           {
            StyleBox["\<\"Contagious= 3\"\>",
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontColor->RGBColor[1, 0, 0]]},
           {
            StyleBox["\<\"Susceptible= 0\"\>",
             StripOnInput->False,
             LineColor->RGBColor[0., 0.5, 0.],
             FrontFaceColor->RGBColor[0., 0.5, 0.],
             BackFaceColor->RGBColor[0., 0.5, 0.],
             GraphicsColor->RGBColor[0., 0.5, 0.],
             FontColor->RGBColor[0., 0.5, 0.]]},
           {
            StyleBox["\<\"Recovered= 2\"\>",
             StripOnInput->False,
             LineColor->RGBColor[0., 0.5, 0.],
             FrontFaceColor->RGBColor[0., 0.5, 0.],
             BackFaceColor->RGBColor[0., 0.5, 0.],
             GraphicsColor->RGBColor[0., 0.5, 0.],
             FontColor->RGBColor[0., 0.5, 0.]]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Column"]}
      },
      AutoDelete->False,
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Grid"]}], ",", 
   RowBox[{"Clear", " ", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"City A\"\>", "Title",
         StripOnInput->False,
         FontSize->16], ""},
       {
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1: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
AAAAAAB46n8BwmyAlQ==
           "], {{0, 359}, {360, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
          Selectable->False],
         BaseStyle->"ImageGraphics",
         ImageSizeRaw->{360, 359},
         PlotRange->{{0, 360}, {0, 359}}], 
        TagBox[GridBox[{
           {
            StyleBox["\<\"Infected= 6\"\>",
             StripOnInput->False,
             LineColor->RGBColor[0, 0, 1],
             FrontFaceColor->RGBColor[0, 0, 1],
             BackFaceColor->RGBColor[0, 0, 1],
             GraphicsColor->RGBColor[0, 0, 1],
             FontColor->RGBColor[0, 0, 1]]},
           {
            StyleBox["\<\"Contagious= 4\"\>",
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontColor->RGBColor[1, 0, 0]]},
           {
            StyleBox["\<\"Susceptible= 0\"\>",
             StripOnInput->False,
             LineColor->RGBColor[0., 0.5, 0.],
             FrontFaceColor->RGBColor[0., 0.5, 0.],
             BackFaceColor->RGBColor[0., 0.5, 0.],
             GraphicsColor->RGBColor[0., 0.5, 0.],
             FontColor->RGBColor[0., 0.5, 0.]]},
           {
            StyleBox["\<\"Recovered= 0\"\>",
             StripOnInput->False,
             LineColor->RGBColor[0., 0.5, 0.],
             FrontFaceColor->RGBColor[0., 0.5, 0.],
             BackFaceColor->RGBColor[0., 0.5, 0.],
             GraphicsColor->RGBColor[0., 0.5, 0.],
             FontColor->RGBColor[0., 0.5, 0.]]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Column"]},
       {
        StyleBox["\<\"City B\"\>", "Title",
         StripOnInput->False,
         FontSize->16], ""},
       {
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1:eJzt3S+Q6lyax/Hed1YgESMiWReJjGRHIVOzBslM1e7ilprdqmUUEolEIpFI
ahQSeSUSGYlsmf11n327eF+6+5KQ5Pz7foq51e+d291pOnnyPCfPOedf/vpf
f/6PX15eXv67pz/+/Jf//de//e0vf/+3f9Z//Onv//Pvf/2DPvjPf3p5mel/
bx+XAAAAAAAAAAAAACo6n8/HX/348cP24QDo2uVy0eW/3++Xv8rzfPRuOBy+
fCZN09Gvvvo3+nvzD/TVPr6yvou+l8KO7R8awKM+4sNsNtMVrctfF/hgMPj0
6n4yl9Dnmi9yH5Fuv+90OtXf73Y7/cvX19cGf1gANei2bq7Z8Xisi1SX6kd8
2Gw21u/7Js/Zbrc6nslkomPr9XpJkugDE0lOp5PFwwMioStRl6FyiSzLTDVh
osThcND/ZfvoHlIUhYKJiSTmp1C9o48V6BhIAZqim/J6vVZ80J1aSYXSfl1i
Id2pFS6UeygYKoD0+33lTooqii22jwvwjC6l1WqlfF63Y92U5/O56hHdqW0f
V+uu16tyJ8WNj599sViEFCSBZumS0W1X6YTyCt15db1wz1XEUPxU9FAeolpG
NVoMwRP4qfP5zKXxU/dBlcEQREjhQtl4+o5UvBJTxCl6DAYDVXAEEATvNlzo
A/qjnnG5XNbrNQEEoVKavdlsCBctuQ0gSkUo9OA7FSCmKp/NZoSLtimAqOjT
uz2ZTA6Hg+3DAar5SDCyLNtut/RXd2y325keWtIPeEG3PBIMR9ymH4x+wE06
M3V+6h5HguEapR9m9i4tMXDH6XTK81xnps5P28eCLylomIn/+/3e9rEgauZU
zLKMU9EX+pWZIM+vDN3TWWduXqS+PlJRqehhikrbx4IoKGLobqWzjojhOzOI
reix2WwYkkJLdG/SOaaIweB8SBQ9ZrOZfrPr9ZrogQbpfmTWvvBleRxUVRTF
fD5PkmS5XBI98KTT6ZRlme5HRIwYXK9XxQ3dI2g3RT06hcyKfExWjY1yj/E7
bhaoZLvdpmmq8sT2gcAapRw6B1arFWULfup8PivHmE6nzGuAIsZisRgOh5Qt
+IoKE50kusVQmOCWbiWqWfI851aC39nv9yYptX0gcBRnCG5xN8GDyEhRvlev
y+WS6hWVMAIWM90yFDFo8kE95okbk+Oisl6vR6MR6+rgGSpbVN7O53NuPcHj
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
           "], {{0, 359}, {360, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
          Selectable->False],
         BaseStyle->"ImageGraphics",
         ImageSizeRaw->{360, 359},
         PlotRange->{{0, 360}, {0, 359}}], 
        TagBox[GridBox[{
           {
            StyleBox["\<\"Infected= 4\"\>",
             StripOnInput->False,
             LineColor->RGBColor[0, 0, 1],
             FrontFaceColor->RGBColor[0, 0, 1],
             BackFaceColor->RGBColor[0, 0, 1],
             GraphicsColor->RGBColor[0, 0, 1],
             FontColor->RGBColor[0, 0, 1]]},
           {
            StyleBox["\<\"Contagious= 4\"\>",
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontColor->RGBColor[1, 0, 0]]},
           {
            StyleBox["\<\"Susceptible= 0\"\>",
             StripOnInput->False,
             LineColor->RGBColor[0., 0.5, 0.],
             FrontFaceColor->RGBColor[0., 0.5, 0.],
             BackFaceColor->RGBColor[0., 0.5, 0.],
             GraphicsColor->RGBColor[0., 0.5, 0.],
             FontColor->RGBColor[0., 0.5, 0.]]},
           {
            StyleBox["\<\"Recovered= 2\"\>",
             StripOnInput->False,
             LineColor->RGBColor[0., 0.5, 0.],
             FrontFaceColor->RGBColor[0., 0.5, 0.],
             BackFaceColor->RGBColor[0., 0.5, 0.],
             GraphicsColor->RGBColor[0., 0.5, 0.],
             FontColor->RGBColor[0., 0.5, 0.]]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Column"]}
      },
      AutoDelete->False,
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Grid"]}], ",", 
   RowBox[{"Clear", " ", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"City A\"\>", "Title",
         StripOnInput->False,
         FontSize->16], ""},
       {
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1: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
fwIAAAAAAAAAAADAUf8LKQeAlQ==
           "], {{0, 359}, {360, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
          Selectable->False],
         BaseStyle->"ImageGraphics",
         ImageSizeRaw->{360, 359},
         PlotRange->{{0, 360}, {0, 359}}], 
        TagBox[GridBox[{
           {
            StyleBox["\<\"Infected= 3\"\>",
             StripOnInput->False,
             LineColor->RGBColor[0, 0, 1],
             FrontFaceColor->RGBColor[0, 0, 1],
             BackFaceColor->RGBColor[0, 0, 1],
             GraphicsColor->RGBColor[0, 0, 1],
             FontColor->RGBColor[0, 0, 1]]},
           {
            StyleBox["\<\"Contagious= 3\"\>",
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontColor->RGBColor[1, 0, 0]]},
           {
            StyleBox["\<\"Susceptible= 0\"\>",
             StripOnInput->False,
             LineColor->RGBColor[0., 0.5, 0.],
             FrontFaceColor->RGBColor[0., 0.5, 0.],
             BackFaceColor->RGBColor[0., 0.5, 0.],
             GraphicsColor->RGBColor[0., 0.5, 0.],
             FontColor->RGBColor[0., 0.5, 0.]]},
           {
            StyleBox["\<\"Recovered= 4\"\>",
             StripOnInput->False,
             LineColor->RGBColor[0., 0.5, 0.],
             FrontFaceColor->RGBColor[0., 0.5, 0.],
             BackFaceColor->RGBColor[0., 0.5, 0.],
             GraphicsColor->RGBColor[0., 0.5, 0.],
             FontColor->RGBColor[0., 0.5, 0.]]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Column"]},
       {
        StyleBox["\<\"City B\"\>", "Title",
         StripOnInput->False,
         FontSize->16], ""},
       {
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1: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
OCwv3qDS0Dc1T7JFDVar1aLkHdfyPVOoNPTZq5NsUY8KC41aPoOeSkOgaRUG
KyxfjphKQ6BpFVbhsHzlDSoNgaadz+fBYFDqWxRnFG2aaU4NqDQEmlahiKuW
vd6aQ6Uh0II3XT9l2F9kTqUh0LSycaBsnOkElYZAo8puu+ZE3CioNASaVHac
05W4UVBpCDSmVNyo8PzFElQaAjUKJG4AqBFxAw1ioUZPlVoslLiBZ7FQo9dK
zTexf9EeWIGFGn1XKm68uKssgsBCjQEgbqBmLNQYAOIG6sRCjWEoFTeOx2Oi
uwnwCAs1hqFU3OB5Cr7BQo1hIG6gTizUGAbiBurEQo1hoF4UdWKhxjCUihvX
67WnGwTwCAs1hsHjefSe2Rf7ZbEcFaOoiPTnolhkRXYtLEvyWagxDMQN+52K
U1Ikn157cREfC8vmerBQYwDKbi1dYQt7vGJbbHtF7+srUHlI1838PRZq9F3Z
9cktX8/cM8o0vg0a5qVeTNeN/T0WavRar9e7ljmCSZIcmQTdlkfdk/tXVESX
wrI8kIUa/VV2vMLyfZd8khVZmScTb4vC4rkeLNTokQr1GJbvD+uTeTEvFTdG
BXM90IbT6RQrdSxjNpttNpuG2oNbz3dSzKtfMNcDbagwL375oZnm4HeeHBG9
fZ2Lc9ethv92u12apqW+Zb1ez+fzhtqDW8NiWCpoKM5YVwYGH2232+l0Wupb
siybTCYNtQe3psW0VNxQnOm6yQjCarValFxwiaV7WrMu1qXixqxgrgfaUGGQ
M8/zKIoaag9u5UUeFdHznZQfBXM90IbxeLwvv6Y0peateb6Ew7pSc/irWtF4
2SkteMUzoxxJkTAiitZUm9yapulut6u9MXhkW2z7Rf9R0FgUC4IGWlN58a75
fL5er2tvD76QF7kSj9sns3ERT4qJdZPo4bvKm6FQwtGtQ3EgwUBXKhRvGBWq
xQD4YbFYrFarCt9YYVYLAD+8MrxZdtUOAH5QzqDModr3snoPEKAXdzRgNj0Q
oB8/fgxf2PKGRypAgJQtzF7Y8ma/34/H4xrbA8B+L9ZuXS6XPjuJA4GpNqPt
VhRFeZ7X1R4A9nv9qn898gBwSC1raLDQKBCUWgrFK09vAeCiWia0Xq/Xfr9P
1SgQiLoW3mEBHyAQNeYJLMQBBKLGcQkm1AOBqPE5CNVfQCDqrbuotrIxALfU
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
pf4Pv77KPw==
           "], {{0, 359}, {360, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
          Selectable->False],
         BaseStyle->"ImageGraphics",
         ImageSizeRaw->{360, 359},
         PlotRange->{{0, 360}, {0, 359}}], 
        TagBox[GridBox[{
           {
            StyleBox["\<\"Infected= 5\"\>",
             StripOnInput->False,
             LineColor->RGBColor[0, 0, 1],
             FrontFaceColor->RGBColor[0, 0, 1],
             BackFaceColor->RGBColor[0, 0, 1],
             GraphicsColor->RGBColor[0, 0, 1],
             FontColor->RGBColor[0, 0, 1]]},
           {
            StyleBox["\<\"Contagious= 4\"\>",
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontColor->RGBColor[1, 0, 0]]},
           {
            StyleBox["\<\"Susceptible= 0\"\>",
             StripOnInput->False,
             LineColor->RGBColor[0., 0.5, 0.],
             FrontFaceColor->RGBColor[0., 0.5, 0.],
             BackFaceColor->RGBColor[0., 0.5, 0.],
             GraphicsColor->RGBColor[0., 0.5, 0.],
             FontColor->RGBColor[0., 0.5, 0.]]},
           {
            StyleBox["\<\"Recovered= 1\"\>",
             StripOnInput->False,
             LineColor->RGBColor[0., 0.5, 0.],
             FrontFaceColor->RGBColor[0., 0.5, 0.],
             BackFaceColor->RGBColor[0., 0.5, 0.],
             GraphicsColor->RGBColor[0., 0.5, 0.],
             FontColor->RGBColor[0., 0.5, 0.]]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Column"]}
      },
      AutoDelete->False,
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Grid"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.5509212787315683`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", " ", "[", "Pops", "]"}]], "Input",
 CellChangeTimes->{{3.550921281686737*^9, 3.5509212858859777`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Initialization"}]], "Input",
 CellChangeTimes->{{3.550921521748468*^9, 3.55092152790382*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"Initialization is an option for Dynamic, DynamicModule, \
Manipulate, and related constructs that specifies an expression to be \
evaluated when the construct is first used or displayed. \"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Initialization"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.550921528588859*^9},
 CellTags->"Info3550907128-5554006"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Pane", "[", 
  RowBox[{
   RowBox[{"{", "\"\<Adjust Options and Run Simulation\>\"", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"500", ",", "1000"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.550922000236836*^9, 3.5509220142736387`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.5509222085467505`*^9, 3.5509222120189495`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ContentArea"}]], "Input",
 CellChangeTimes->{{3.5509222592116485`*^9, 3.5509222621278152`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Information", "::", "notfound"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Symbol \[NoBreak]\\!\\(\\\"ContentArea\\\"\\)\[NoBreak] \
not found. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/notfound\\\", ButtonNote -> \
\\\"Information::notfound\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5509222626508455`*^9}]
}, Open  ]]
},
WindowSize->{1350, 633},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
ShowSelection->True,
FrontEndVersion->"8.0 for Microsoft Windows (64-bit) (October 6, 2011)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info3550837636-7782294"->{
  Cell[86702, 1736, 2524, 40, 214, "Print",
   CellTags->"Info3550837636-7782294"]},
 "Info3550856300-3619482"->{
  Cell[89382, 1785, 881, 17, 81, "Print",
   CellTags->"Info3550856300-3619482"]},
 "Info3550907128-5554006"->{
  Cell[234479, 4484, 509, 12, 42, "Print",
   CellTags->"Info3550907128-5554006"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info3550837636-7782294", 236333, 4540},
 {"Info3550856300-3619482", 236447, 4543},
 {"Info3550907128-5554006", 236559, 4546}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 921, 18, 92, "Input"],
Cell[CellGroupData[{
Cell[1503, 42, 63819, 1242, 3492, "Input"],
Cell[65325, 1286, 20557, 418, 478, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85919, 1709, 222, 4, 52, "Input"],
Cell[86144, 1715, 183, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86364, 1723, 103, 1, 31, "Input"],
Cell[86470, 1726, 74, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86581, 1732, 118, 2, 31, "Input"],
Cell[86702, 1736, 2524, 40, 214, "Print",
 CellTags->"Info3550837636-7782294"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89263, 1781, 116, 2, 31, "Input"],
Cell[89382, 1785, 881, 17, 81, "Print",
 CellTags->"Info3550856300-3619482"]
}, Open  ]],
Cell[90278, 1805, 100, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[90403, 1810, 126, 2, 31, "Input"],
Cell[90532, 1814, 143648, 2657, 497, "Output"]
}, Open  ]],
Cell[234195, 4474, 134, 2, 31, "Input"],
Cell[CellGroupData[{
Cell[234354, 4480, 122, 2, 31, "Input"],
Cell[234479, 4484, 509, 12, 42, "Print",
 CellTags->"Info3550907128-5554006"]
}, Open  ]],
Cell[235003, 4499, 266, 6, 31, "Input"],
Cell[235272, 4507, 96, 1, 31, InheritFromParent],
Cell[CellGroupData[{
Cell[235393, 4512, 124, 2, 31, "Input"],
Cell[235520, 4516, 470, 10, 21, "Message"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
