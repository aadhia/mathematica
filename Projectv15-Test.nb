(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    459129,       8318]
NotebookOptionsPosition[    455083,       8187]
NotebookOutlinePosition[    456737,       8238]
CellTagsIndexPosition[    456349,       8226]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"To", " ", "Do"}], "\[IndentingNewLine]", "-", " ", 
    RowBox[{
    "Include", " ", "a", " ", "True", " ", "False", " ", "loop", " ", "for", 
     " ", "days"}], "\[IndentingNewLine]", "-", " ", 
    RowBox[{"make", " ", "disc", " ", "represent", " ", "10", " ", "people"}],
     "\[IndentingNewLine]", "-", 
    RowBox[{"To", " ", "put", " ", "play", " ", "button"}]}], ",", " ", 
   RowBox[{
   "make", " ", "the", " ", "day", " ", "slider", " ", 
    "disappear"}]}]}]], "Input",
 CellChangeTimes->{{3.5503546811293025`*^9, 3.5503547150482426`*^9}, {
  3.550404195920215*^9, 3.550404214558281*^9}, {3.5504196615433216`*^9, 
  3.5504196638294525`*^9}, {3.5505776386273403`*^9, 3.5505776389273405`*^9}, {
  3.550698464155487*^9, 3.5506984838446865`*^9}, {3.550698551890537*^9, 
  3.550698558995547*^9}, {3.5508515219213057`*^9, 3.5508515372511826`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Refresh", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{"moving", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"w", "=", "1"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Pops", "=", 
          RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"PopA", " ", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"ToString", "[", "k", "]"}], "<>", "\"\<A\>\""}], ",", 
              RowBox[{"RandomReal", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1.8"}], "}"}], "]"}], ",", 
              RowBox[{"RandomReal", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"2", "Pi"}]}], "}"}], "]"}], ",", "\"\<u\>\"", ",", 
              "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "1", ",", "TotalPop"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"PopB", " ", "=", " ", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"ToString", "[", "k", "]"}], "<>", "\"\<B\>\""}], ",", 
              RowBox[{"RandomReal", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1.8"}], "}"}], "]"}], ",", 
              RowBox[{"RandomReal", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"2", "Pi"}]}], "}"}], "]"}], ",", "\"\<u\>\"", ",", 
              "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "1", ",", "TotalPop"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", "=", "1"}], ",", 
           RowBox[{"j", "<", 
            RowBox[{"InfectedA", "+", "1"}]}], ",", 
           RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{
             "PopA", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}], 
             "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], "=", 
            "\"\<i\>\""}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", "=", "1"}], ",", 
           RowBox[{"j", "<", 
            RowBox[{"InfectedB", "+", "1"}]}], ",", 
           RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{
             "PopB", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}], 
             "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], "=", 
            "\"\<i\>\""}]}], "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"k", "=", "1"}], ",", 
           RowBox[{"k", "<", 
            RowBox[{"Days", "+", "1"}]}], ",", 
           RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Pops", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"Pops", ",", "\[IndentingNewLine]", 
               RowBox[{"Grid", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"\"\<\>\"", ",", "\[IndentingNewLine]", 
                    RowBox[{"Image", "[", "\[IndentingNewLine]", 
                    RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
                    RowBox[{"Join", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"Circle", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", "2"}], "]"}], "}"}], 
                    "}"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "\"\<u\>\""}], "||", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "\"\<r\>\""}]}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"Darker", "[", 
                    RowBox[{"Green", ",", ".5"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "\"\<i\>\""}], ",",
                     "\[IndentingNewLine]", "Red", ",", "Blue"}], "]"}]}], 
                    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Disk", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"PopA", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "*", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "]"}]}]}], "}"}], ",", ".1"}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", 
                    RowBox[{"Length", "[", "PopA", "]"}]}], "}"}]}], 
                    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
                    "]"}], "\[IndentingNewLine]", "]"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Column", "[", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<City A\>\"", ",", "\"\<Title\>\"", ",", "20"}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"\"\<Latent       \>\"", "<>", "\"\<=\>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Cases", "[", 
                    RowBox[{"PopA", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "_", ",", "_", ",", "_", ",", "\"\<n\>\"", ",", "_"}], 
                    "}"}]}], "]"}], "]"}], "]"}]}], ",", "Blue", ",", 
                    "Bold"}], "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"\"\<Contagious   \>\"", "<>", "\"\<=\>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Cases", "[", 
                    RowBox[{"PopA", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "_", ",", "_", ",", "_", ",", "\"\<i\>\"", ",", "_"}], 
                    "}"}]}], "]"}], "]"}], "]"}]}], ",", "Red", ",", "Bold"}],
                     "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"\"\<Susceptible  \>\"", "<>", "\"\<=\>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Cases", "[", 
                    RowBox[{"PopA", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "_", ",", "_", ",", "_", ",", "\"\<u\>\"", ",", "_"}], 
                    "}"}]}], "]"}], "]"}], "]"}]}], ",", 
                    RowBox[{"Darker", "[", 
                    RowBox[{"Green", ",", ".5"}], "]"}], ",", "Bold"}], "]"}],
                     ",", "\[IndentingNewLine]", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"\"\<Recovered    \>\"", "<>", "\"\<=\>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Cases", "[", 
                    RowBox[{"PopA", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "_", ",", "_", ",", "_", ",", "\"\<r\>\"", ",", "_"}], 
                    "}"}]}], "]"}], "]"}], "]"}]}], ",", 
                    RowBox[{"Darker", "[", 
                    RowBox[{"Green", ",", ".5"}], "]"}], ",", "Bold"}], 
                    "]"}]}], "}"}], "\[IndentingNewLine]", "]"}]}], "}"}], 
                   ",", "\[IndentingNewLine]", 
                   RowBox[{"{", 
                    RowBox[{"\"\<\>\"", ",", "\[IndentingNewLine]", 
                    RowBox[{"Image", "[", "\[IndentingNewLine]", 
                    RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
                    RowBox[{"Join", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"Circle", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", "2"}], "]"}], "}"}], 
                    "}"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "\"\<u\>\""}], "||", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "\"\<r\>\""}]}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"Darker", "[", 
                    RowBox[{"Green", ",", ".5"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "\"\<i\>\""}], ",",
                     "\[IndentingNewLine]", "Red", ",", "Blue"}], "]"}]}], 
                    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Disk", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "*", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "]"}]}]}], "}"}], ",", ".1"}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", 
                    RowBox[{"Length", "[", "PopB", "]"}]}], "}"}]}], 
                    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
                    "]"}], "\[IndentingNewLine]", "]"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Column", "[", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<City B\>\"", ",", "\"\<Title\>\"", ",", "20"}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"\"\<Latent       \>\"", "<>", "\"\<=\>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Cases", "[", 
                    RowBox[{"PopB", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "_", ",", "_", ",", "_", ",", "\"\<n\>\"", ",", "_"}], 
                    "}"}]}], "]"}], "]"}], "]"}]}], ",", "Blue", ",", 
                    "Bold"}], "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"\"\<Contagious   \>\"", "<>", "\"\<=\>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Cases", "[", 
                    RowBox[{"PopB", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "_", ",", "_", ",", "_", ",", "\"\<i\>\"", ",", "_"}], 
                    "}"}]}], "]"}], "]"}], "]"}]}], ",", "Red", ",", "Bold"}],
                     "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"\"\<Susceptible  \>\"", "<>", "\"\<=\>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Cases", "[", 
                    RowBox[{"PopB", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "_", ",", "_", ",", "_", ",", "\"\<u\>\"", ",", "_"}], 
                    "}"}]}], "]"}], "]"}], "]"}]}], ",", 
                    RowBox[{"Darker", "[", 
                    RowBox[{"Green", ",", ".5"}], "]"}], ",", "Bold"}], "]"}],
                     ",", "\[IndentingNewLine]", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"\"\<Recovered    \>\"", "<>", "\"\<=\>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Cases", "[", 
                    RowBox[{"PopB", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "_", ",", "_", ",", "_", ",", "\"\<r\>\"", ",", "_"}], 
                    "}"}]}], "]"}], "]"}], "]"}]}], ",", 
                    RowBox[{"Darker", "[", 
                    RowBox[{"Green", ",", ".5"}], "]"}], ",", "Bold"}], 
                    "]"}]}], "}"}], "\[IndentingNewLine]", "]"}]}], 
                    "\[IndentingNewLine]", "}"}]}], "}"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Spacings", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"10", ",", "2"}], "}"}], ",", "1.8"}], "}"}]}]}], 
                "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
              "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"i", "=", "1"}], ",", 
              RowBox[{"i", "<", 
               RowBox[{
                RowBox[{"Length", "[", "PopA", "]"}], "+", "1"}]}], ",", 
              RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Which", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "Recovery"}], "&&", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "\"\<i\>\""}]}], 
                 ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}], "=", "0"}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "=", "\"\<r\>\""}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}], "\[Equal]", 
                   RowBox[{"Incubation", "-", "1"}]}], "&&", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "\"\<n\>\""}]}], 
                 ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}], "=", "0"}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "=", "\"\<i\>\""}]}]}], 
                "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
             "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"i", "=", "1"}], ",", 
              RowBox[{"i", "<", 
               RowBox[{
                RowBox[{"Length", "[", "PopB", "]"}], "+", "1"}]}], ",", 
              RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Which", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "Recovery"}], "&&", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "\"\<i\>\""}]}], 
                 ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}], "=", "0"}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "=", "\"\<r\>\""}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}], "\[Equal]", 
                   RowBox[{"Incubation", "-", "1"}]}], "&&", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "\"\<n\>\""}]}], 
                 ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}], "=", "0"}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "=", "\"\<i\>\""}]}]}], 
                "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
             "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"i", "=", "1"}], ",", 
              RowBox[{"i", "<", 
               RowBox[{
                RowBox[{"Length", "[", "PopA", "]"}], "+", "1"}]}], ",", 
              RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                   "PopA", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                   "\[RightDoubleBracket]"}], "\[Equal]", "\"\<i\>\""}], "||", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                   "PopA", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                   "\[RightDoubleBracket]"}], "\[Equal]", " ", 
                  "\"\<n\>\""}]}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                  "PopA", "\[LeftDoubleBracket]", "i", 
                   "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "5", 
                  "\[RightDoubleBracket]"}], "=", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                   "PopA", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "5", 
                   "\[RightDoubleBracket]"}], "+", "1"}]}]}], "]"}]}], 
             "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"i", "=", "1"}], ",", 
              RowBox[{"i", "<", 
               RowBox[{
                RowBox[{"Length", "[", "PopB", "]"}], "+", "1"}]}], ",", 
              RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                   "PopB", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                   "\[RightDoubleBracket]"}], "\[Equal]", "\"\<i\>\""}], "||", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                   "PopB", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                   "\[RightDoubleBracket]"}], "\[Equal]", " ", 
                  "\"\<n\>\""}]}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                  "PopB", "\[LeftDoubleBracket]", "i", 
                   "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "5", 
                  "\[RightDoubleBracket]"}], "=", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                   "PopB", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "5", 
                   "\[RightDoubleBracket]"}], "+", "1"}]}]}], "]"}]}], 
             "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"TotalPeopleA", " ", "=", " ", 
             RowBox[{"Length", "[", "PopA", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"PeopleMetA", " ", "=", " ", 
             RowBox[{"Random", "[", 
              RowBox[{"Integer", ",", 
               RowBox[{"{", 
                RowBox[{"10", ",", "20"}], "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"TotalPeopleB", " ", "=", " ", 
             RowBox[{"Length", "[", "PopB", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"PeopleMetB", " ", "=", " ", 
             RowBox[{"Random", "[", 
              RowBox[{"Integer", ",", 
               RowBox[{"{", 
                RowBox[{"10", ",", "20"}], "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"j", "=", "1"}], ",", 
               RowBox[{"j", "<", 
                RowBox[{"TotalPeopleA", "+", "1"}]}], ",", " ", 
               RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                   "PopA", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                   "\[RightDoubleBracket]"}], "=", "\"\<i\>\""}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"For", "[", 
                  RowBox[{
                   RowBox[{"i", "=", "0"}], ",", 
                   RowBox[{"i", "<", "PeopleMetA"}], ",", 
                   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"ContactA", " ", "=", 
                    RowBox[{"Random", "[", 
                    RowBox[{"Integer", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "TotalPeopleA"}], "}"}]}], "]"}]}], ";",
                     "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "ContactA", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "\"\<i\>\""}], ",",
                     "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[NotEqual]", "\"\<i\>\""}], "&&", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[NotEqual]", "\"\<n\>\""}], "&&", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[NotEqual]", "\"\<r\>\""}], "&&", 
                    RowBox[{
                    RowBox[{"Random", "[", 
                    RowBox[{"Integer", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "100"}], "}"}]}], "]"}], "<", " ", 
                    "Infectious"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "=", "\"\<n\>\""}]}], "]"}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "ContactA", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[NotEqual]", "\"\<n\>\""}], "&&", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "ContactA", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[NotEqual]", "\"\<r\>\""}], "&&", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "\"\<i\>\""}], "&&", 
                    RowBox[{
                    RowBox[{"Random", "[", 
                    RowBox[{"Real", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "]"}], "<", 
                    "Infectious"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopA", "\[LeftDoubleBracket]", "ContactA", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "=", "\"\<n\>\""}]}], "]"}]}], 
                    "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
                  "]"}]}], "\[IndentingNewLine]", "]"}]}], 
              "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"j", "=", "1"}], ",", 
               RowBox[{"j", "<", 
                RowBox[{"TotalPeopleB", "+", "1"}]}], ",", " ", 
               RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                   "PopB", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                   "\[RightDoubleBracket]"}], "=", "\"\<i\>\""}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"For", "[", 
                  RowBox[{
                   RowBox[{"i", "=", "0"}], ",", 
                   RowBox[{"i", "<", "PeopleMetB"}], ",", 
                   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"ContactB", " ", "=", 
                    RowBox[{"Random", "[", 
                    RowBox[{"Integer", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "TotalPeopleB"}], "}"}]}], "]"}]}], ";",
                     "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "ContactB", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "\"\<i\>\""}], ",",
                     "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[NotEqual]", "\"\<i\>\""}], "&&", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[NotEqual]", "\"\<n\>\""}], "&&", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[NotEqual]", "\"\<r\>\""}], "&&", 
                    RowBox[{
                    RowBox[{"Random", "[", 
                    RowBox[{"Integer", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "100"}], "}"}]}], "]"}], "<", " ", 
                    "Infectious"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "=", "\"\<n\>\""}]}], "]"}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "ContactB", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[NotEqual]", "\"\<n\>\""}], "&&", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "ContactB", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[NotEqual]", "\"\<r\>\""}], "&&", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "\"\<i\>\""}], "&&", 
                    RowBox[{
                    RowBox[{"Random", "[", 
                    RowBox[{"Real", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "]"}], "<", " ", 
                    "Infectious"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PopB", "\[LeftDoubleBracket]", "ContactB", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "=", "\"\<n\>\""}]}], "]"}]}], 
                    "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
                  "]"}]}], "\[IndentingNewLine]", "]"}]}], 
              "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"ToA", "=", 
             RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"ToB", "=", 
             RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"i", "=", "0"}], ",", 
              RowBox[{
               RowBox[{"Length", "[", "ToA", "]"}], "<", "Transfer"}], ",", 
              RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"j", "=", 
                RowBox[{"RandomChoice", "[", "PopB", "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"ToA", "=", 
                RowBox[{"Append", "[", 
                 RowBox[{"ToA", ",", "j"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"PopB", "=", 
                RowBox[{"Complement", "[", 
                 RowBox[{"PopB", ",", "ToA"}], "]"}]}]}]}], 
             "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"i", "=", "0"}], ",", 
              RowBox[{
               RowBox[{"Length", "[", "ToB", "]"}], "<", "Transfer"}], ",", 
              RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"j", "=", 
                RowBox[{"RandomChoice", "[", "PopA", "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"ToB", "=", 
                RowBox[{"Append", "[", 
                 RowBox[{"ToB", ",", "j"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"PopA", "=", 
                RowBox[{"Complement", "[", 
                 RowBox[{"PopA", ",", "ToB"}], "]"}]}]}]}], 
             "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"PopA", "=", 
             RowBox[{"Join", "[", 
              RowBox[{"PopA", ",", "ToA"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"PopB", "=", 
             RowBox[{"Join", "[", 
              RowBox[{"PopB", ",", "ToB"}], "]"}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"moving", "=", "False"}], ";"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{
      "Pops", "\[LeftDoubleBracket]", "w", "\[RightDoubleBracket]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"UpdateInterval", "\[Rule]", " ", 
      RowBox[{"If", "[", 
       RowBox[{"moving", ",", "2", ",", "Infinity"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"moving", ",", "False", ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"running", ",", "False", ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"Pops", ",", 
     RowBox[{"Pane", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<\>\"", ",", "\[IndentingNewLine]", 
             RowBox[{"Image", "[", "\[IndentingNewLine]", 
              RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"Circle", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}], ",", "2"}], "]"}], "}"}], 
               "\[IndentingNewLine]", "]"}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Column", "[", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<City A\>\"", ",", "\"\<Title\>\"", ",", "20"}], 
                 "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"\"\<Latent       \>\"", "<>", "\"\<=\>\""}], ",", 
                  "Blue", ",", "Bold"}], "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"\"\<Contagious   \>\"", "<>", "\"\<=\>\""}], ",", 
                  "Red", ",", "Bold"}], "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"\"\<Susceptible  \>\"", "<>", "\"\<=\>\""}], ",", 
                  RowBox[{"Darker", "[", 
                   RowBox[{"Green", ",", ".5"}], "]"}], ",", "Bold"}], "]"}], 
                ",", "\[IndentingNewLine]", 
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"\"\<Recovered    \>\"", "<>", "\"\<=\>\""}], ",", 
                  RowBox[{"Darker", "[", 
                   RowBox[{"Green", ",", ".5"}], "]"}], ",", "Bold"}], 
                 "]"}]}], "}"}], "\[IndentingNewLine]", "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"\"\<\>\"", ",", "\[IndentingNewLine]", 
             RowBox[{"Image", "[", "\[IndentingNewLine]", 
              RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"Circle", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}], ",", "2"}], "]"}], "}"}], 
               "\[IndentingNewLine]", "]"}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Column", "[", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<City B\>\"", ",", "\"\<Title\>\"", ",", "20"}], 
                 "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"\"\<Latent       \>\"", "<>", "\"\<=\>\""}], ",", 
                  "Blue", ",", "Bold"}], "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"\"\<Contagious   \>\"", "<>", "\"\<=\>\""}], ",", 
                  "Red", ",", "Bold"}], "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"\"\<Susceptible  \>\"", "<>", "\"\<=\>\""}], ",", 
                  RowBox[{"Darker", "[", 
                   RowBox[{"Green", ",", ".5"}], "]"}], ",", "Bold"}], "]"}], 
                ",", "\[IndentingNewLine]", 
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"\"\<Recovered    \>\"", "<>", "\"\<=\>\""}], ",", 
                  RowBox[{"Darker", "[", 
                   RowBox[{"Green", ",", ".5"}], "]"}], ",", "Bold"}], 
                 "]"}]}], "}"}], "\[IndentingNewLine]", "]"}]}], 
            "\[IndentingNewLine]", "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Spacings", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"10", ",", "2"}], "}"}], ",", "1.8"}], "}"}]}]}], 
        "\[IndentingNewLine]", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"200", ",", "400"}], "}"}]}], "\[IndentingNewLine]", "]"}], 
     ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"InfectedA", ",", "1", ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"InfectedB", ",", "1", ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"Days", ",", "7", ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"Recovery", ",", "3", ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"Incubation", ",", "3", ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"Infectious", ",", "10", ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"Transfer", ",", "0", ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"w", ",", "1", ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"TotalPop", ",", "10", ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"i", ",", "0", ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"j", ",", "0", ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Column", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Dynamic", "@", 
        RowBox[{"Button", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"running", ",", "\"\<reset\>\"", ",", "\"\<run\>\""}], 
            "]"}], "<>", "\"\< simulation\>\""}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"!", "running"}], ",", 
              RowBox[{"moving", "=", "True"}]}], "]"}], ",", 
            RowBox[{"running", "=", 
             RowBox[{"!", "running"}]}]}], "}"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", " ", "225"}], ",", " ", 
          RowBox[{"Alignment", "\[Rule]", " ", "Center"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Dynamic", "@", 
        RowBox[{"If", "[", 
         RowBox[{"running", ",", "\[IndentingNewLine]", 
          RowBox[{"Column", "[", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Column", "[", 
               RowBox[{
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Spacer", "[", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "10"}], "}"}], "]"}], ",", 
                  "\[IndentingNewLine]", "\"\<day (morning)\>\"", ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Control", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"w", ",", "1", ",", "\"\<\>\""}], "}"}], ",", "1",
                     ",", "Days", ",", "1", ",", 
                    RowBox[{
                    "Appearance", "\[Rule]", " ", "\"\<Labeled\>\""}]}], 
                    "}"}], "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
                "Left"}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Column", "[", 
               RowBox[{
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Spacer", "[", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "10"}], "}"}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Row", "[", 
                   RowBox[{"{", 
                    RowBox[{"\"\<duration of simulation = \>\"", ",", 
                    RowBox[{"ToString", "[", "Days", "]"}]}], "}"}], "]"}], 
                  ",", "\[IndentingNewLine]", 
                  RowBox[{"Spacer", "[", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "15"}], "}"}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Row", "[", 
                   RowBox[{"{", 
                    RowBox[{"\"\<city population = \>\"", ",", 
                    RowBox[{"ToString", "[", "TotalPop", "]"}]}], "}"}], 
                   "]"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"Spacer", "[", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "15"}], "}"}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Row", "[", 
                   RowBox[{"{", 
                    RowBox[{"\"\<initial infected cases, City A = \>\"", ",", 
                    RowBox[{"ToString", "[", "InfectedA", "]"}]}], "}"}], 
                   "]"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"Spacer", "[", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "15"}], "}"}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Row", "[", 
                   RowBox[{"{", 
                    RowBox[{"\"\<initial infected cases, City B = \>\"", ",", 
                    RowBox[{"ToString", "[", "InfectedB", "]"}]}], "}"}], 
                   "]"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"Spacer", "[", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "15"}], "}"}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Row", "[", 
                   RowBox[{"{", 
                    RowBox[{"\"\<travellers/day = \>\"", ",", 
                    RowBox[{"ToString", "[", "Transfer", "]"}]}], "}"}], 
                   "]"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"Spacer", "[", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "15"}], "}"}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Row", "[", 
                   RowBox[{"{", 
                    RowBox[{"\"\<chance of infection on contact = \>\"", ",", 
                    RowBox[{"ToString", "[", "Infectious", "]"}]}], "}"}], 
                   "]"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"Spacer", "[", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "15"}], "}"}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Row", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    "\"\<latency before contagious state [days] = \>\"", ",", 
                    RowBox[{"ToString", "[", "Incubation", "]"}]}], "}"}], 
                   "]"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"Spacer", "[", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "15"}], "}"}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Row", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    "\"\<duration of contagious state [days] = \>\"", ",", 
                    RowBox[{"ToString", "[", "Recovery", "]"}]}], "}"}], 
                   "]"}]}], "\[IndentingNewLine]", "}"}], ",", "Right"}], 
               "]"}]}], "\[IndentingNewLine]", "}"}], ",", "Center"}], "]"}], 
          "\[IndentingNewLine]", ",", "\"\<\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Dynamic", "@", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", "running"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Column", "[", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
             "\"\<duration of simulation [days]\>\"", ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Days", ",", "7", ",", "\"\<\>\""}], "}"}], ",", 
                 "1", ",", "21", ",", "1", ",", "Slider", ",", 
                 RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                "}"}], "]"}], ",", "\[IndentingNewLine]", 
              "\"\<city population\>\"", ",", "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"TotalPop", ",", "10", ",", "\"\<\>\""}], "}"}], 
                 ",", "1", ",", "1000", ",", "1", ",", "Slider", ",", 
                 RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                "}"}], "]"}], ",", "\[IndentingNewLine]", 
              "\"\<initial infected cases, City A\>\"", ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"InfectedA", ",", "1", ",", "\"\<\>\""}], "}"}], 
                 ",", "0", ",", "TotalPop", ",", "1", ",", "Slider", ",", 
                 RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                "}"}], "]"}], ",", "\[IndentingNewLine]", 
              "\"\<initial infected cases, City B\>\"", ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"InfectedB", ",", "1", ",", "\"\<\>\""}], "}"}], 
                 ",", "0", ",", "TotalPop", ",", "1", ",", "Slider", ",", 
                 RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                "}"}], "]"}], ",", "\[IndentingNewLine]", 
              "\"\<travellers/day\>\"", ",", "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Transfer", ",", "0", ",", "\"\<\>\""}], "}"}], ",",
                  "0", ",", "TotalPop", ",", "1", ",", "Slider", ",", 
                 RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                "}"}], "]"}], ",", "\[IndentingNewLine]", 
              "\"\<chance of infection on contact\>\"", ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Infectious", ",", ".1", ",", "\"\<\>\""}], "}"}], 
                 ",", "0", ",", "1", ",", ".01", ",", "Slider", ",", 
                 RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                "}"}], "]"}], ",", "\[IndentingNewLine]", 
              "\"\<latency before contagious state [days]\>\"", ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Incubation", ",", "3", ",", "\"\<\>\""}], "}"}], 
                 ",", "1", ",", "7", ",", "1", ",", "Slider", ",", 
                 RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                "}"}], "]"}], ",", "\[IndentingNewLine]", 
              "\"\<duration of contagious state [days]\>\"", ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Recovery", ",", "3", ",", "\"\<\>\""}], "}"}], ",",
                  "1", ",", "7", ",", "1", ",", "Slider", ",", 
                 RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                "}"}], "]"}]}], "\[IndentingNewLine]", "}"}], ",", "Left", 
            ",", ".45"}], "]"}], "\[IndentingNewLine]", ",", "\"\<\>\""}], 
         "]"}]}]}], "\[IndentingNewLine]", "}"}], ",", "Center"}], "]"}], ",",
    "\[IndentingNewLine]", 
   RowBox[{"ControlPlacement", "\[Rule]", "Left"}], ",", 
   RowBox[{"ContentSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"340", ",", "400"}], "}"}]}], ",", 
   RowBox[{"FrameMargins", "\[Rule]", " ", "0"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.551008604494242*^9, 3.5510086064092445`*^9}, {
   3.551008794402975*^9, 3.551008799712982*^9}, {3.551008842277155*^9, 
   3.5510088789442663`*^9}, {3.5510090135906296`*^9, 
   3.5510090307956533`*^9}, {3.551009258056733*^9, 3.5510093332522497`*^9}, {
   3.5510093803543744`*^9, 3.55100938666644*^9}, {3.551009419717662*^9, 
   3.551009463681841*^9}, {3.5510095047869563`*^9, 3.5510095202760363`*^9}, {
   3.551009583357298*^9, 3.551010004591241*^9}, {3.5510100366783447`*^9, 
   3.551010224314186*^9}, {3.551010324984621*^9, 3.5510103363637543`*^9}, 
   3.55101038536345*^9, {3.5510105273281994`*^9, 3.5510105379082146`*^9}, {
   3.551010576412386*^9, 3.551010586312399*^9}, {3.5510106216295676`*^9, 
   3.5510106382387056`*^9}, {3.551010690282896*^9, 3.5510107836684337`*^9}, {
   3.5510117292902546`*^9, 3.5510117351352625`*^9}, {3.5510118090124216`*^9, 
   3.551011821352439*^9}, {3.5510119013175507`*^9, 3.551011990384734*^9}, {
   3.551012051376876*^9, 3.551012100906945*^9}, {3.551012270153351*^9, 
   3.551012426475626*^9}, {3.5510126527961245`*^9, 3.551012696726186*^9}, {
   3.551012736846242*^9, 3.5510127483962584`*^9}, {3.5510162672332983`*^9, 
   3.551016307544504*^9}, {3.5510200174469986`*^9, 3.5510201396509886`*^9}, {
   3.551020170123731*^9, 3.5510201821774206`*^9}, {3.551020518164638*^9, 
   3.5510205186226645`*^9}, {3.551020623389657*^9, 3.551020654650445*^9}, {
   3.5510207170280123`*^9, 3.5510207305957885`*^9}, {3.5510207765234156`*^9, 
   3.5510208401250534`*^9}, {3.5510208866897163`*^9, 3.551020909616028*^9}, {
   3.551020985030341*^9, 3.5510209884875393`*^9}, {3.551021023891564*^9, 
   3.5510211479596605`*^9}, {3.551021195836399*^9, 3.551021250350517*^9}, {
   3.55102131247707*^9, 3.551021348928155*^9}, {3.5510213937927213`*^9, 
   3.5510214399873633`*^9}, {3.5510214701090865`*^9, 3.551021528163407*^9}, {
   3.551021615044376*^9, 3.5510216977331057`*^9}, {3.551022311745225*^9, 
   3.5510223467692285`*^9}, {3.55102238614548*^9, 3.5510224112889185`*^9}, {
   3.5510224508241796`*^9, 3.5510224509521875`*^9}, {3.5510224828900137`*^9, 
   3.551022580455594*^9}, {3.551022736550523*^9, 3.551022743381913*^9}, {
   3.551022798643074*^9, 3.551022810352744*^9}, {3.5510228865191*^9, 
   3.5510229120655613`*^9}, {3.551023104425564*^9, 3.5510231229546237`*^9}, {
   3.551023168591234*^9, 3.551023179081834*^9}, {3.5510232504799175`*^9, 
   3.5510234793910103`*^9}, {3.5510235129809318`*^9, 
   3.5510235300259066`*^9}, {3.551023631981738*^9, 3.551023638558114*^9}, {
   3.5510237260631194`*^9, 3.5510237314084253`*^9}, {3.5510239754833856`*^9, 
   3.5510239794756136`*^9}, {3.551024101476592*^9, 3.551024131901332*^9}, {
   3.551024225311675*^9, 3.5510242532162704`*^9}, {3.5510243327748213`*^9, 
   3.5510243479536896`*^9}, {3.551024382825684*^9, 3.551024414671506*^9}, {
   3.5510245433418655`*^9, 3.5510245563206077`*^9}, {3.551024619064196*^9, 
   3.5510246666159163`*^9}, {3.551024833392455*^9, 3.5510248614980626`*^9}, {
   3.5510248978211403`*^9, 3.551024899300225*^9}, {3.5510250455315886`*^9, 
   3.5510250839007835`*^9}, {3.551025137911873*^9, 3.5510251834884796`*^9}, {
   3.5510253066625247`*^9, 3.5510253568293943`*^9}, 3.5511223792410116`*^9, {
   3.5511226088011417`*^9, 3.5511226611661367`*^9}, {3.5511226951610813`*^9, 
   3.551122695459098*^9}, {3.551122732962243*^9, 3.5511227735445642`*^9}, 
   3.551122809325611*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`Days$$ = 7, $CellContext`i$$ = 
    0, $CellContext`Incubation$$ = 3, $CellContext`InfectedA$$ = 
    1, $CellContext`InfectedB$$ = 1, $CellContext`Infectious$$ = 
    0.1, $CellContext`j$$ = 1001, $CellContext`moving$$ = 
    False, $CellContext`Pops$$ = {
     Grid[{{"", 
        Image[CompressedData["
1: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
uOegF6Ojo93d3VIfAWkAslTkUYAwF3xoiTVxYcXSodBw0vZHkWmHVy68HLqy
LyoyTk52cmlMfw3ktsgzF4kB+aNsVFBCzFBJwvLi8vtH7x+5MsIKAfwpfLjj
/B3O70GWnMPLf1dSw+EGxflliLXKTi5dFnFE9PGfuUgMyCtlg0FKjlnQdWHZ
COozdnjXd+5yfg9SzDy8wOTc8+oe2fZTToibX4Zbq7B/zQ1OSnTfibtrvFI2
GKREmc9104a4/aXtOfIorhtat/rEav55rSuvyRpx+Z+IKedaok6ZchvhrnGV
WM6HuDTzx3ywRtAw/fcopnUMiJ/XOR3pIjW/DLdW4UWrR53UE8/iEI97Woa4
ypHHJafO6Zlpbz2K8wbnZVb+hs/rnEp+8fllKmv1sTcfe/LtJ8VvKfi3xsSz
OMSDnvYhqHLUZirFxQ8vVvLgUeSQndf+K04cCs4vU1+rjUcaM/8mMEZUYsQi
8FbZYACVo6mpKTPv3dtj1yiDw07Ro+hQW2M/IdfuKcH5ZbrWKudlmTBG0uCz
ssEgkvpeTenKUmSHnaJHcWdpp9ufkFMjhVGkm1w452fD2Q2K33jPyD1hpWXl
sZXXH7+++WizrjBxJjxXNhhESu2kHEc2+96bJiwVRY8ifNZtSSn8hLy7pzjd
5Ezk/DAlDa6clnaoEiYWQVdX1/i4tEPYPkRUDqnU2aqxa9Tnr60+vtrttoWf
kGv31IKDC/a/tx+k34qjK1pPt64bWge/6I7zd+x4eceak2sMpfXufmW3bANz
XRBskuMDZmZm2traMgMrUqmzuXYn6qXDOVCMX/jhF5w/hHxRsEstIkycCf89
G2Fkdi3+/38mkzrLkuVuPHmj9td68+mbg3+D0rjiyApD68fP3lZShHPz+D8f
d34bVUlEmJiP4eHh3l58a2UnEGkFVpFPnZUdq5fJoA1yEAszZxblIiubT3hT
bqvpbzhxQx6LBAUpGybm7axyGZQNr6pRRIAwrASj2HrzB+JtkM2FezLnrZvm
/EFVJzOr0LSfwgEb6p1/f+fKH6744JWVnbcoTtkwMQec+e+ew1w7Mo0qQbzF
hKHzFIwU/jwv09z/3n7FTgLhCk07zurmo81h5dOTELC5kkmRMLEIrE2ZNwGj
dbta+uendWnIdUokh43F7CRGDltPt4b741349QXTJkP4/K3WlxKh4ERaPvLl
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
EAgEAoFAIBAIBAKBQCAQCARP8f8AihAKxA==
         "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
        Column[{
          Style["City A", "Title", 20], 
          Style["Latent       =0", 
           RGBColor[0, 0, 1], Bold], 
          Style["Contagious   =1", 
           RGBColor[1, 0, 0], Bold], 
          Style["Susceptible  =999", 
           RGBColor[0., 0.5, 0.], Bold], 
          Style["Recovered    =0", 
           RGBColor[0., 0.5, 0.], Bold]}]}, {"", 
        Image[CompressedData["
1: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
f9Sv/oVvfcH5l1XkNcevcX4PfhI9hN2yRzQMvndUqogY8a6q5+ZbxrIIv/zm
l6semnpZE3uY4SSlO79yp2zas1cMJGHPN3qc34xvRA9ht+8RDYPvHRU5QKtc
wbjh9SLZevvO7/NNIWEzJasQLWva9NympuEmkQvmXshdvHQxc/KTz6e+/xR7
MuQ9jlK8feh/WWMuPKJhpM5H4B+gUVcwIvFDPG8HTuElwx51sQA1gF8EwQoz
xZ/JysLKlkOYqcQ+c8vzW5iv5pv/+s0VR1Y4vx/fKNg+NAzFic9akNo7PXqA
cjobIBI/tr20TfCVoLTf9uJtzn/oWCbN9Mycv9cQfcvO8oTi7UMDoLvo6IXU
SKbUzgayiR+yXbBuK3kqNxijWX+ZLtlzRdDQTnxwItNeHUGKtw8N4CT8GguN
41pkXRBrR9dKvd7/gYxVMz1rzFlhgYHxW/pZyfnNmKZsLRsoGx0dHZVKRctu
VcTExERvb6+WS8n6vtadWCf1+tZCq4ct6cKsCi5TyZsgm4eb73313ipbzzdP
uF4iatn8UTYWtQox2cQPRIL3qZ+cEnylKy9cOChPJW+45xaA75nPdEqtbC2b
V8oGg0Y5JpX4Ya4QBgyE8YvjTtZDx8mO4GnU9omplxuKG2IjU3zPfEafMKKW
zStlg0GvKBNP/ECXwokEiOE1sr619WPrVx1bpb4qAi8HJS3IMikyxRDrmfd5
4FoscbVsrhLL+dArzQQTP1R6IvGPIXQ7F7jI0z94uumgUKZWEtceX8u8HD/6
9x951U8vK5TV4U1PPNfIhycfRmwoqbinTWi3nkQSP3T1RIoeQ4qBDMEMTw6Z
tU7xFDSrIlOpyErIG5dbrjHoqR3mDKhjPz721Pefiu0KiyuE4cOHbCv4mj7c
RnYpWy6aFRGNyC33VtlgAJWjra1Nb947p2AtsGQRhTB8+HD0rDy60ofbyDSl
ykW1hLxBz7zx5I2mv5dsbrnPygaD3tR3kYI1pkXw/SF7X9ubpK5EAZLKkzqI
P3j+D5zfQ6YppdJrCXnDymkttBr9UrK55Z4rGwwaS+2kCtYWE/whf/bKn936
4q2x74p1vNOQWfs0NxtaSqXPSkBWNre8p6dnakrO1eMEulQOcXszaskyP6e4
usJAQ2ZdcfT9UUORUHGVPishb6nc8tQW4v5gfn4+l8spBlbQDXwCyKori9nx
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
QCAQCAQCgUAgEAgEAoFAIBAIBALBU/w/ZIqRLw==
         "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
        Column[{
          Style["City B", "Title", 20], 
          Style["Latent       =0", 
           RGBColor[0, 0, 1], Bold], 
          Style["Contagious   =1", 
           RGBColor[1, 0, 0], Bold], 
          Style["Susceptible  =999", 
           RGBColor[0., 0.5, 0.], Bold], 
          Style["Recovered    =0", 
           RGBColor[0., 0.5, 0.], Bold]}]}}, Spacings -> {{10, 2}, 1.8}], 
     Grid[{{"", 
        Image[CompressedData["
1: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
Y0f41SXsSsKGLTZVri3GZFentSmU+/bt28Skpo+Ojq6QK0lTkKdVmqSKlUZj
Qw13EwqxzG1Yw+Yw7Oq0NoUS66+gzF0qAtVcNHUdmwfBc1kr0ptL2CAaN8+h
76laalMoCfkYuPmwGpincKT6g7nCkM1akd5cwgZx717z5jn0PVVLbQrl6urq
CNhNGLTb7bm5OeLvysHEIktdx9hnkmat+DFPJDIrZOG1a873VC3rUigJdfH3
tmD107LQNxfNuo6xqWLqd/nszfXSS+FXnbDpvH7d+Z769FPTTVeBxcXFVquF
uqnZ2dkp2MKMMOzjh1Ub4MmAhfL44/7e+NWryWOPhV94wkYTNa+5Khuhdk/Z
Nc+cn5+fhI9jsLCwMAHXdwSN65jgo/BcfghvXFqPCu2pyXNIBcXx45U5Hrls
hNpwDLaZf5LMzMxMG0+SVeBv3WOIRnTLgTcuWalCG1ZlW2ETCRidCQUQnJzr
6+uDoBT5R/z7MX3jYGAyJpgJe4onT5ZkPtMSCep6aJAxPj6+hL84T6o5FvFn
iWfTdcB+7O8Pf0vChjJra5ATCbLZCOTu/WWgJY1jS1p4EP8I+Gy6DrxrbG8f
oTBHZWvYJBKAfCDXZVSDVtzaarUWFxcJH7RFzF7HbH6dpKcKufjTn1p9HCQD
rS6jGuTmXVNTU7NgNQSBiZcjSB/g9OFLeqowHhpWX2KcFeRhKPwpHCjUprVc
vOj77WTz66R6rqd49qzpX9686bAdqCXruolu33/o5A0FQrYYM/RZK54jL9n8
upgtKaELgiioTRO6cOHBylTr9sSJ8LddpHE+xvT09MzMDGHXEqpaHKKYteIn
8lKaX/d3fxd+AQgjZNYQiFMjNTY9bNyb2K4ddBDiRx4iL3fulHzv6qqMWBKW
M2sIxOn+Ms5vB50BNAfUJk7B071HD5v4kVN7oao1QZzniDASpoZAtJnPBikZ
lhMNOKvpS0Hu65XCnZej9Htj8GxIplnMTA2BODOftd1EU3z99deX9COYtXAb
UiH39cpBH3mh8cKF8sfLPhGGQEluj5mpIRBn5rOZNABtoU1rR7aFpaWl8fFx
8sdrQOvrVQrlwX7iCc4nXKpvODJSRBR0E5UhEGfms5k0sMzd2tjYGEA1CjAH
ua+XBuxvqqjnuKjZB6Xro4/Cr6guIFhwx48HvoesIRCDVZu7N7PKEVpFWxaD
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
7k4FaGm2rUl+XQz1s11GWLd//OPDt9BNrqSsUmE+rsgkM5w3NfE3v8H9fZ2Z
j4houARiJBNqX2ezbc3z64rBWbgO3N7Nm/EG+2Jmzn/VUFdSdvGQlQrzzHDG
9Nc9e3BdRwzM/CDh11IgxrVgky5AGhDy6xRKD5Gwxa2NY4NqSUpvPrsGbGYg
ojLDGdNfldzmMvO3lI2hoaF12IYRYGFhYQJkOAogDUCWmjwKEOaGD620Ji6r
WAYUGk0cNFZ1eDXCy8GVfZFgnJzq5GJMf03ltskzN4gBxaNsJDQh5qgk4fDh
5NVXO1lGqhAgnsKH558Pfw9Yag6v+F1JBw9azi+jrFV1cnFZxDnRp3/mBjGg
qJQNBZwc86DrwrIx1Gf88MUXw98DirWHFyy/W7eaMQCFNL+MuFZh/7obnFTq
vjN210SlbCjgRFnMddOOePVqkzyKZ84kJ0/WnNdceU3eSMv/JEw5Z4k61cpt
vLsmVGK5HghpFo/54I2gYcbvUazqGFA8rxs60gUzv4y4VuFF20ed7BPPCkDE
Pf0CoXI0ccnZc20tXo/irl31lb/Z87qhkt94fpnVWn377eS99xC3lP6bMfGs
AETQ0ztMVY7eTKX4/PPOb4/fo6ihOq/jV5w0NJtfxrBWjxyp/5vUGLGJERsg
WmVDAVSOgYGB+rz3aI9dp0wPO0uPYkBtTf2ERrunsEWglmtV87IcGCNViFnZ
UDBKfe+mdGUU1WFn6VG8fj3wT2iokaJo0k0um/Nz7pztN7788jal5fjxTv/z
Y8fYwsR1iFzZUDAqtUM5jnz2vXdNWCqWHkX4bNiSUvgJTXdPabrJucj5UUoa
XLkq7dAmTGyA8fHxJYJD2DuMVA5U6mzX2DX289dOngy8beEnNNo9tWdPp48Q
SL+jRztTAs+c6fyi559Prl1LTp1yldZ78ya6gTkTTJvkRICNjY2RkZH6wAoq
dbbR7kReBp/g9uMfh38IzaJhl1oHWkH8no0s6rsWf/d3iNRZlSz3xBP8r/Wp
px7+G5RGOIkcrZ84e1uhCOfm734X/ja6koQwsRZzc3Ntm9bKIWDUCizBp85i
x+rVMm2DnMbC3JlFjcjK1hPeVNhq+scfb2SRoCGxYWLdxloHZSOqahQTUAwr
wyg2b/5A8SbdhXtq5627pr2TWZ1f/lM4YEP94Q/JN99E4ZXFzls0J1+vYN38
97jhsB0Zo0pQVOQcnadgpOjnebnmhx/adhLIVmj6cVYfO7ZN+YwkBOyuZNIk
TGwAb1PmXcBt3S5L//yqLg2NTonU0CSJUcOhoW398T791LnJkD1/u/Wl5Mgx
5blZ7tAiKC19zAES6coVq6WrCX41Ivgb1tIfGUnOnnX7FXA0pJLqlVfCP3DF
nTtdDfLDDh0rQ4T18gSMjY0tLy87/ALlWc3m9cF6fvrp+ndUW6rciODvX/91
+HsQctE61yL4jAMugL4EppanH5L1rFr3R+rE099/v3PeZd2Jw8Mdi/vChfBr
rG/reHr33fC3IaxiNsRvwjfftNwBYQcq8WJ6enpmZibAF5P7I9U2r47Bq69u
xp1vX2hJOJv+9V9xH7GTG0tLS+Pj4zZXiApRNDY0L1U2qTuLpHmXIytbaMPs
2URoF0YF7LJLly5F2NHLBo0oyuugoZ2shJHw7t1ty4nQLowKUOmn+dLG4kEz
6vIiyRBwR0f1xfv3N8CH7IE5hYFwBpHisGtrayMjI13gDi0CNCjQo0L+tNoh
fb2QIfC3f+vqyl99hRuq1ZXMKQzYp0GNw4IyDyq93faIF8Eiy4ZD+hrdycpw
WX79tVFqCraUJrfgl5e7pPyN4EHKKgzYLCBSHNa0jLTJCCAY5+frE4NVAhjW
SIlqRIsJ0zy32iD17du2C76hw2RzzyE7sN6EaX8PpdO+9BLu4/jy1fBqvBds
bGzAz1zjSKY1whdfILofEKxROFWbYtfn8tz0QWpscV/pgndt9xUHRt+8ibsC
/PzPPusIyexzePLJTn7OX/1VZ+/7FH342ZRdGUOpwsrKytjYmA8JCaequZ55
8CB6GqNSzmEDxj+u+u5dneFcDFKjtAXNgveQrv/GGw9v3lLc/cd/hGzDiG/5
1dyiVxp8ODpACGNjB9imQKlyHnkU5vx5ygPkGoPuIV0/jdPZiLuwE+gMpkIX
nmv3uzWKcO7o8LCX09Mq8pQPctMnpjHozlWybKcsmrgLm7eDn4nQI26NItw6
OjxEVLOnVczBR7zVvA32ZT4KrsV4NuXJRNydPt2ZKJFG5EEl8/M6Tp58+G/q
gLaecmsU4dDR8frrzhdA9rSKueje3Gquym+xG4P+AK5P81zCVbS1zOo+7Qa0
9Zpbowgnjg6UO5TGnHIe7SSp5583Wp+G+S2JxYLHqmTY1iLFDO2iuHv88fCt
Gq07evWmW6MIZkeHH0NVDXtNgXLHwdIdHt62MY8dc3KTZ85sU8WrRoOZ+APt
p3tgVTLLhKsUSokC6QEPOZIyQAvbvGfdGkUwOzpeeMHHqy+2rCe449Kz25tH
TikPWXvkyhXTdouWtUVYlez4cdzfFzO0XQxfs6dFR68ed2sUweboaLf9LYBc
7SGc2iY6cGn0IWa3akrL6R7YCOnf/z3u9nIJq2GDqub3iYG4NYpgcHSAHPY5
2CjriDM3jnIGjgLNrXruXKcdYjYQcPasW/vdskwbpZLZZHDF3AyBGhMXt0YV
bMWpZ6U06+Ay/+rSUxu7R+AsziktyuRx/QTgJ6NGqBcDNDdu1H/LqVPJ/fvJ
t9/SM7giNE9K79MYXpttNg3wWFqtFrFHR5ASeOWTwX518dRmSer2+QRqR6hr
fAuPP27U2xC+4re/Nb2frNs25mYIJPfy2trapUuXNlhHQHYZQHSAXKWMfvBf
Ap86uFh6wdkndft/AlV3YuJbADP/zJn6rzDx/ORcRtE2Q8BnkidbQmNsbMxf
HWhjAXIVRAfaaexfNYUlrfTww4dxH6yK4Jt4Oc6fr3ROBlHOi8qhuW/BsAvB
k0/qLlhMWI3TSMFnkidbewGERqMnKPkERcb694NlE4axrPppJlmOVTZCEE9g
1l1Dk6LmLFbNx/McqqimZuAzyZMt3Xt8fNzt7KGuA8hYEB0Im64Rocx0/WuO
nvX15Nq1+gyloo0Q6gnASeozUyJbNR/5Srh40XT1lqEZ/XjjA0haeHSmPuSY
K0RyfOop3co31/NziyrUE4Cj3/MRr99N8awEchmypGrYATFHJtoKkVJq4hHk
kG6oJ+B/Rq0+Ay2SlWBRhnxvC7TPChRM012a2M2yuDZsQrpNfAJkajLQInkO
1I3fHVOhY4Cp+PUQuH/uOeYL5lRuy5BuzKkLvNTPNQv+HEgh160bX5iYmCB8
UFAKkMAgh+v/Lh7b1pA5ldt+vFfjngCNtdXoATu+kkKuyZZV3mq1JCmUF6aD
tqNt2KJZZilYxns17gnQqA/T+8/ioDbvUpBMckdQWehGoqPYsKWK6mj4zW9C
rv+sys013quqQ9evf90lIqW2Gt1PiEfZI3bNuxJC1oEAAxAdoHXMzc0hPgPv
9Ntva9rchc1MzqrcLsZ75Va1uVCNmbU/3MMPpNojOYB5IkLDA9rtNj1KVXo0
BM9MTlVubAzx5s2aibcahBUd8MyxI+GyrE2N4PLzvP8+Q2/VaoD+DFq0CA0/
ALnB2YsgbGZyVuVGxRCrckpri1UVAnpQ05Oa5oqpSo3Ilu2fO8dwn1eu5Ife
svofQHMG/Vl8Gj4xPz/P5nwOe/LmVG6uGGKpSsa+s1AcGio5qQl2U/GnuUh0
10+4swacfW2LhFIBGYuLi+Pj4ww6XtjYZXHxcN1PNjkkeLPNDz+sfxHj4/XX
KaZG8LYEPHw4efllLjOkCqAtS0ZoQCwvL4+Nja3DmWWDgJnJVSo3Syw1TQ4J
3mxTkweV6wl282ayf3/ldYquSMaWgBcvOlUwFFRYUGpPgkMFvq0am7humauh
5tApjaVevYq7vipWDSs0quIOGhXoyJFtfVNTV2Sx8SDjnDXrySa1AN0YNGS3
400FxlCN1Kzam2DbbbHoA+bZyKlHjpCI7tM8OXu2ZLOXwnBoS/rD/dhZLttq
gVYMurH004gKqjOSVb8C7Axl+0SIP/8ZfZPYvaPR+V1QWUa1cQds+3c/dpbF
ZJNawNFGbIApcAwQHaYJpVUgz1CGnQLWsYdV6mHK6jvvWF3BZFaCufTbtSv5
93/3ZGdZTDbRA8SFwxHqAmuohFIrTzV5hrKLVM8isOoNdrIhiE3LOvTr12t+
QvBi1Sq6iYrOz8+DpiGZXfED5AZDkCVB5vlggzJ37lBuyUPIGI5Fm63d318j
Y+PsN27RZqcKcIpNbkEyu5qC5eVl0Ay9+qCwx/TQkGmSgM9krdR6shRQGpUv
eFY/9oZJUAOgJd7aOCj3tdfsGsIxrb89/8laJ048rHCxjBlV+aij6jeuSG2z
UwUQFzIAutFgs1kMQTimq/ZXwGSttMIFnhtZw6nqAhpbKS5TWauC2CZdA982
C/aYPniwM/ggV9AaPFmr7ztdyCaZtjS2EltHMr4wh9gmXQbfNsvcnNVKhuP+
woXwG6pvSxf68stk927ix0u7gEbSb1yRL2dDbJNuhT+bJc6QAYFHjiR799I/
Xpq5HUm/cUWOnA2xTboenmyWOEMGQfj22yWthBylcPT3J489hvuIdc6G2CY9
Ah82S3DXRGwsthJy4eWAd4otUbTL2RDbpNcAcsNhvUBsIYNImJPVH3+MTmfV
MI2lYksUSYDTp9VqiW3Sg1hZWYHDYmpqij8HOLaQQTzMBZ3feovnsrlYKrZE
EYmZmZmhoSEph+9lzM7OjoyMWFXDlV00/A6Nk7mkDqwDGT5uWDpELlHUYnl5
GVbL9PS0qBkC0DknJibGxsbYDNWoQgaxMZvUQZ5PZ1I6RC5RLL8Y9yIRdAVU
qIXtKIm26jM4s0kdLPPpzN6uTZ4GGCb8SqmgWwASQ5muVv1/UsTp5fDcyafI
bFIH13w6Z1BOMDhNpBBeoAdopONbYGi04n9U64sv1tv1wXWh9MH6aVpCAiyD
yclJadIlQAFUDlBN7927Z2u2FK3sXbtMt8nu3Z3qFfNtpRISTOx6kw1LTi/X
c+/ehzoD1oHsa+DI3NwcvH3J5hIQABID5AaoqWwRN2VloxIMQAjcuIH4+9Jv
LEVtxOH+fSdy4+LFh/fgN03LBMvLy6BjtNttMUwENlhdXW21WpzSI8EnGDhK
SKjVTFy4aHI6g5c0LROoWTyAFcdDlwS9AzByQXpw6q7YBAM3CQkPUaWZ6L/3
pZdwQqO/v0RncJymVQs4EUDHkCEFAkcA3WNycnJoaIhHemATDFgTEnjuE5up
8otflH+Fa6lYAZAYoEnCiSA6hsA11tbWQHoMDg7Ozs6y5Q1iEwy4Z6PTv9fc
0Dh9WnfPfqUiSH6Q/yAxJFwi8In19fWpqSlYezMzM73uQzMxNE6dKm8bWApn
UhHk/NzcHLw1kPwy0EQQCiA9pqenYR3eu3evp6WH3tB4/fUw2lEGIDFAP4Q3
1W63RWIIYgBIDJAbsCZBA/HXAzk2FA2N4WEf7pc6yNsRxAxYn3CiDQ4OTkxM
8GSqNxeh3C/bsbKyojxRIDdEYggix8LCwvj4uHJ9yHL1D3jmKuFzdHR0fn5e
at4FDQIY0dPT06J++AQ8Z3ja8Mzb7bYUvAsajVT9APtaon4uAE9VxbbgOUu1
u6CbAOrH7OzspUuXRIBwATQKFcyCpwrPVqIkgi6GCBBLgLi4d+/eyBZmZmZE
XAh6CqkAAXt8cnISFOyezgDRYnNzc3Fxsd1ug7BV/Q3EfSHocayvr8/Pz09M
TAwMDIyOjoLuLeUSCqCMgUYxNja2b9++Vqs1Nzcn2oVAUARIDNgpID1AhoyP
j8O/e61IE54AqGEgJUANUz36eu0JCARkgM2ytLQEuwZO276+PqWHgK7efQkh
YIPAL1XTe0GvgF86NTXVlb9UIPAMpYeoUxigRlUuLCw00a26uroKYgHuHxSq
kZERkBXwD/h/Qa+QHC2BwBHgIIYtBhttYmICNHnQRuA/4d/w38B+jGr3gdYE
96OkhGrzC3cLsgIEIPw3oGaIe1MgCAXQOkD3gJ0I+1Fp+8q0UWqJcpIouFD+
4dvVxefm5uDrwMqA71UCbWBgAP6tpMT8/Lz4ewWCyAGbVKklykmiADZO3xZA
towVAH95rwLFP+77DiAi1H/TbrfhL2dnZ+F7m2hACQQCPcCWWS4ANJMquVH8
49C/QCAQCAQCgUAgEAgEAoFAIBAIBAKBQCCIFP8PqUS7/w==
         "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
        Column[{
          Style["City A", "Title", 20], 
          Style["Latent       =0", 
           RGBColor[0, 0, 1], Bold], 
          Style["Contagious   =1000", 
           RGBColor[1, 0, 0], Bold], 
          Style["Susceptible  =0", 
           RGBColor[0., 0.5, 0.], Bold], 
          Style["Recovered    =0", 
           RGBColor[0., 0.5, 0.], Bold]}]}, {"", 
        Image[CompressedData["
1:eJztXV9sVFd6N8FgIMQYCMFhAzgslFmyISZLUzdC4O4u3VFRy5CorDdRUu8i
mlmlEVaDFLdJazWV6q5o5NVK0Ujsw6hUWtMnK+qurKiVrFUrWX2CfbL65Lw5
b3704+03HHO5vn/OPd93/t6Z76ffroDM3Llz55zvfP+/F39y642/fKqvr+/D
XfB/b/z4oz/667/+8d+82Q9/+e7f3L75k+3wh/e29fU14X+dP0cMBoPBYDAY
DAaDwWAwGAwGg8FgMBgMBgOJlZWVpcd48OCB79thMBiusbq6Ctt/YWFh5jEa
jcb4I4yOjvbloVarjT9G0Wvg38UL4GrxleFT4LNA7Pj+0gwGQxWxfGg2m7Cj
YfvDBh8ZGcnd3Zq6BLxXXCQrkZKfOzk5Cf8+Pz8Pr9zY2DD4ZRkMBgFwrIs9
W6/XYZPCVo3lQ6vV8n7uCz2n3W7D/UxMTMC97dq1a3h4GP4gJMny8rLH22Mw
egSwE2Ebgi4xNjYmrAkhJRYXF+E/+b47JaytrYEwEZJEfAuwd+DPIOjYkcJg
mAIcynNzcyAf4KQGpQLUfthi3XRSg7gA3QOEIQiQoaEh0J1AqoBs8X1fDEbF
AFtpdnYW9Hk4juFQnpqaAnsETmrf92Ud6+vroDuB3Ii/+/T0dDcJSQbDLGDL
wLEL6gToFXDywn7hMxckBshPkB6gh4AtAzZaLwhPBqMUKysrvDVKkRWq7Axh
9CBAXIA2XnsEVsVREEYcSI+RkRGw4FiAMLoeSXEBf+D8KB2srq7Ozc2xAGF0
K0DNbrVaLC4sISlAQBVhQ49RdYABIqzyZrPJ4sI2QICA0QdPe2JiYnFx0fft
MBg4xArG2NhYu93m/GrHmJ+fFzm0rH4wKgE48ljBCARJ9YO9H4wwASsT1iec
caxgRGAjzMxE4+PR8HDn/6enQQOI/D0TUD9E9S6nxDDCwfLycqPRgJUJ69P3
vfgGqFhjY1FfXw5rtchruBmEhij8X1hY8HgbDIZYimNjY7wUO2i3o1278oVG
TNBDvAJ+MiHk+SdjuAesOnF4dY/qq2lcgKZRKjQEA4h0gFEJ0kMYlb7vhdET
AIkBpxWsuu6RGEaMi6IrZAlyaX3d8ldSgnBig/RotVq97pJiWAOcTbDGQGJ0
lXPeiHEBmomi0BAEZSYYgPRoNpvwy87NzbH0YBgEnEei90VV2uOowpRxMTWF
kxtgBwWGtbW1qamp4eHhmZkZlh4MTSwvL4+NjcF51G0SQ8CUcaF+HcGhIYdf
EoH19XWQG3BGcLopgwZYQqIjX9cWqxo0LhSVliQDlsOge9QfoTsPC4Y1tNvt
Wq0G5onTT3WcLmXQuBgdxV0K5EzwtgCoHLAGZmdn2WxhlGJlZQV0jMnJSad1
DUYiGlixY9C4mJzEXQrkDPm2HQIkxvT09OjoKJstjCKAYQKLBI4Y14aJfkSD
JnYMGhdzc7jrNJv023YOOErAZmk0Glwix0hhYWFBKKWuP1g/okEWOwaNC9hQ
+/YhrvPgAf22Pekn3lYII0jYOk0Ul7dmRENH7OgYF9nb2LFD9TrwWGi37Vs/
8aaRMkICWK8zMzPmrVf15a0f0dAROzTjIhfqt9HfH339NeW2gyl+8eMBY4QB
ODJAYphP8lFZ3iMjm+rHX/0VbuemIhpwER2xA8sedqXie4VxkQus9NuzB33b
4RW/iIgbF8f1FObm5sbHx8331VFf3oK7d+N2UBzRkKg06mInwmx5yVGOjedi
CWI2yOIXMFvAvJ2amuJAbdfD7m9N2MtYrq4qqTRysSMgPDAqKgd8L4PxXNu8
fv2JZ+ns2ejChejMmejwYUtOVHEGcYZYF0PYJrZ0S6y6TiCIi4cPiUIjFjsR
Ul2BvSbfaDr344Wmnah21xXDK6yfC7bV9b5HEQ2dw10EUhXVFdhcExNK++vE
Cf+igECjTlS2WboPjn5TB+r697+v9XZQ2tU9MHNzSt8apNC2bf6FAI2mnahs
s3QNiDokIbnItroO13/7ba0rDA1F3/424vUffVTylFBpGwHSghOVbZYuAEX+
k5OLsOmXWIIcc++BlJ/IoXlECbTQQYhtluqC+NvpJBdh0y9RFBEN9x5IyYns
wA/sgNY6CLHNUjkQdUXN5CJs+mWKEi9BHNGwrdIUfXouGg3/u16fNjsIsc1S
IbTbbaKcBzNEcbHlnsKo9MssX3qpo7EkJUM2omFVpSli9kSmZZ0FS5sqgdB7
p0Pqp8rIApTDyclJtF0JG+HUKdxiy10JOqp7svpjaSnHBwtKzg9+4GFbpU5k
ctZZmHTSQWh2dhaWpe1PYdAAUn1qagr9NtpGKLKLaSqBpPojCuB8j09kbCJ9
+JQU+RoFqMH1ep09paEB5DmlNwJ5I0jsYhBE8F9RV5PkIHk/35MnshfxdeiQ
xYtLinxNY3FxESzo9TBmxzBAhoMkJw7e0tkIErt4bS3trJBQUv0Rwvken8iW
Aijf/Kas5w/Yg3fu2Ppq27bJ1DwLWF5e5iBLCADpDT8EsYGGzkZQt4s/+qhk
XwReMhafyDYS6cXXz4rZpE9Y0+Esp/Mt/ODBAyu12AxlgNzWmlOgsxFQdrF8
XxQhhASJpOPFoBCTfP1cnzC204j6t/PhcBDrtqum/lUHBuS2zkYg28W5+yIX
DgrlSpl0vBi0mNRPeZRP+JlncLfhyimaBejJIDq4TbpjmLETyRsB7OJ798x8
Ewm8Gynnz28RcQazzj7+ePOa8joglE+Y4Alx6BTNYmNjo9FoEP1yDDyM+aU1
N4LtbpbePaK3b2+5nwsXTF781q3ohRfy/9Pp0x0TRt0nfOkSxRPS3+/YKZoF
iI7Jyck5xdJjhgZMxsH10y+t6plessqTTOaowC6Gjeby04ukSpbJ9F2UU+jt
t0OY9zQ1NcUJpVYh0kENXk53bT/3nMVull6yypNM5qh4N5rkTO47rJcjSU/z
njih1B5A0zD8bI0E+OydFPpiTZ/CgxRCZEfOWDX67DMDV3MyTyHza89Rsp0Z
UiwuLoJ5Yv66+jvCWiG23bwFFQ4MbOrtIUR25IxVo+efN3NBH5EOsFZ4HpxB
iOiJrdx+TXPAZiG254P+8OHN2wjcSBEE1cjg41JpBRYHg/bv7wxrOHassxgu
XtRxlYBGzREWIxB5Gnaz+jUjBSrhYFhjb7/dWV07d3YIa+zq1U4wV766VlYQ
c1eN88iRzdvwHtkppcjgMqsXSSxQlawSqqsE9GrO69DE6uqqi3x+HU9Cac4h
rLFXXil8+/Hjhavrn/4peuopn5vxmWc278R7ZKeUIoPLrF5UZIGiskrwrhLQ
q2HN8whaMkROnYtMfh1PgjznENaYSufe7OoCoeF9M/Y9VqW8R3ZKKTK4zOpF
ILSz8VlCpSFeeRBVV5yIToBdqZtNU/zgA60VmwtYYwMDlNUFb/SraQjGqlQI
kR0J4VkdPNj5HQ8ftvURsdFBUGlIXdMdadrdBZGCa8XKk1imBE/Czp2ynEPU
GkumgmCbj1lirEp5j+wEwjffJL6RFKwXg++5X4c6bHmVVSxT1EAQYV/kFlnc
u0dcXeEkSyRVqXDuqoqkBuvBVAHRwV3CVGAriq1umR45ovQykDDnzxe++MAB
4uoKJFli+/bOt0tKwnfecX0P/f3RP/wDunlagNQI1oPWDbo3iw45QGLYytVX
txpgs3z+ebRnj5/VFWyyBNj4n3zidBeLsllU87RgqeGpMJ8p3V2w+HywajbI
LliuP/whRW3QXF2BJ0t8+GF+DyLjatJrr+UEuP/u7/w/AQK1GwRxFnoR7CaF
Yld10iBdXOzMGHIQ4BCrK/yDNfZXJ3sQmfWdFrVPDMSIw9JEgyBOJc1ifX19
dHTUYtQJq/wLk8HxAAKxusJPligKLJrynd64Yex33L79yZ+FXgQ6pPsnZqJB
EBypsEe4MWkSjUbD7jg8gvJ/545rk0GsrsCTJQSLfFCmzLqiEDzhF4HDKKkX
uXcfyYfjYABCA0QH+0gFKLabvL9cFljlf2DAtdCIU0EqkSxx5kz+0zalLBWp
NNjfsb9/SxEQLBvH3Yf6DFfls49UAO3WkNgOkkoi7Hp++mmfq6sSyRK5T9ug
spSr0tDkEtzq/ft+AlWS4ThUsKMD7dZQSdzKFe+BK/8idpBUosJXOXKftkFl
KTdXKvDfMUXQoi3YFOzowLk11BO3stYxtmOt2fUjj8Xcvh09fBhu2gb2aZtS
lnJzpSphxAmCqWsNvezoQLs1UIlbWetYfT2rd8RV5KFD0be+Fe3du+UfBwej
y5c7qr73CbCazD5tU16OXEW0EkZc3yMXkE30pqMD7dYgJG5lobKeQTrZ28Vg
aH/+efTll5S67D/9U/97Qf1pE4ZrpyjJlQo/VA28f191bVPRa44OSraGTuJW
EvL1LNKNbGdeJX0C6krUc8916H07qD9tzfzw0sYmgdet2O/Z1WuODkq2Btb8
z226IlA6rdXBcSYWFVaJunrV/3bIZWnd1tKS+WFq4nd0H/lSJKntBha94+gg
Ztrr2A6S+GzutFYHTvu9ezuLiqBEBauil2qPKJemeq5UyK4hJ9OUesHRQS9C
0bcd1NNv3Djtr1+nZL/b9grSqoDjiQkSgIql3vdG/ccKuZzH3oyMrehuRweI
i1qtRixCMXLOnj2rml/qwGm/bRulVu4nP7FyM2CmnTmj9WCziNNRnn22EzxS
vxoqVypYBazP8oyMBLrb0aHVkMeG7SDvVB/gggSd/LXXzF92x45OlrvOFVK+
CJ16wKJKWJcLwyBdNQi1NZjMN3Q7ntmzHSQqcWhOe9DJbZjzmnlu27dv8UXQ
0lGOHt3img5hYehTu+0GCtaLQ31gfHx8aWlJ6xL2bAdJyCwopz0c68bN+VQ2
GoHvvffkcRHGBAjqRB+CzQQz0XZDHWtrayMjI90UW5mfn5+A00QflmyH0kUb
gtNehBiwT0AMHyz6r/qB3YGBTp68cBaB+NVJtdWJPgRoVPaZabuBQje1BVtf
X6/VaiAMzVzOku0gX7THj/tfhMKewprzsHQl+SoG22ft3q17Bc3og3xhXLni
emKmkPOohg/Y7hAZgLIxNjbWHQObQACCGDR5RRuNauWLVifWYIRxiEEzCyKV
rxJUMZ1+9EGe0Qf/9dAhd1/n/fcRDR9o3SHysLS0NO4q/msPIPpGrVp59brd
RSuOAL92SirEoG7Ol2ZBhGB/JWkw+pCUkOJHdCn8v/lNRMMHcneIAnRBOgdo
TXYn5BoMw6UWrePmolmmst+TuHat/O0qWRDwER6/YIo2og9efsSbN1UF8v79
ncC6YjxLueBlbW2tVqtVd9Bbq9Vq2nYNmQrDxYtWnE2wobZt87Z9kgWzWagc
TxculO9BuE6yba93GtdLHTcogO3/xhsdOW9JUmFCTi62nh2A0AMLxZg7VILP
PjPwo5w961/BUNk+Os2LaNdxRrPr3MsXFJ5Me9e/elVdJYPdV0UHqTsjy8hm
37EjiBHwwPPnZR51zeZFZh+aQZpr+r2JV17x8C3gJ3v3Xbsfoewmte5atIDl
5eUxWJkOEGzOj42lYqR5Eaq+zBmNNv3uqC5evsXQkIE8OnOPC0wVMFhMPljL
cKcjBTjAy5J6DEtFs3lRIIZYlmabfsPXdD/swD0V3KSGU6csw2nSWmgbAXSD
W7c6NgIYPvE/nj4dvfiimYujXp8MLgfbxVSlkA2VEOVxSbiUV2pu0qpkkG5s
bIyMjBgTcaULJqi9cORI/r8LQ0M/05UQ4hHBZTiCBwb8P5/UM1EpZIM7L5KW
uZa+X7vVcR2TQma+4f1oDcbkm2IGXQhtW0Cd+IM/KC9FBwGYTWjULGCX86mn
NotHTpzw/5RA6P3gB50fLrfHWpR3RoBgKXVWpyx9v3ar47i2Wl5oJVSO4eFh
A8JNPYPOe0HT3r2IkN/+/U+0pi+/7Iwg9HvzLilx5Wk6XpKWvkcjBdYAnCAu
P1EtMz98lWNhYaHRaOheBZWi4L1tC+j/tLUKa8zLbHQvlHg+9R0vSUvfo90K
gtH9KaaWmR+4ymEmjIJKUfi//wu3bQtTUOL5NJWdFVv6vuxWIRgdn2Jg+n39
tcqWClnlMKNsEFIU/LrCHJu0lYsw3rgh+7lNmRWxpe/Fbo0Fo/vmY8pNS4JV
OcwoG7QUBY9ejmS81QFfflmpqC0oJv0PSeenwQLV2NK3euIfPdqpR4j/mhsS
cnyKKZfMr6+vDw8Ph9YNzIyyEeEPoHjBgJksiYLZC5A5Ln/bvdtuCMYGhf/B
dtaZsPTtnfjJTPiikFD0yPJy2eUD07TEfCccbRhLECVYu7BgJGtycDD65S/N
1L7lMpCqlsA5MGD3QYH0vnhx02i1FKVSSe32klyn3LQktAakJlsMYf1a8DPd
vVv+YxkfMc8MlmA+XLli+JqHD5cntXqpwFWZeJVAUCqHyQbsWE8FLBK/KaOs
b4TJq1eN9aHt74/+93/Ll66X1BEQaBiEo3IYLtfF+rXguXlfosww+atfdY6h
l17SvY6KheIrqHfkCHaHBaJyGJ72gvJrOY5lMKvFOB9sepp+kd27o9/+tnzd
6ue3798f/cd/ROfO4d71zDP4HeZf5bDSG0RddIdWDMsMjTdvmlkkpSqHkU95
4QV66SIG3ie72boBFS8H/FI2hqX2VTC3illEg94neb8LX+XGpGbOfluB2VV4
5FXnV692VNCgiuiZ3U1JvwtYq77c49Ttb2DuKhWzs7PTOrP5SrG21smNLErZ
qtWiU6f8Lydm7zB3tfvt8Ext5txutydBq/cBUDZWDQ7KySLYFlXM3mRukpLf
yn1qsiWYCcPDw+5nrCwuLtbrdYsfEGCjfmaPM5vU7bemUq+Zs5eArHWXLMdK
mAEypWB7bC+m3czZvXfUegi4F6YbMCvHbPDC1+mm0sxZAY5nMxE9oupdqV2K
8VotOnjQ/5pkhs/s6ezYlN6zp/OJr75a0tFdGY7HQaI9oopNhmO4FOP/9V9c
Y8JUYnaL+W2LrTy7rQgum3KgZ7GpNxkWACHjbCPv2MHeV6YSc4MX3tti9+l6
RycmJuZBdbEPsFDATlF9NXYOsuPYK01AHTjgf7UwHTN3e3pviy2oMLutCCA0
QHSQ364OnJGibnEMDUX/8z/VOP1BX9UfosSsEIuCF+4biuby8GGV2W25ACNl
aGjItqmCM1KwYZFKFIbE+mp2iBKzKykPXgQS+3v3XfKmdmCq4IwU+C7en6dx
5uqrS0vRV18FcfQwydy+vbztcBaOG4pKSHV0WM/hRBkpHot97FGebBPI0cOk
MQ6zStoOZxd5UJY1ydFhO+ccYaR0ZZb4T39avpxCcLAzaUyGWVVyjQJc5GpD
6vOW7WQbZKAdIIyU7ssS37kTcQZVblQBM3ZbqecahbnISSXqVk0V1azUSqjr
2MZK2VxByZH06af+vyATReEcUM81CnaRkyYL2IuqrK6ujoyMKL3UY7GPPSaV
WPmRNDcXffghqxxVomgiiso1CnaRYyYxJQH6xqJGHkgREI0+wtTfksQ2NH7q
qSe5gqG5wpimqD5kBzTM8+f933ARSV1xLA2QRQR5XfZafPbZJ3+OA2fypCxC
lggICoEAXWFMLww214jUcTRCGRQYgPmjFKlxGX6NfVmpwBns7u98J/8t5HGu
QoaHr0ox3XDvXv/3kEuNlhrGO/ipTnJ0fBznJrrYsCOEDA/WFcZ0T6z/ytlh
qlEX32w2W60W+e1ZzDxC+etcHse5KViWBJeQ4X5dYWCFBasbM0uZNKjtUaPj
KGBhYaHRaJDfnoVSBNblcVxUMmBJcAkZzkaKMx47Fg0O+r8NCQcGEDNGYTv/
2Z+5uCu9mnqz0Vi4zq7YMSiBg+M49nzm5k7cu2flQ4UMd9kVhAmCem0tunTJ
/50UEVRQ9YMS1qqDinvtjqNR52wcW9brBRRD1blh9TgGc1LMBJfkTlhqiwE/
OsdeHfO99zaPhmBLBYUKqjhYELaz7Yp7Qx1HDTY5V3VuWN1Z6ul8Zgk/+sOH
LDSYW5h0I8iD/sntbMmQP3hQafK1Ggy6OFQTyex1ohAS233uhPjR2a3BTDF1
jGY7seTW4MMC3r7d8J0YUjNirK+vD1EzTlNQzdywVAp67tzmk3G8f69d63wo
x16ZKcrdCJIafNoC3rGjk5sKTJo5oGO8/rpBNSMJI1kciOEsNjw/O3duKoSO
92+siAZbhsD0wvgUw8LGAtbuZ54LIzX1iKx1G56fWCF0vH9v3Nj8XDZSmDHj
U4wAewtYL/aahZGR0zjhY1aoJhVC9/tX/BzsEWXGzO5Q9VFiVhew0TpWI/Mf
a7XaysoK4g2mvBwph4+X/Qs/B7cdZsb84osnC1KSD7BnT8f/kBIjVhcwtc1X
EXbt2qWT/aWa8RVDiF8wu8gpUkXNYL3sX/g53nrLw+cyw2S8PVH5AMILYXsB
k9p8FUEz+wuhsUjEb/z0QCD8+tfR5cv5nmF5M1hffTu/9z0/n8sMk8eOdSpN
CMeibblBavNVBM0CN9Wxs4rd1bBTYpPwNRgLZFqwKYtMZkxDSRePd5tWDx+l
pFP1dKzS0mOJZ9jXYCz4OTiFg2mE5N4vijTXOkO1tKQASpmiZh3Fko9T379m
a5bh5+DpBpUjLMt33vF/G85IbfOVC82s0fJMUeNnsdwzrFhGZFBucMeeKnJ6
uhP70HTRV4tnzpC3eS6Gh4fXQMnHA94F7y15kY1sFrlnuLSMyGw1fQgde5jq
PHQoun+/F7P1bt4k7HEJyO3NlUax2PiBYsOqKKlGXkZkdo8Lt/CpU/4XBlOF
oF304ASKZL99QyAX1CsFU2xks4A6oR55SUVvQdSod7NX4W9+07ksN+hjhszz
5wkbXA5ySEVpqqOlqHSpTZqNvJQmkNBu4+LFjrZjvPyZyTRFWKWipZVRkBtx
KA1M8RhoOHv2if0CehEXkjB7kx9/TJELZSBXqSjlmvpKx2IymX1meormghyK
VQrE+ErHYjIt0XZ2lkGabvaVgmrDrgQQ0oZzG5jdROE6W1qK/v7v/d9MEb/1
LRsde1JQmn6yFTjrhtMpFcn+1cCZVPtBl5ZkCvml0Sq2IjQajYWFBdRb0N5U
eToWs+/RJOKjR/3fBrOIWbU/WF3aaBVbEQgpHKqVsElk07GYKfZIznO1WNTy
RSBYXbqoik29BVkZZmdnp5FtPVRnphShB3P2SslCIxyKvtPyli8xQJcObehk
bhWbTp+K/O+NbjSKU1GyIu74cf/PlsksIvZMDE2XzvoeFXvgYEBI/VJtR2wj
S5PJtEpyzkM44z5TPgT1HjiYUjVCFw6larhwHiOTqchjx4hCw/24wCImp0wK
qJ/dmA7Gq6urIyMjqIcEcgakTTUeI5OpTnIkIhy9OmVuYIM+yq5OQspo+ay3
cB5jJchO0XBI6KeH3ZuSI/WDDzqNyMiukqyRhW0cgTE9+uD1GJQkmQcb1w6W
Bw74vwdmH7WfHnZvHj1aPmkazHxs2DE3sRx7gmNUCGzXrxI5Y6o3Tu+kiv3h
H/q/B2bfozJqAgjadewezI32osx8eYYJwV2grHFhx66VyA3sYwS5mpW99+87
XTADA9Hhw04/Mcnnn4/27/f26cyYcFTFG1A9RYqwNw8dknkg1XcQLFq5JxNr
8mA0rnI/51aUyA2yiEvKXrKHZGSkc2pg3wWPl80rpuD77+NSpGjuiCIPpFlP
JjajFdNVAyU3yuMv+iJOZwuLWBK29YcIeQebNswMipcubdFD4K+EixR5IM16
MmkbQQ2G5Ya+iNP0kMBPiWr9kQx5+y3B27ePu5X2Cos8kGY9meSNoADDckNf
xGmGcYUEVldaUiFvkTYMGqmX5fTBB9HevX4+mumYuR5I455M8kYog1Kz0Mco
lxv6Ik4zZyyWwIqTmLKOII/JrkLo3bhRpdZSYfL06Q6930YRizyQNjyZ5I1Q
clW1epNHUGraoyni9EuEYglcOolJMwpmnLHQ+93vopMnuXaYQji2bt/uLMLX
XvN/M0Us2kSWPJmEjVAGlNxQrWfREXGa/smkBAYh8J3v5L/s+PH8qLf3ZNek
2gm/C/cBIzNkna3IA2nWk5mMJr/+evTyy1uq0eW5H2WwIjciDRGn2Qg9lsCE
8mHv0ViQEmIsCzzkmzejHTs83w/TBiUeSFOeTHnDjc8/1+9abEtuRHmtCVRE
nGYjdCGBaeXDPOyV6YByDyTKzM/NT7t7t3zxa49WQcmN5eXlMZBjBCg2UBIg
n/uxBFY3Nw4efJJ0591IYXY9VTyQKqb6K68UOnAUDbSTJ3UaBqLkBqHungia
l0NIcqzYuXBh80O5/J9plbnmeZHOIDHzr1wxv1aRDQMDlRsRPgsrluQEc0NY
K+F0e2N2Gffvz9mVci/Er3+db+bfv2/xgFPO4ghXbkSY5o1JSU4wN0SCOqea
My0xG/hA+e2NVG8pUq1hoOF8UXuAm/zqKyVHK00ag+ThmbZMG8wGPtT99v/4
j1usmKtXrd+tWsNAlNzY2NjYBd83BEgcrTRzA34UnmnLtMGs8h+4B16hYaDh
OvoQQDM3RK6m9xQOZpcxG0AJf40p5Fp0odwgmxsiV5O9HMxcEqqVcwMo4acJ
KTQMxI6WJoywdw2auZFMUG82/f92zNA4OKjqpT9+XJbfGLiRIljWMLC8P7ne
6/2AoAomS4TCPxGYXihWvkrf4JRPI5mkEX4He4Uy2127dm1gUsXGxsaWqbUw
ToEth0xGyipxIjAdU+wm9VDI2bMdO+Wzz4KuzM2lQpkt1l+B9Yd4A1gr+/Yh
lkTSWOPEUWaWYjf1wplS1jCQkI+ByhNzjVTKrnqwO1UixE23mFnCbgo/FKJP
hYaBKysrtVoNtTWbzWar1dLY23agM8ZaUiLEZAqK3VQhx9fBg8Q3KqSaE+ZK
zzwCbXPbgk5nPxslQszuo1jzVTFSQL5tbEQ//znFB/vFF6UbbmFhodFooPbo
3NzcFNxVOKB19hORMqslQsyuYX//ZnyhKqslTvgE0wD7XoU883a7PTk5idqm
8/PzE7DjwoHOkKYjR/z/xMxKUERgq1IxnTQiCHmMZXnms7Oz08rD6wXorXts
oBf8VEzvjPMZqpJLnEr4/OM/xr29zHdBcHKura0NgyYTCCrkp2JWl3E+Q4Uq
ppPJmdh5QGV55vV6fVGt3D6JgFLNq+KnYlaacT5DVSqmkwmf7TblCtKccFrS
OLakxSKq4qdiVpepfIZKmMaxgrSyQumKX5ZnTitubTQaCwsLhDeaR1X8VMzq
Mpt14NjLceFCdOcO7i2xgkRTyKV55uTmXVNTU3Ng6IWAqvip+sIeA8QsYlH7
cWcjyAcGon/7t8LxYUV8773OTZJVI2meOSHpSyCgFI6q+KlA8fvRj/zfBhPF
VPeMVBXDBx90JqAdPqz7KZbKY+FuyVGD3/xGsucIyRsChGwxW6iKn0rouidP
+r8TZpbbt3dqV+O/ZpvW6lQxyHnzZkejsHFl2Bfnz1PeGCe5FWB6enp2dpaw
WQlVLRYRvp8KltwXX2weVbt3+78fZoqxOZ/btFaniiEmqCXJYkmQFXDNV1+1
m3lIaFDW96j8Xwod9ya2a4ddhOzlgAOFi+YC55UrWwyQ69ejN9/cHNQLvx1t
9wmeOEGvL9Mn7ZAqK6IHnQE0B9pODa57jzM/lTpB+wWhwZHinuXgoC0bxCql
zg3NiQYhVtOLIU3f+Ib/Jy/4/vssNJgVY5lz48GDB6MK3cCKYCWkkjsoE2sN
BeIphefP5gmzcixzboC20CwzZKRbfLFer5PfnoZ8UCbWIArfU8pkhskymaCZ
u7W+vj6kMGRBCahBmYoI2VPKZIZJhQ6BtIq2JIaHh9fAKNCEetcd7N0G6Cll
MkOmwumsv+v1JU8H6uk0auNut0B9nD2T2eMsyqjfsp8M9NAw0GgU64hAthja
ApHSw0oIswcJKv3du7KVnzuPMgMjieLk8pYnwObPa36cACshlaP6PAtmLkXk
NLvysxn1JfvVQEHrxsbG0NCQVtYoNudf4oklxHAJNXEsbVxy587o8uXOqu7x
rm5XriAmiOUyGyXJzagvg6nGO7rXIaRFpboMgbh4//1OYl7ui+UxXGyr50OH
Oo/a+yrqNcJx0Jtd3ZLDqUFVuHaNmH2qECVRgQE94TF09Rbs8Z1sQ6Reoljk
hMGeYhcvdt7FhWnuqVMhUmnGS1entm7vXnoWZQIG/BKPoesnwWZZxAmu2MeY
G/ehWUlcC890SVi6tAlBuSRkUT6GwYFrutlfWA/D/v3R7dudAd/Yx5gbwyVo
fWAlgZz0vpaYvUNyGw0JSdvfTN7FY9A6G2/CZS1JKoYLGgu2z5Kwkn72M9y7
PJZRM5lF9D3FQLcw1lktSdI0oyl+wkrCekXYrukpisjmlSv+70ROZBalQeeG
gIFUEDe1JEl7iuafF8Es7Hu3bevEE72vE6ZtJr2OlWh7i8miND5N3kx0xk0a
p7CnaBoObP979zpv55YazCxTA0cCaeYgJ0Z/sDEyCRQYUGN0rwKP+tIlF7+s
ThIRiFxO/WJmmW1lE34zB+WIhsni9wSM9fCxmhYY/7KaSUQjI/5/cWZozG1b
EX4zB7WIBnnwgRyarcOewGpaYPzLsqHBNEtJQmbIdZRlwxxjgNAA0WFgg2eg
FY2NYW9HJ39ZNjSYZil3GGaryU6eRCz1gQFboXzls97eHHkzEsnejo5/2cVF
lhu9QjczCBTaVjxBXE2m7v2ApWvJVaLWJnR5eXkMvqMdmGk3askePHeu82PZ
G7nlnYSB41Xh975Hf6+D8Lda24p8XL5cfv1YKBnfGsrFbuTpbCrY2NgYHh6m
KDPJ+ncbKVL9/Z38FiMjt5jOGPeFCDOgiWxbkYbiEZYSSmZdJcrJGGZcEMVA
mypuFACwSgyWBTEd8PDhJ6mMcKy8+ab/W+p7NEXr3j1a24otUDnC4LB79dWc
ClZTLaeUbSurRooAzlRxpgCAEdet5kkXE7ZMaHalfrak6BWDrYrKrWDV2TsY
28qqkSKAMFWcKQDwKf/8z/6XHBNL2CxBqYjJyeCEoWD6MjAltQgqx+nTBNvK
tpEioGqqODtH4GlXusUc7B34ub3fhntu2+b/HmJKJoMLZUDeo9KUap2sYMW6
ScumsOXCgZEioGSqOMu/FUZcULoulmxkeaRwfn7yCXHXC5FiULVOVrBi6+ZI
kxkdGCkCSqYKoYf50hJ61mqcCxeUuov9Cg8eVPj+K83+/ug//9PArn/hBZN3
FVewosJM1P6ibowUgfKOo7TufOQOxu6zvI4dMxMvEyYtZ6l5pNldr89kBSvI
EMV3kTy6xhtuyFFeq0KTAOQOxu5ri86d63RKf+cdrS1vL+GHWV2KMxTlZUWl
syYwMTExPz9PeCMZY2NjyxK3LU0CkDsY++qgEpu3hKxFMOWq1QGG6Yx37iBO
Xmo669raGhgpRkYeqKOk6pYmAciOIL8JhzRFN9mIydL98wS0KnJgQFVoXLpE
T2c12BkDgxLvKE0CYLfP558/+cTwO6ikmIqaGbx/UHTjID5bQJXj00+rvpIw
hD2BWq22Aqqyc8i8o2RXMGr7pJ5btfbIU0+lf3Qj95/1q//oR/6/rCaffdb/
PYRJ6hB2xx7RJEq8o6giYsK7Us8ttIxlFf70p+mHpl/WJB5mMknp9dfRac9B
MZaE9br/mwmN1L3v3iOaRIl3VOUATbmCacPrVbL1btwITiERMyVTyJY1nTjR
qbdSuWCtFj18WD35KefHH28+GfYeZ0nqCOrFI5pE+XwE+QGadQUTEj/U83bg
FA6qiwWoAfIiCFGYqf5M9u0jTiUOmadPb/pqfvWrzhRU7/cTGvFZW7oTn02g
vHd69gCVdDYgJH6cO6f6SlDaX37Z/w+dy6KZnpXz91piaNlZgVC5fWgMehcd
o8CNZCrtbIBN/MDqD8HKDcFs1l+lS/Z8ETS0f/mXant1FIlvFe4l/JoLk+Na
sC6IQ4dwrw9/IGNqpmeXOSscMDZ+Wy3/N2ObyFo2UDZGRkbWwAQIAPPz8xNg
dxgB1vd1+DDu9YODIbakSzIVXOaSN0X290dvvJG29ULzhJslvpYtHGUjMivE
sIkfhATvX/xC9ZW+vHDJoDyXvNGeWwy5Z77SKbXIWraglA0Bk3IMlfhhrxAG
DIR79/ysh5GRJ0+ju09Mszx2LD8yJffMV/QJ42vZglI2BAyLMvXED3IpnEqA
GF6D9a0dORLt329gVcReDk5awLIoMiWQ65kPeeBaLkm1bL4Sy+UwLM0UEz90
eiLJjyFyOxe4yCefqGZqFfHQoU0vx3//d1j99KpCbD8K2xPPDfLddwn7CRf3
dAjz1pNK4oepnkjZY0gzkKEpN/oeW+scTyEzFZkqRVVC3qTccpNBT9OwaED9
7GedfOPcrrC0Qhg5Qsi2gq8Zwm1Ul9hy0aqIaHxuebDKhgCoHENDQ4bz3iUF
a7ElSyiEkSOEo2ffviBuo9JElYsaCXmDnvnii9a/FzK3PGRlQ8Bw6rtKwZrQ
IuT+kOvXC9WVLEBSBVIH8Xu/5/8eKk2USm8k5A0rZ3DQ7pdC5pYHrmwImCy1
QxWsRQX+kD/5k+jb385/V67jnYfMuqe92dAolb4qAVlkbnm9Xl/Eunp8wJjK
oW5vZi1Z4edUV1cEeMisL965YysSqq7SVyXkjcktL28hHgzW19drtZpuYIXc
wCcGVl2JquMZw1KShRJCwqRQvCXhM3J+BUql99ulVv0bYTwV4Xs2kijpWqwC
WgMfAdHtSt3MFOpKdwcv9u2LTp168tegEiazB2I2LC6kSn+/7pXlUF8DviQM
Ji+l1Wo1SUPcPKKkFZjC+3HPkzB1IklQV3oheAGrrihh0mN2Gaxt+fRVAYJg
J+waFSnq61lhYoKg8IOyEVQ1igp0DSuCnwE1dSJFWKvdaqSkWOQie+klP/cz
MFDYFCXluMYKdrDOaCq63CzSz+ijEZlbrjr/PTxoOUixQTH1qRO5hHVSaY+o
euC4KBvKl7VSanrEmjlWsMMPSkaRs6UoNmePkuZ4xXA2Zd4GtDLPsctYfepE
Eb/xDddLwhSxvs3cbCgv0QTFskGhI5HHB2situwce8Deeos2iC2qmjs0C3pL
n6oExbwTHpSODzkGiPfnnjN8byDQJAr/kSOq1xE6Enl8sCk49oBRZxwEWC9P
wPj4+BJIbCxQQTGsm72bCE/p/HncW4qyocyep8KJV6Twf/op7mqgI5F7JpiC
Yw9YNWccmALoS2BqUb6I+jLu8WbXBLGZVODjWIbBzKtcJ16s8K+sRM8/j7sg
3J5OzwQjcO8Bw9tZfgcqmcX09PTs7CzlnYoFa95dmn/xF515r74+Hfv1Qc7E
+9fsGbptW/Tnf17ixKNl8oNMM9UzgQzHPRvxdtbi4mK9Xjf8rf1By0Gq0sDH
bxPOU6c61rfH7ClsZPDppzcfrHF5W2oa6GTyw+Fro2eCOhz/xEg7C3bZ6Oho
gB29dKBVlFfawMd7xiPcD9lp5l5ZAq3g5k0ro+tKTQOyegN3K8LHly+Xvxjf
e1MJNF89dlSH+sPcClDpp6ljpkOGmbq83HTHQIIvqOr7kZFN0QdS8do1A3Fk
7yw1DTT9ridOKKVPSPKjVLJSJSCEnH784046oo2HuRWrq6u1Wq0L3KFZgAYF
epSVr1aJiqQk41nJkQl7IZDBZKWmge04JkiVIteKSvcnFaBE340b9MWJtLNA
mQeVHvWWCsFiZDmQqrTdu8tfk9SijVTuh9C4OGsaZA/3ZGGdJeYqtNh2CnIo
GsWvvfbkgWAXJ9LOMlBGGjwsCkbvXg7BK1eUOrEL6IczYEcYz9fCMvWljIdp
1JnMoheCC/avolxVN6JBEO3ZI7vU7dvpja++OJF1KBbV+JCwvr4OX3PVSAJw
FiEMwoCzVaUTe2RIR4Kt8cMf+vmmuV/Ke8M02Hc0wYXqYww/MTz2Awe2XGFw
sOO2LbJ65Ivz4MHyEHYGXRlDKcLy8vL4+LgtCZnds465d++W+8l15Aro2/uw
Ox4+jI4fd/0dz5xJbzHs4W6PIM3IgosWj4Cf+MsvlZSE3APlu9+NfvtbyudW
ueiVBusp9H47/t26VX6HsNE001yvX4/u3vXwNcOxSnKpI7ioJSEUSA4UNfSC
WyMLux5g7ytZYiyb2mhgYg8MuPtGYVolZkkqCfGCHnFrZGHR0RFCbKXIWK7c
RoO7/eUv80/GrmzjbMnzZhQ95dbIwpajI5COfzqtksOhJEDpXakzTuOl93bQ
a26NLKw4OgJZz7GxHGcy2EjttsrBwU5IMTepMgSlzjirMDKgN90aWZh3dLi0
+iUEYzk0nyGZ2aRKfaVu+/YtRcQhNFEJvvt3z7o1sjDv6Ain1iMQCVZKxUTo
pM2iLw9PnNhUww4ciC5e9D/JxUbpvVH0uFsjC5OOjs8+s7iu/C5sSxRJINgZ
VQHaXOTKU0EbpfdGwW6NLMw4OuCphqDuVogiGUNdeQDj6+uvO/ZXIMV0yS9C
qzwVtFR6bw7s1iiCrjitYrTCI7dv30xTxHo4Dx70MA6glGDnksuikSUh7kFv
ttkDgMfSaDToPTq6wwPpjHHsIJCwtQ7j+ClKBpJGk7jH6urq6OjounrtTO8B
RAfIVcroh64MC1qliB3op7uHwGT89No11Xfpd5GyDxAa4+PjtupAuwggV0F0
oJ3GQR2aodn+WW7bFi0sONXQ4HA/fdrWxZPxU/UvhSqA9QHYCyA0Kj1BySUo
MjYcIwWMZY+9zdXpMkb8u99Z/I2S8VOs2nn9ulbnQJsA3bter1NmD/UwQMaC
6EDYdO49ojt3FnbYCKSDUCCMnQ+WfqNk/NSI2onqHGgNZvrx9h5A0sKjU/Uh
e2m4ITSibEF0IH2SA+HevZvnOFYNU5nvkIqfGlRpvKZzcKqGDhBzZAhHvGa7
m/7+6N69fJ22cn2S3XDfPtzr4SxQmZ4TJSqAzHYN8nTczzyCl4/uGqimu2CP
+HPnoq++MrC7i3RazfgOIVUeNYWhEvz+92UTZsVjt1oB5MNx2h1ToUOAkvhF
HfE7d2560kxFb3Nvj3z2wTH6zju4t4CcAeXH0vbxyJRYTpmEDpqZuJ1kND8/
PwEikWEIIIFBDpe8iDYE0JQPM6vT0uSGGLqBVZ9u3lT9LuHHiOW/Vww36cEO
OweCVd5oNDgp1CyUBm0rzqFO/TRGuqCndFpY1WR9A0QQeYZyqUOgEjHiLOG2
U6FSN5F3V50DOZPcEkQWernoUPSkpWCkC3pSp9VZ1UIEkWcoyx0CgcSINR2Y
R464u1X7uZrorAMGBiA6QOtotVolr1McX1KEjz5Ce/4FY51W320iRBBNfUqC
Y8SatN85EMwTFhoO0Gw2EVEqWrd5IXmwQY1Yp9XPPopFEE19SiE5cvH11wPq
axQ+LXcOBP0ZtGgWGm4AcsNFLwKC203otPqmd9KszqpPR492KtlffbU8O7pr
GhX6os3OgaA5g/7MPg2XaLfb1p3PWHeH2YTqXLP6X/+1MxMt9/XZTJLKzVwI
jTY7B8LZ1wy+nWlXYmFhoV6vW9TxsC7EWKfVT3rPNatRc9W5i5E+rSVtgrbM
GaEesbS0ND4+vgaavA1gXYjx8aEfs8ia1epy4IsvOq9XN08C7BQaAu10DhRh
Qa498Q4R+LbS2IScRKEfs8hqsOpyoL8/+tu/xX3c9HTHgYxNUu1i2ukcCLox
aMgWx5syMBCN1Ky0N6ElUWjWtWXNatvdzBTDN13PU6fsdQ4ErRh0Y+6nERRE
ZyQr/QpoSRQ6Oz1r+druZpYN32gWC1eU1qpR4GgjNsBkWAaIDqWEUgJoSRQ0
L0euWe0glpo19ALJLNXh7/8+7vV2qlFAXNgaoc4wAZFQasVTTctBxar9RSLI
dmSkKCsS7n/nTv/bn8Z//3e0vLVQjdJut0HT4Myu8AFyw2KQJULmoGYFzsmT
0YsvdkxpdRFku5uZJCvy00/9SwAaT5+mCD1zWgGcYpOPwJldVcHS0hJohsH5
oLICR1EE2TYZJAlIVnuXheZFMVeNIgZAc7y1chDu6y7JrrFajBaHb5JlLMn0
dUvRnGPHzLRcM0hD1SggLngAdKVh3WZxA6uHPsgKSRmLSF8vSm7XoXAmBDUw
Szvxm22TrkGgNgsWlvYXiIu7d8v9rh9+SOwtIKdwJtgQSgRqV6OwbdJl6BKb
xbiXAyyRhw9VgzXwYuP7VBzKoE3ZEEpY6i0Ptk26Fd1gs/z85wYahCazIlFT
Ed96y+Q+TToTvFsrGtUobJt0PbrBZrlxQ3ePxFmR2N0KbwQl/JlnzGzVlDPB
dsxocFD2vahbnm2THkHlbRaDzcSwl4I3wgYxMlg215lgL80MPu6rr7S6R+aB
bZNeA8iNqtYLGGwmhr0UaBqmMleL5LalNLNUgJXWPTIBOH0ajQbbJj2I5eVl
OCympqYqlgNssJmYr8Y+EmeCpYiz0c5as7OzIyMjXA7fy5ibm6vValaq4SzB
YDMxL8O4S50Jxn2k5tr9LS0twWqZnp5mNYMBOufExMT4+Hg1DFV9/6FIB4X/
t5qrCRcnOxPM+khN+LIqtkgYriBCLRU4SqoyAGXv3s0bpjkTTHUQMtHuDwyT
iimlDIcAiSFMVyv9f0zBas65Wd66pftNUxGQ55/HBVy02/0JJxicJhVzgjGc
AzTS+iOE22jFS5YUTViZksCx0mKkL4ECYBlMTk5WNejG8ARQOUA1nZmZCdRs
cdyMC7R9Wtfi1LhtsyD3JShDq9WCX5+zuRgEgMQAuQFqaqARN2c9hIW2T/ar
WGvaaQNLS0ugYzSbTTZMGDpYWVlpNBqBSg8Vpf3AAeJ+T2n7ZL+KnaadxiFm
8QCW7fQzZ/QgwMgF6RG07lqktBN6bBZp+zS/ioWmnWYBJwLoGDykgGEJoHtM
Tk6OjIyEKz2yIE/HzgXNrxKqhxkkBmiScCKwjsGwjdXVVZAew8PDc3NzgXpN
kyBPxy7CsWOGL+gDIPlB/oPE4HAJwyXW1tampqZg7c3OzgbtQyNPx3Z2QYcA
Od9qteBXA8kfbpyd0e0A6TE9PQ3rcGZmJlDpQZ6O7eyCTgASA/RD+KWazSZL
DEYIAIkBcgPWJGggwfUTI0/HdnZBywj612H0PGB9wok2PDw8MTERVqY6bTq2
ywvawfLysvBEgdxgicEIHPPz8/V6Xbg+QlmutOnYLi9oDvDMRcLn2NhYu92u
gO+awXgMMKKnp6cDUj9o07FdXlAb8JzhacMzbzabXPDOqDRi9QPsa89RP9p0
bJcXJAGeqohtwXPmandGNwHUj7m5udHR0SAESGSsBMziBcsAGoUIZsFThWfL
URJGFyM4AVI1gLiYmZmpPcLs7CyLC0ZPIRYgYI9PTk6Cgh1oBkgA2NjYWFhY
aDabIGxFfwN2XzB6HGtra+12e2JiYmhoaGxsDHRvLpcQAGUMNIrx8fFdu3Y1
Go1Wq8XaBYORBUgM2CkgPUCG1Ot1+HOvFWnCEwA1DKQEqGGiR1+vPQEGgwyw
WRYXF2HXwGnb19cn9BDQ1UNJCDEHsEHgm4rpvaBXwDedmprqym/KYDiG0EPE
KQwQoyrn5+er6FZdWVkBsQD3DwpVrVYDWQF/gL+CXsE5WgyGJcBBDFsMNtrE
xARo8qCNwP/Dn+FfYD8GtftAa4L7EVJCtPmFuwVZAQIQ/gXUDHZvMhi+AFoH
6B6wE2E/Cm1fmDZCLRFOEgEbyj98urh4q9WCjwMrAz5XCLShoSH4s5AS7Xab
/b0MRuCATSrUEuEkEQAbp+8RQLaMZwCvnClA9sV9jwEiQvxLs9mEV87NzcHn
VtGAYjAYcoAts5QBaCZFciP7Yt/fgMFgMBgMBoPBYDAYDAaDwWAwGAwGg8EI
FP8PorMpSg==
         "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
        Column[{
          Style["City B", "Title", 20], 
          Style["Latent       =0", 
           RGBColor[0, 0, 1], Bold], 
          Style["Contagious   =1000", 
           RGBColor[1, 0, 0], Bold], 
          Style["Susceptible  =0", 
           RGBColor[0., 0.5, 0.], Bold], 
          Style["Recovered    =0", 
           RGBColor[0., 0.5, 0.], Bold]}]}}, Spacings -> {{10, 2}, 1.8}], 
     Grid[{{"", 
        Image[CompressedData["
1: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
Y0f41SXsSsKGLTZVri3GZFentSmU+/bt28Skpo+Ojq6QK0lTkKdVmqSKlUZj
Qw13EwqxzG1Yw+Yw7Oq0NoUS66+gzF0qAtVcNHUdmwfBc1kr0ptL2CAaN8+h
76laalMoCfkYuPmwGpincKT6g7nCkM1akd5cwgZx717z5jn0PVVLbQrl6urq
CNhNGLTb7bm5OeLvysHEIktdx9hnkmat+DFPJDIrZOG1a873VC3rUigJdfH3
tmD107LQNxfNuo6xqWLqd/nszfXSS+FXnbDpvH7d+Z769FPTTVeBxcXFVquF
uqnZ2dkp2MKMMOzjh1Ub4MmAhfL44/7e+NWryWOPhV94wkYTNa+5Khuhdk/Z
Nc+cn5+fhI9jsLCwMAHXdwSN65jgo/BcfghvXFqPCu2pyXNIBcXx45U5Hrls
hNpwDLaZf5LMzMxMG0+SVeBv3WOIRnTLgTcuWalCG1ZlW2ETCRidCQUQnJzr
6+uDoBT5R/z7MX3jYGAyJpgJe4onT5ZkPtMSCep6aJAxPj6+hL84T6o5FvFn
iWfTdcB+7O8Pf0vChjJra5ATCbLZCOTu/WWgJY1jS1p4EP8I+Gy6DrxrbG8f
oTBHZWvYJBKAfCDXZVSDVtzaarUWFxcJH7RFzF7HbH6dpKcKufjTn1p9HCQD
rS6jGuTmXVNTU7NgNQSBiZcjSB/g9OFLeqowHhpWX2KcFeRhKPwpHCjUprVc
vOj77WTz66R6rqd49qzpX9686bAdqCXruolu33/o5A0FQrYYM/RZK54jL9n8
upgtKaELgiioTRO6cOHBylTr9sSJ8LddpHE+xvT09MzMDGHXEqpaHKKYteIn
8lKaX/d3fxd+AQgjZNYQiFMjNTY9bNyb2K4ddBDiRx4iL3fulHzv6qqMWBKW
M2sIxOn+Ms5vB50BNAfUJk7B071HD5v4kVN7oao1QZzniDASpoZAtJnPBikZ
lhMNOKvpS0Hu65XCnZej9Htj8GxIplnMTA2BODOftd1EU3z99deX9COYtXAb
UiH39cpBH3mh8cKF8sfLPhGGQEluj5mpIRBn5rOZNABtoU1rR7aFpaWl8fFx
8sdrQOvrVQrlwX7iCc4nXKpvODJSRBR0E5UhEGfms5k0sMzd2tjYGEA1CjAH
ua+XBuxvqqjnuKjZB6Xro4/Cr6guIFhwx48HvoesIRCDVZu7N7PKEVpFWxaD
g4PrsB/ZQevrVQveN5XTc8AgchFJUYpNnOZws/jUU8mVK4HvIWcIRPVaf/lL
w91pv+vtJU85CH29DMH7plI9x1FieTYH1YWjptcYfN5N0RCI5LXCkWeWLMrS
Q4O50WgKwh40L+llfFOpnuPCs3HgQPJ//7ftzpWjBs7N4MtMSGCVIaBe65kz
Ie/t+ecNdw9Loji5vCWPXGbXyZPoN4LKQOPqjKH0HHeGaqnfJoaojZBAzQkL
+uqePSHvzTg+wlLQurm5OTAwYJU1yjJDjRBN5kq8AT3H3UaGM6iYGSupZQ3l
hx9WboGDB0PeGJyhxr10uBrvWF2Hq0kFIZrM4uhQeo7rjZzLjI0zRTksgzsu
DJk6A1MF+8gR9M0fO9apimI8rX7xC8NNw6AnfAe63sLlS9y1K7l8Gd36jCXx
Ruk5fjZyquVGm6IckPD2n302/G2Y3OdXX9keNMoz8OWXPHO+Tp82t/HZ/BI2
fhJ3x7RJ6zOWdA6l53jbyOq0iip4FwkPHWqM+WbvWBsYYFPUT50y77mRsMZB
iNlfHpJean+g5T2k7nFvG1lljMSZohycngfldMGPff11bFNi3rwLSmdjP0GB
4m9M7cqjR+G+rfoGp3LJ50YGQyzOFOXgfPrp8Pfgh6j0wp//PLl9e5tKPDxs
PpQtB94pBpTCWKxWmdXuHnnE9FO5kfSMqmw2I8vnRvY/8bYpNF8VPcVsKB8/
lC0LRueGAsXFQcvsgh9+/z7lufF2Fy9O3fW2kVOTULwcQhPy7XT2JE9KdAbr
S0wzuwilK7xJ4AcPlvwc+ApvjS9Sk/Af/iHYaoyTTYnG2hBbA8VXeepiZBIo
MKDGID5w6xbu56eZXVhbY9cunnBVlkVnjjdn/p492+yjxx7z9L3CSAjrGfsR
WJzWA9ocFb/jevjA6Yx1CKeZXcGznoo57Z69DVldURwdPUWQAPYDPkgD2siD
D/RAtA6bn0crACBjUwUpeNZT8Wf6LxjJxonE0dEjfPPNzoHF9bqRngoQGiA6
UB8xhFE0luZqyE6UC75Nijnt/jOOiq0/Dh0K/FhcUKbrpnzrrQfvmjHoj8nE
cDdH3kgi0bbYkSMPrxA26wk0n48+ytspQUynbHwNHnv3ZT39xV9IhtsDOgr6
Gw9oW1lZGYV7cIP6dqM2xniqycSQ9ZSzEIOYTmDnKnTrLNo7d3DvOoZG7t/7
Xj7J6tFHba/pNOhvNqCNPJ3NBJubm4ODgzplhuwHyLkiI3EGphZiENMpbdDU
lLoM7K9THi3zd/2DHwS+59wGV0lW5LdTOgowBdeSM8vuoCSEY1BjqpCfYdEV
GdzLoagsxFDq9NtvxyJC2Xn5Mu5dX7mSfPttGEX0mWd0G5ymCv75z/WbjaVt
nUFo1amRolBjqpDV6dKJijE0ZlQW4pdfhsk4un69O3t/gbLxpz/h3vXwcGfn
+peitY3mCDasefO64mh1wjqsUyScGikKNaYK2Q8wNFQuz4vPzT9BOw1lKcBW
6koj5d13S971xx/XezDAcrxxw+ut1uYeEBRj2ig0ZRZhI1AGMsq1kaKgM1Us
jQt9xBme2+3bXteMYth2Md0XRiltrG3u+221vN5tbaM5gg1LHoVGULfqZJQH
I0VBZ6rY+wH0EecgfoaAOxe2kn32YGxM40RZmKtV7DUFGqbOWw2wtQB79jy8
Zq5Zd22WOMForZNRHowUBZ2pYh9C1UecYwjR+iTske77vcWVHK3v13AmO+r+
lVKt6flQlSVOaG68Y0et3PNjpCjoOo7arwF9xDnaNSY0YemEkZh9v4Z7ytBC
v3Klo06Y9HzI2ezkNhHa+2dvuKFHTa2KpZej9od4DtFKuxhG+pzWbU/U1B7Y
2vr54Hfvdq5m7slJbXZy4l/d/U9MTCzAQewRo6OjK5qaO5sQqkkxr88Q7enT
AVZsVzKbTZ1FtNmw2MAH2NGvvZbPID18OHn55Yemh7mQTG12xrSobTe7DkYK
y8gDc9RX3dqEUE2UQz8hWheDpHuTxWzqFMEroKtIDnwkW+G/P/zBNoFceUrd
3D+uMwYT6nPOU5AbfxkiksxSYRX7+zu9HzXAtnjyw6phr1hkgyZY3RU+ZVO7
ob3/kZGRVbCAvMN0HhN2X2OVQ6mpjJxV0w8VwOQkdLjyQPtOm/aNso8coV9B
e/+ePaJZmHbywe5rrHLYa8HZZvGRR/LaY/b8vXIlUqFR5YoxB1ejbFr6UN39
+/eIZlHjHVVA7WuacmgZnM06MYaHk6tXw6/b2Ajb/yc/Sc6fR38QXn2a1PT7
33cERfDfUkuNK8YQXK0PYGUSEv9U4KYaQTyiWZjORzDf13rlUJNfx+XlOHYs
+Zu/Cb90o2K6DrvMlXTixLZdqS9sR4Erstzfj37mINvrQJ/4zAfT3ukmP3/3
7k4FaGm2rUl+XQz1s11GWLd//OPDt9BNrqSsUmE+rsgkM5w3NfE3v8H9fZ2Z
j4houARiJBNqX2ezbc3z64rBWbgO3N7Nm/EG+2Jmzn/VUFdSdvGQlQrzzHDG
9Nc9e3BdRwzM/CDh11IgxrVgky5AGhDy6xRKD5Gwxa2NY4NqSUpvPrsGbGYg
ojLDGdNfldzmMvO3lI2hoaF12IYRYGFhYQJkOAogDUCWmjwKEOaGD620Ji6r
WAYUGk0cNFZ1eDXCy8GVfZFgnJzq5GJMf03ltskzN4gBxaNsJDQh5qgk4fDh
5NVXO1lGqhAgnsKH558Pfw9Yag6v+F1JBw9azi+jrFV1cnFZxDnRp3/mBjGg
qJQNBZwc86DrwrIx1Gf88MUXw98DirWHFyy/W7eaMQCFNL+MuFZh/7obnFTq
vjN210SlbCjgRFnMddOOePVqkzyKZ84kJ0/WnNdceU3eSMv/JEw5Z4k61cpt
vLsmVGK5HghpFo/54I2gYcbvUazqGFA8rxs60gUzv4y4VuFF20ed7BPPCkDE
Pf0CoXI0ccnZc20tXo/irl31lb/Z87qhkt94fpnVWn377eS99xC3lP6bMfGs
AETQ0ztMVY7eTKX4/PPOb4/fo6ihOq/jV5w0NJtfxrBWjxyp/5vUGLGJERsg
WmVDAVSOgYGB+rz3aI9dp0wPO0uPYkBtTf2ERrunsEWglmtV87IcGCNViFnZ
UDBKfe+mdGUU1WFn6VG8fj3wT2iokaJo0k0um/Nz7pztN7788jal5fjxTv/z
Y8fYwsR1iFzZUDAqtUM5jnz2vXdNWCqWHkX4bNiSUvgJTXdPabrJucj5UUoa
XLkq7dAmTGyA8fHxJYJD2DuMVA5U6mzX2DX289dOngy8beEnNNo9tWdPp48Q
SL+jRztTAs+c6fyi559Prl1LTp1yldZ78ya6gTkTTJvkRICNjY2RkZH6wAoq
dbbR7kReBp/g9uMfh38IzaJhl1oHWkH8no0s6rsWf/d3iNRZlSz3xBP8r/Wp
px7+G5RGOIkcrZ84e1uhCOfm734X/ja6koQwsRZzc3Ntm9bKIWDUCizBp85i
x+rVMm2DnMbC3JlFjcjK1hPeVNhq+scfb2SRoCGxYWLdxloHZSOqahQTUAwr
wyg2b/5A8SbdhXtq5627pr2TWZ1f/lM4YEP94Q/JN99E4ZXFzls0J1+vYN38
97jhsB0Zo0pQVOQcnadgpOjnebnmhx/adhLIVmj6cVYfO7ZN+YwkBOyuZNIk
TGwAb1PmXcBt3S5L//yqLg2NTonU0CSJUcOhoW398T791LnJkD1/u/Wl5Mgx
5blZ7tAiKC19zAES6coVq6WrCX41Ivgb1tIfGUnOnnX7FXA0pJLqlVfCP3DF
nTtdDfLDDh0rQ4T18gSMjY0tLy87/ALlWc3m9cF6fvrp+ndUW6rciODvX/91
+HsQctE61yL4jAMugL4EppanH5L1rFr3R+rE099/v3PeZd2Jw8Mdi/vChfBr
rG/reHr33fC3IaxiNsRvwjfftNwBYQcq8WJ6enpmZibAF5P7I9U2r47Bq69u
xp1vX2hJOJv+9V9xH7GTG0tLS+Pj4zZXiApRNDY0L1U2qTuLpHmXIytbaMPs
2URoF0YF7LJLly5F2NHLBo0oyuugoZ2shJHw7t1ty4nQLowKUOmn+dLG4kEz
6vIiyRBwR0f1xfv3N8CH7IE5hYFwBpHisGtrayMjI13gDi0CNCjQo0L+tNoh
fb2QIfC3f+vqyl99hRuq1ZXMKQzYp0GNw4IyDyq93faIF8Eiy4ZD+hrdycpw
WX79tVFqCraUJrfgl5e7pPyN4EHKKgzYLCBSHNa0jLTJCCAY5+frE4NVAhjW
SIlqRIsJ0zy32iD17du2C76hw2RzzyE7sN6EaX8PpdO+9BLu4/jy1fBqvBds
bGzAz1zjSKY1whdfILofEKxROFWbYtfn8tz0QWpscV/pgndt9xUHRt+8ibsC
/PzPPusIyexzePLJTn7OX/1VZ+/7FH342ZRdGUOpwsrKytjYmA8JCaequZ55
8CB6GqNSzmEDxj+u+u5dneFcDFKjtAXNgveQrv/GGw9v3lLc/cd/hGzDiG/5
1dyiVxp8ODpACGNjB9imQKlyHnkU5vx5ygPkGoPuIV0/jdPZiLuwE+gMpkIX
nmv3uzWKcO7o8LCX09Mq8pQPctMnpjHozlWybKcsmrgLm7eDn4nQI26NItw6
OjxEVLOnVczBR7zVvA32ZT4KrsV4NuXJRNydPt2ZKJFG5EEl8/M6Tp58+G/q
gLaecmsU4dDR8frrzhdA9rSKueje3Gquym+xG4P+AK5P81zCVbS1zOo+7Qa0
9Zpbowgnjg6UO5TGnHIe7SSp5583Wp+G+S2JxYLHqmTY1iLFDO2iuHv88fCt
Gq07evWmW6MIZkeHH0NVDXtNgXLHwdIdHt62MY8dc3KTZ85sU8WrRoOZ+APt
p3tgVTLLhKsUSokC6QEPOZIyQAvbvGfdGkUwOzpeeMHHqy+2rCe449Kz25tH
TikPWXvkyhXTdouWtUVYlez4cdzfFzO0XQxfs6dFR68ed2sUweboaLf9LYBc
7SGc2iY6cGn0IWa3akrL6R7YCOnf/z3u9nIJq2GDqub3iYG4NYpgcHSAHPY5
2CjriDM3jnIGjgLNrXruXKcdYjYQcPasW/vdskwbpZLZZHDF3AyBGhMXt0YV
bMWpZ6U06+Ay/+rSUxu7R+AsziktyuRx/QTgJ6NGqBcDNDdu1H/LqVPJ/fvJ
t9/SM7giNE9K79MYXpttNg3wWFqtFrFHR5ASeOWTwX518dRmSer2+QRqR6hr
fAuPP27U2xC+4re/Nb2frNs25mYIJPfy2trapUuXNlhHQHYZQHSAXKWMfvBf
Ap86uFh6wdkndft/AlV3YuJbADP/zJn6rzDx/ORcRtE2Q8BnkidbQmNsbMxf
HWhjAXIVRAfaaexfNYUlrfTww4dxH6yK4Jt4Oc6fr3ROBlHOi8qhuW/BsAvB
k0/qLlhMWI3TSMFnkidbewGERqMnKPkERcb694NlE4axrPppJlmOVTZCEE9g
1l1Dk6LmLFbNx/McqqimZuAzyZMt3Xt8fNzt7KGuA8hYEB0Im64Rocx0/WuO
nvX15Nq1+gyloo0Q6gnASeozUyJbNR/5Srh40XT1lqEZ/XjjA0haeHSmPuSY
K0RyfOop3co31/NziyrUE4Cj3/MRr99N8awEchmypGrYATFHJtoKkVJq4hHk
kG6oJ+B/Rq0+Ay2SlWBRhnxvC7TPChRM012a2M2yuDZsQrpNfAJkajLQInkO
1I3fHVOhY4Cp+PUQuH/uOeYL5lRuy5BuzKkLvNTPNQv+HEgh160bX5iYmCB8
UFAKkMAgh+v/Lh7b1pA5ldt+vFfjngCNtdXoATu+kkKuyZZV3mq1JCmUF6aD
tqNt2KJZZilYxns17gnQqA/T+8/ioDbvUpBMckdQWehGoqPYsKWK6mj4zW9C
rv+sys013quqQ9evf90lIqW2Gt1PiEfZI3bNuxJC1oEAAxAdoHXMzc0hPgPv
9Ntva9rchc1MzqrcLsZ75Va1uVCNmbU/3MMPpNojOYB5IkLDA9rtNj1KVXo0
BM9MTlVubAzx5s2aibcahBUd8MyxI+GyrE2N4PLzvP8+Q2/VaoD+DFq0CA0/
ALnB2YsgbGZyVuVGxRCrckpri1UVAnpQ05Oa5oqpSo3Ilu2fO8dwn1eu5Ife
svofQHMG/Vl8Gj4xPz/P5nwOe/LmVG6uGGKpSsa+s1AcGio5qQl2U/GnuUh0
10+4swacfW2LhFIBGYuLi+Pj4ww6XtjYZXHxcN1PNjkkeLPNDz+sfxHj4/XX
KaZG8LYEPHw4efllLjOkCqAtS0ZoQCwvL4+Nja3DmWWDgJnJVSo3Syw1TQ4J
3mxTkweV6wl282ayf3/ldYquSMaWgBcvOlUwFFRYUGpPgkMFvq0am7humauh
5tApjaVevYq7vipWDSs0quIOGhXoyJFtfVNTV2Sx8SDjnDXrySa1AN0YNGS3
400FxlCN1Kzam2DbbbHoA+bZyKlHjpCI7tM8OXu2ZLOXwnBoS/rD/dhZLttq
gVYMurH004gKqjOSVb8C7Axl+0SIP/8ZfZPYvaPR+V1QWUa1cQds+3c/dpbF
ZJNawNFGbIApcAwQHaYJpVUgz1CGnQLWsYdV6mHK6jvvWF3BZFaCufTbtSv5
93/3ZGdZTDbRA8SFwxHqAmuohFIrTzV5hrKLVM8isOoNdrIhiE3LOvTr12t+
QvBi1Sq6iYrOz8+DpiGZXfED5AZDkCVB5vlggzJ37lBuyUPIGI5Fm63d318j
Y+PsN27RZqcKcIpNbkEyu5qC5eVl0Ay9+qCwx/TQkGmSgM9krdR6shRQGpUv
eFY/9oZJUAOgJd7aOCj3tdfsGsIxrb89/8laJ048rHCxjBlV+aij6jeuSG2z
UwUQFzIAutFgs1kMQTimq/ZXwGSttMIFnhtZw6nqAhpbKS5TWauC2CZdA982
C/aYPniwM/ggV9AaPFmr7ztdyCaZtjS2EltHMr4wh9gmXQbfNsvcnNVKhuP+
woXwG6pvSxf68stk927ix0u7gEbSb1yRL2dDbJNuhT+bJc6QAYFHjiR799I/
Xpq5HUm/cUWOnA2xTboenmyWOEMGQfj22yWthBylcPT3J489hvuIdc6G2CY9
Ah82S3DXRGwsthJy4eWAd4otUbTL2RDbpNcAcsNhvUBsIYNImJPVH3+MTmfV
MI2lYksUSYDTp9VqiW3Sg1hZWYHDYmpqij8HOLaQQTzMBZ3feovnsrlYKrZE
EYmZmZmhoSEph+9lzM7OjoyMWFXDlV00/A6Nk7mkDqwDGT5uWDpELlHUYnl5
GVbL9PS0qBkC0DknJibGxsbYDNWoQgaxMZvUQZ5PZ1I6RC5RLL8Y9yIRdAVU
qIXtKIm26jM4s0kdLPPpzN6uTZ4GGCb8SqmgWwASQ5muVv1/UsTp5fDcyafI
bFIH13w6Z1BOMDhNpBBeoAdopONbYGi04n9U64sv1tv1wXWh9MH6aVpCAiyD
yclJadIlQAFUDlBN7927Z2u2FK3sXbtMt8nu3Z3qFfNtpRISTOx6kw1LTi/X
c+/ehzoD1oHsa+DI3NwcvH3J5hIQABID5AaoqWwRN2VloxIMQAjcuIH4+9Jv
LEVtxOH+fSdy4+LFh/fgN03LBMvLy6BjtNttMUwENlhdXW21WpzSI8EnGDhK
SKjVTFy4aHI6g5c0LROoWTyAFcdDlwS9AzByQXpw6q7YBAM3CQkPUaWZ6L/3
pZdwQqO/v0RncJymVQs4EUDHkCEFAkcA3WNycnJoaIhHemATDFgTEnjuE5up
8otflH+Fa6lYAZAYoEnCiSA6hsA11tbWQHoMDg7Ozs6y5Q1iEwy4Z6PTv9fc
0Dh9WnfPfqUiSH6Q/yAxJFwi8In19fWpqSlYezMzM73uQzMxNE6dKm8bWApn
UhHk/NzcHLw1kPwy0EQQCiA9pqenYR3eu3evp6WH3tB4/fUw2lEGIDFAP4Q3
1W63RWIIYgBIDJAbsCZBA/HXAzk2FA2N4WEf7pc6yNsRxAxYn3CiDQ4OTkxM
8GSqNxeh3C/bsbKyojxRIDdEYggix8LCwvj4uHJ9yHL1D3jmKuFzdHR0fn5e
at4FDQIY0dPT06J++AQ8Z3ja8Mzb7bYUvAsajVT9APtaon4uAE9VxbbgOUu1
u6CbAOrH7OzspUuXRIBwATQKFcyCpwrPVqIkgi6GCBBLgLi4d+/eyBZmZmZE
XAh6CqkAAXt8cnISFOyezgDRYnNzc3Fxsd1ug7BV/Q3EfSHocayvr8/Pz09M
TAwMDIyOjoLuLeUSCqCMgUYxNja2b9++Vqs1Nzcn2oVAUARIDNgpID1AhoyP
j8O/e61IE54AqGEgJUANUz36eu0JCARkgM2ytLQEuwZO276+PqWHgK7efQkh
YIPAL1XTe0GvgF86NTXVlb9UIPAMpYeoUxigRlUuLCw00a26uroKYgHuHxSq
kZERkBXwD/h/Qa+QHC2BwBHgIIYtBhttYmICNHnQRuA/4d/w38B+jGr3gdYE
96OkhGrzC3cLsgIEIPw3oGaIe1MgCAXQOkD3gJ0I+1Fp+8q0UWqJcpIouFD+
4dvVxefm5uDrwMqA71UCbWBgAP6tpMT8/Lz4ewWCyAGbVKklykmiADZO3xZA
towVAH95rwLFP+77DiAi1H/TbrfhL2dnZ+F7m2hACQQCPcCWWS4ANJMquVH8
49C/QCAQCAQCgUAgEAgEAoFAIBAIBAKBQCCIFP8PqUS7/w==
         "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
        Column[{
          Style["City A", "Title", 20], 
          Style["Latent       =0", 
           RGBColor[0, 0, 1], Bold], 
          Style["Contagious   =1000", 
           RGBColor[1, 0, 0], Bold], 
          Style["Susceptible  =0", 
           RGBColor[0., 0.5, 0.], Bold], 
          Style["Recovered    =0", 
           RGBColor[0., 0.5, 0.], Bold]}]}, {"", 
        Image[CompressedData["
1:eJztXV9sVFd6N8FgIMQYCMFhAzgslFmyISZLUzdC4O4u3VFRy5CorDdRUu8i
mlmlEVaDFLdJazWV6q5o5NVK0Ujsw6hUWtMnK+qurKiVrFUrWX2CfbL65Lw5
b3704+03HHO5vn/OPd93/t6Z76ffroDM3Llz55zvfP+/F39y642/fKqvr+/D
XfB/b/z4oz/667/+8d+82Q9/+e7f3L75k+3wh/e29fU14X+dP0cMBoPBYDAY
DAaDwWAwGAwGg8FgMBgMBgOJlZWVpcd48OCB79thMBiusbq6Ctt/YWFh5jEa
jcb4I4yOjvbloVarjT9G0Wvg38UL4GrxleFT4LNA7Pj+0gwGQxWxfGg2m7Cj
YfvDBh8ZGcnd3Zq6BLxXXCQrkZKfOzk5Cf8+Pz8Pr9zY2DD4ZRkMBgFwrIs9
W6/XYZPCVo3lQ6vV8n7uCz2n3W7D/UxMTMC97dq1a3h4GP4gJMny8rLH22Mw
egSwE2Ebgi4xNjYmrAkhJRYXF+E/+b47JaytrYEwEZJEfAuwd+DPIOjYkcJg
mAIcynNzcyAf4KQGpQLUfthi3XRSg7gA3QOEIQiQoaEh0J1AqoBs8X1fDEbF
AFtpdnYW9Hk4juFQnpqaAnsETmrf92Ud6+vroDuB3Ii/+/T0dDcJSQbDLGDL
wLEL6gToFXDywn7hMxckBshPkB6gh4AtAzZaLwhPBqMUKysrvDVKkRWq7Axh
9CBAXIA2XnsEVsVREEYcSI+RkRGw4FiAMLoeSXEBf+D8KB2srq7Ozc2xAGF0
K0DNbrVaLC4sISlAQBVhQ49RdYABIqzyZrPJ4sI2QICA0QdPe2JiYnFx0fft
MBg4xArG2NhYu93m/GrHmJ+fFzm0rH4wKgE48ljBCARJ9YO9H4wwASsT1iec
caxgRGAjzMxE4+PR8HDn/6enQQOI/D0TUD9E9S6nxDDCwfLycqPRgJUJ69P3
vfgGqFhjY1FfXw5rtchruBmEhij8X1hY8HgbDIZYimNjY7wUO2i3o1278oVG
TNBDvAJ+MiHk+SdjuAesOnF4dY/qq2lcgKZRKjQEA4h0gFEJ0kMYlb7vhdET
AIkBpxWsuu6RGEaMi6IrZAlyaX3d8ldSgnBig/RotVq97pJiWAOcTbDGQGJ0
lXPeiHEBmomi0BAEZSYYgPRoNpvwy87NzbH0YBgEnEei90VV2uOowpRxMTWF
kxtgBwWGtbW1qamp4eHhmZkZlh4MTSwvL4+NjcF51G0SQ8CUcaF+HcGhIYdf
EoH19XWQG3BGcLopgwZYQqIjX9cWqxo0LhSVliQDlsOge9QfoTsPC4Y1tNvt
Wq0G5onTT3WcLmXQuBgdxV0K5EzwtgCoHLAGZmdn2WxhlGJlZQV0jMnJSad1
DUYiGlixY9C4mJzEXQrkDPm2HQIkxvT09OjoKJstjCKAYQKLBI4Y14aJfkSD
JnYMGhdzc7jrNJv023YOOErAZmk0Glwix0hhYWFBKKWuP1g/okEWOwaNC9hQ
+/YhrvPgAf22Pekn3lYII0jYOk0Ul7dmRENH7OgYF9nb2LFD9TrwWGi37Vs/
8aaRMkICWK8zMzPmrVf15a0f0dAROzTjIhfqt9HfH339NeW2gyl+8eMBY4QB
ODJAYphP8lFZ3iMjm+rHX/0VbuemIhpwER2xA8sedqXie4VxkQus9NuzB33b
4RW/iIgbF8f1FObm5sbHx8331VFf3oK7d+N2UBzRkKg06mInwmx5yVGOjedi
CWI2yOIXMFvAvJ2amuJAbdfD7m9N2MtYrq4qqTRysSMgPDAqKgd8L4PxXNu8
fv2JZ+ns2ejChejMmejwYUtOVHEGcYZYF0PYJrZ0S6y6TiCIi4cPiUIjFjsR
Ul2BvSbfaDr344Wmnah21xXDK6yfC7bV9b5HEQ2dw10EUhXVFdhcExNK++vE
Cf+igECjTlS2WboPjn5TB+r697+v9XZQ2tU9MHNzSt8apNC2bf6FAI2mnahs
s3QNiDokIbnItroO13/7ba0rDA1F3/424vUffVTylFBpGwHSghOVbZYuAEX+
k5OLsOmXWIIcc++BlJ/IoXlECbTQQYhtluqC+NvpJBdh0y9RFBEN9x5IyYns
wA/sgNY6CLHNUjkQdUXN5CJs+mWKEi9BHNGwrdIUfXouGg3/u16fNjsIsc1S
IbTbbaKcBzNEcbHlnsKo9MssX3qpo7EkJUM2omFVpSli9kSmZZ0FS5sqgdB7
p0Pqp8rIApTDyclJtF0JG+HUKdxiy10JOqp7svpjaSnHBwtKzg9+4GFbpU5k
ctZZmHTSQWh2dhaWpe1PYdAAUn1qagr9NtpGKLKLaSqBpPojCuB8j09kbCJ9
+JQU+RoFqMH1ep09paEB5DmlNwJ5I0jsYhBE8F9RV5PkIHk/35MnshfxdeiQ
xYtLinxNY3FxESzo9TBmxzBAhoMkJw7e0tkIErt4bS3trJBQUv0Rwvken8iW
Aijf/Kas5w/Yg3fu2Ppq27bJ1DwLWF5e5iBLCADpDT8EsYGGzkZQt4s/+qhk
XwReMhafyDYS6cXXz4rZpE9Y0+Esp/Mt/ODBAyu12AxlgNzWmlOgsxFQdrF8
XxQhhASJpOPFoBCTfP1cnzC204j6t/PhcBDrtqum/lUHBuS2zkYg28W5+yIX
DgrlSpl0vBi0mNRPeZRP+JlncLfhyimaBejJIDq4TbpjmLETyRsB7OJ798x8
Ewm8Gynnz28RcQazzj7+ePOa8joglE+Y4Alx6BTNYmNjo9FoEP1yDDyM+aU1
N4LtbpbePaK3b2+5nwsXTF781q3ohRfy/9Pp0x0TRt0nfOkSxRPS3+/YKZoF
iI7Jyck5xdJjhgZMxsH10y+t6plessqTTOaowC6Gjeby04ukSpbJ9F2UU+jt
t0OY9zQ1NcUJpVYh0kENXk53bT/3nMVull6yypNM5qh4N5rkTO47rJcjSU/z
njih1B5A0zD8bI0E+OydFPpiTZ/CgxRCZEfOWDX67DMDV3MyTyHza89Rsp0Z
UiwuLoJ5Yv66+jvCWiG23bwFFQ4MbOrtIUR25IxVo+efN3NBH5EOsFZ4HpxB
iOiJrdx+TXPAZiG254P+8OHN2wjcSBEE1cjg41JpBRYHg/bv7wxrOHassxgu
XtRxlYBGzREWIxB5Gnaz+jUjBSrhYFhjb7/dWV07d3YIa+zq1U4wV766VlYQ
c1eN88iRzdvwHtkppcjgMqsXSSxQlawSqqsE9GrO69DE6uqqi3x+HU9Cac4h
rLFXXil8+/Hjhavrn/4peuopn5vxmWc278R7ZKeUIoPLrF5UZIGiskrwrhLQ
q2HN8whaMkROnYtMfh1PgjznENaYSufe7OoCoeF9M/Y9VqW8R3ZKKTK4zOpF
ILSz8VlCpSFeeRBVV5yIToBdqZtNU/zgA60VmwtYYwMDlNUFb/SraQjGqlQI
kR0J4VkdPNj5HQ8ftvURsdFBUGlIXdMdadrdBZGCa8XKk1imBE/Czp2ynEPU
GkumgmCbj1lirEp5j+wEwjffJL6RFKwXg++5X4c6bHmVVSxT1EAQYV/kFlnc
u0dcXeEkSyRVqXDuqoqkBuvBVAHRwV3CVGAriq1umR45ovQykDDnzxe++MAB
4uoKJFli+/bOt0tKwnfecX0P/f3RP/wDunlagNQI1oPWDbo3iw45QGLYytVX
txpgs3z+ebRnj5/VFWyyBNj4n3zidBeLsllU87RgqeGpMJ8p3V2w+HywajbI
LliuP/whRW3QXF2BJ0t8+GF+DyLjatJrr+UEuP/u7/w/AQK1GwRxFnoR7CaF
Yld10iBdXOzMGHIQ4BCrK/yDNfZXJ3sQmfWdFrVPDMSIw9JEgyBOJc1ifX19
dHTUYtQJq/wLk8HxAAKxusJPligKLJrynd64Yex33L79yZ+FXgQ6pPsnZqJB
EBypsEe4MWkSjUbD7jg8gvJ/545rk0GsrsCTJQSLfFCmzLqiEDzhF4HDKKkX
uXcfyYfjYABCA0QH+0gFKLabvL9cFljlf2DAtdCIU0EqkSxx5kz+0zalLBWp
NNjfsb9/SxEQLBvH3Yf6DFfls49UAO3WkNgOkkoi7Hp++mmfq6sSyRK5T9ug
spSr0tDkEtzq/ft+AlWS4ThUsKMD7dZQSdzKFe+BK/8idpBUosJXOXKftkFl
KTdXKvDfMUXQoi3YFOzowLk11BO3stYxtmOt2fUjj8Xcvh09fBhu2gb2aZtS
lnJzpSphxAmCqWsNvezoQLs1UIlbWetYfT2rd8RV5KFD0be+Fe3du+UfBwej
y5c7qr73CbCazD5tU16OXEW0EkZc3yMXkE30pqMD7dYgJG5lobKeQTrZ28Vg
aH/+efTll5S67D/9U/97Qf1pE4ZrpyjJlQo/VA28f191bVPRa44OSraGTuJW
EvL1LNKNbGdeJX0C6krUc8916H07qD9tzfzw0sYmgdet2O/Z1WuODkq2Btb8
z226IlA6rdXBcSYWFVaJunrV/3bIZWnd1tKS+WFq4nd0H/lSJKntBha94+gg
Ztrr2A6S+GzutFYHTvu9ezuLiqBEBauil2qPKJemeq5UyK4hJ9OUesHRQS9C
0bcd1NNv3Djtr1+nZL/b9grSqoDjiQkSgIql3vdG/ccKuZzH3oyMrehuRweI
i1qtRixCMXLOnj2rml/qwGm/bRulVu4nP7FyM2CmnTmj9WCziNNRnn22EzxS
vxoqVypYBazP8oyMBLrb0aHVkMeG7SDvVB/gggSd/LXXzF92x45OlrvOFVK+
CJ16wKJKWJcLwyBdNQi1NZjMN3Q7ntmzHSQqcWhOe9DJbZjzmnlu27dv8UXQ
0lGOHt3img5hYehTu+0GCtaLQ31gfHx8aWlJ6xL2bAdJyCwopz0c68bN+VQ2
GoHvvffkcRHGBAjqRB+CzQQz0XZDHWtrayMjI90UW5mfn5+A00QflmyH0kUb
gtNehBiwT0AMHyz6r/qB3YGBTp68cBaB+NVJtdWJPgRoVPaZabuBQje1BVtf
X6/VaiAMzVzOku0gX7THj/tfhMKewprzsHQl+SoG22ft3q17Bc3og3xhXLni
emKmkPOohg/Y7hAZgLIxNjbWHQObQACCGDR5RRuNauWLVifWYIRxiEEzCyKV
rxJUMZ1+9EGe0Qf/9dAhd1/n/fcRDR9o3SHysLS0NO4q/msPIPpGrVp59brd
RSuOAL92SirEoG7Ol2ZBhGB/JWkw+pCUkOJHdCn8v/lNRMMHcneIAnRBOgdo
TXYn5BoMw6UWrePmolmmst+TuHat/O0qWRDwER6/YIo2og9efsSbN1UF8v79
ncC6YjxLueBlbW2tVqtVd9Bbq9Vq2nYNmQrDxYtWnE2wobZt87Z9kgWzWagc
TxculO9BuE6yba93GtdLHTcogO3/xhsdOW9JUmFCTi62nh2A0AMLxZg7VILP
PjPwo5w961/BUNk+Os2LaNdxRrPr3MsXFJ5Me9e/elVdJYPdV0UHqTsjy8hm
37EjiBHwwPPnZR51zeZFZh+aQZpr+r2JV17x8C3gJ3v3Xbsfoewmte5atIDl
5eUxWJkOEGzOj42lYqR5Eaq+zBmNNv3uqC5evsXQkIE8OnOPC0wVMFhMPljL
cKcjBTjAy5J6DEtFs3lRIIZYlmabfsPXdD/swD0V3KSGU6csw2nSWmgbAXSD
W7c6NgIYPvE/nj4dvfiimYujXp8MLgfbxVSlkA2VEOVxSbiUV2pu0qpkkG5s
bIyMjBgTcaULJqi9cORI/r8LQ0M/05UQ4hHBZTiCBwb8P5/UM1EpZIM7L5KW
uZa+X7vVcR2TQma+4f1oDcbkm2IGXQhtW0Cd+IM/KC9FBwGYTWjULGCX86mn
NotHTpzw/5RA6P3gB50fLrfHWpR3RoBgKXVWpyx9v3ar47i2Wl5oJVSO4eFh
A8JNPYPOe0HT3r2IkN/+/U+0pi+/7Iwg9HvzLilx5Wk6XpKWvkcjBdYAnCAu
P1EtMz98lWNhYaHRaOheBZWi4L1tC+j/tLUKa8zLbHQvlHg+9R0vSUvfo90K
gtH9KaaWmR+4ymEmjIJKUfi//wu3bQtTUOL5NJWdFVv6vuxWIRgdn2Jg+n39
tcqWClnlMKNsEFIU/LrCHJu0lYsw3rgh+7lNmRWxpe/Fbo0Fo/vmY8pNS4JV
OcwoG7QUBY9ejmS81QFfflmpqC0oJv0PSeenwQLV2NK3euIfPdqpR4j/mhsS
cnyKKZfMr6+vDw8Ph9YNzIyyEeEPoHjBgJksiYLZC5A5Ln/bvdtuCMYGhf/B
dtaZsPTtnfjJTPiikFD0yPJy2eUD07TEfCccbRhLECVYu7BgJGtycDD65S/N
1L7lMpCqlsA5MGD3QYH0vnhx02i1FKVSSe32klyn3LQktAakJlsMYf1a8DPd
vVv+YxkfMc8MlmA+XLli+JqHD5cntXqpwFWZeJVAUCqHyQbsWE8FLBK/KaOs
b4TJq1eN9aHt74/+93/Ll66X1BEQaBiEo3IYLtfF+rXguXlfosww+atfdY6h
l17SvY6KheIrqHfkCHaHBaJyGJ72gvJrOY5lMKvFOB9sepp+kd27o9/+tnzd
6ue3798f/cd/ROfO4d71zDP4HeZf5bDSG0RddIdWDMsMjTdvmlkkpSqHkU95
4QV66SIG3ie72boBFS8H/FI2hqX2VTC3illEg94neb8LX+XGpGbOfluB2VV4
5FXnV692VNCgiuiZ3U1JvwtYq77c49Ttb2DuKhWzs7PTOrP5SrG21smNLErZ
qtWiU6f8Lydm7zB3tfvt8Ext5txutydBq/cBUDZWDQ7KySLYFlXM3mRukpLf
yn1qsiWYCcPDw+5nrCwuLtbrdYsfEGCjfmaPM5vU7bemUq+Zs5eArHWXLMdK
mAEypWB7bC+m3czZvXfUegi4F6YbMCvHbPDC1+mm0sxZAY5nMxE9oupdqV2K
8VotOnjQ/5pkhs/s6ezYlN6zp/OJr75a0tFdGY7HQaI9oopNhmO4FOP/9V9c
Y8JUYnaL+W2LrTy7rQgum3KgZ7GpNxkWACHjbCPv2MHeV6YSc4MX3tti9+l6
RycmJuZBdbEPsFDATlF9NXYOsuPYK01AHTjgf7UwHTN3e3pviy2oMLutCCA0
QHSQ364OnJGibnEMDUX/8z/VOP1BX9UfosSsEIuCF+4biuby8GGV2W25ACNl
aGjItqmCM1KwYZFKFIbE+mp2iBKzKykPXgQS+3v3XfKmdmCq4IwU+C7en6dx
5uqrS0vRV18FcfQwydy+vbztcBaOG4pKSHV0WM/hRBkpHot97FGebBPI0cOk
MQ6zStoOZxd5UJY1ydFhO+ccYaR0ZZb4T39avpxCcLAzaUyGWVVyjQJc5GpD
6vOW7WQbZKAdIIyU7ssS37kTcQZVblQBM3ZbqecahbnISSXqVk0V1azUSqjr
2MZK2VxByZH06af+vyATReEcUM81CnaRkyYL2IuqrK6ujoyMKL3UY7GPPSaV
WPmRNDcXffghqxxVomgiiso1CnaRYyYxJQH6xqJGHkgREI0+wtTfksQ2NH7q
qSe5gqG5wpimqD5kBzTM8+f933ARSV1xLA2QRQR5XfZafPbZJ3+OA2fypCxC
lggICoEAXWFMLww214jUcTRCGRQYgPmjFKlxGX6NfVmpwBns7u98J/8t5HGu
QoaHr0ox3XDvXv/3kEuNlhrGO/ipTnJ0fBznJrrYsCOEDA/WFcZ0T6z/ytlh
qlEX32w2W60W+e1ZzDxC+etcHse5KViWBJeQ4X5dYWCFBasbM0uZNKjtUaPj
KGBhYaHRaJDfnoVSBNblcVxUMmBJcAkZzkaKMx47Fg0O+r8NCQcGEDNGYTv/
2Z+5uCu9mnqz0Vi4zq7YMSiBg+M49nzm5k7cu2flQ4UMd9kVhAmCem0tunTJ
/50UEVRQ9YMS1qqDinvtjqNR52wcW9brBRRD1blh9TgGc1LMBJfkTlhqiwE/
OsdeHfO99zaPhmBLBYUKqjhYELaz7Yp7Qx1HDTY5V3VuWN1Z6ul8Zgk/+sOH
LDSYW5h0I8iD/sntbMmQP3hQafK1Ggy6OFQTyex1ohAS233uhPjR2a3BTDF1
jGY7seTW4MMC3r7d8J0YUjNirK+vD1EzTlNQzdywVAp67tzmk3G8f69d63wo
x16ZKcrdCJIafNoC3rGjk5sKTJo5oGO8/rpBNSMJI1kciOEsNjw/O3duKoSO
92+siAZbhsD0wvgUw8LGAtbuZ54LIzX1iKx1G56fWCF0vH9v3Nj8XDZSmDHj
U4wAewtYL/aahZGR0zjhY1aoJhVC9/tX/BzsEWXGzO5Q9VFiVhew0TpWI/Mf
a7XaysoK4g2mvBwph4+X/Qs/B7cdZsb84osnC1KSD7BnT8f/kBIjVhcwtc1X
EXbt2qWT/aWa8RVDiF8wu8gpUkXNYL3sX/g53nrLw+cyw2S8PVH5AMILYXsB
k9p8FUEz+wuhsUjEb/z0QCD8+tfR5cv5nmF5M1hffTu/9z0/n8sMk8eOdSpN
CMeibblBavNVBM0CN9Wxs4rd1bBTYpPwNRgLZFqwKYtMZkxDSRePd5tWDx+l
pFP1dKzS0mOJZ9jXYCz4OTiFg2mE5N4vijTXOkO1tKQASpmiZh3Fko9T379m
a5bh5+DpBpUjLMt33vF/G85IbfOVC82s0fJMUeNnsdwzrFhGZFBucMeeKnJ6
uhP70HTRV4tnzpC3eS6Gh4fXQMnHA94F7y15kY1sFrlnuLSMyGw1fQgde5jq
PHQoun+/F7P1bt4k7HEJyO3NlUax2PiBYsOqKKlGXkZkdo8Lt/CpU/4XBlOF
oF304ASKZL99QyAX1CsFU2xks4A6oR55SUVvQdSod7NX4W9+07ksN+hjhszz
5wkbXA5ySEVpqqOlqHSpTZqNvJQmkNBu4+LFjrZjvPyZyTRFWKWipZVRkBtx
KA1M8RhoOHv2if0CehEXkjB7kx9/TJELZSBXqSjlmvpKx2IymX1meormghyK
VQrE+ErHYjIt0XZ2lkGabvaVgmrDrgQQ0oZzG5jdROE6W1qK/v7v/d9MEb/1
LRsde1JQmn6yFTjrhtMpFcn+1cCZVPtBl5ZkCvml0Sq2IjQajYWFBdRb0N5U
eToWs+/RJOKjR/3fBrOIWbU/WF3aaBVbEQgpHKqVsElk07GYKfZIznO1WNTy
RSBYXbqoik29BVkZZmdnp5FtPVRnphShB3P2SslCIxyKvtPyli8xQJcObehk
bhWbTp+K/O+NbjSKU1GyIu74cf/PlsksIvZMDE2XzvoeFXvgYEBI/VJtR2wj
S5PJtEpyzkM44z5TPgT1HjiYUjVCFw6larhwHiOTqchjx4hCw/24wCImp0wK
qJ/dmA7Gq6urIyMjqIcEcgakTTUeI5OpTnIkIhy9OmVuYIM+yq5OQspo+ay3
cB5jJchO0XBI6KeH3ZuSI/WDDzqNyMiukqyRhW0cgTE9+uD1GJQkmQcb1w6W
Bw74vwdmH7WfHnZvHj1aPmkazHxs2DE3sRx7gmNUCGzXrxI5Y6o3Tu+kiv3h
H/q/B2bfozJqAgjadewezI32osx8eYYJwV2grHFhx66VyA3sYwS5mpW99+87
XTADA9Hhw04/Mcnnn4/27/f26cyYcFTFG1A9RYqwNw8dknkg1XcQLFq5JxNr
8mA0rnI/51aUyA2yiEvKXrKHZGSkc2pg3wWPl80rpuD77+NSpGjuiCIPpFlP
JjajFdNVAyU3yuMv+iJOZwuLWBK29YcIeQebNswMipcubdFD4K+EixR5IM16
MmkbQQ2G5Ya+iNP0kMBPiWr9kQx5+y3B27ePu5X2Cos8kGY9meSNoADDckNf
xGmGcYUEVldaUiFvkTYMGqmX5fTBB9HevX4+mumYuR5I455M8kYog1Kz0Mco
lxv6Ik4zZyyWwIqTmLKOII/JrkLo3bhRpdZSYfL06Q6930YRizyQNjyZ5I1Q
clW1epNHUGraoyni9EuEYglcOolJMwpmnLHQ+93vopMnuXaYQji2bt/uLMLX
XvN/M0Us2kSWPJmEjVAGlNxQrWfREXGa/smkBAYh8J3v5L/s+PH8qLf3ZNek
2gm/C/cBIzNkna3IA2nWk5mMJr/+evTyy1uq0eW5H2WwIjciDRGn2Qg9lsCE
8mHv0ViQEmIsCzzkmzejHTs83w/TBiUeSFOeTHnDjc8/1+9abEtuRHmtCVRE
nGYjdCGBaeXDPOyV6YByDyTKzM/NT7t7t3zxa49WQcmN5eXlMZBjBCg2UBIg
n/uxBFY3Nw4efJJ0591IYXY9VTyQKqb6K68UOnAUDbSTJ3UaBqLkBqHungia
l0NIcqzYuXBh80O5/J9plbnmeZHOIDHzr1wxv1aRDQMDlRsRPgsrluQEc0NY
K+F0e2N2Gffvz9mVci/Er3+db+bfv2/xgFPO4ghXbkSY5o1JSU4wN0SCOqea
My0xG/hA+e2NVG8pUq1hoOF8UXuAm/zqKyVHK00ag+ThmbZMG8wGPtT99v/4
j1usmKtXrd+tWsNAlNzY2NjYBd83BEgcrTRzA34UnmnLtMGs8h+4B16hYaDh
OvoQQDM3RK6m9xQOZpcxG0AJf40p5Fp0odwgmxsiV5O9HMxcEqqVcwMo4acJ
KTQMxI6WJoywdw2auZFMUG82/f92zNA4OKjqpT9+XJbfGLiRIljWMLC8P7ne
6/2AoAomS4TCPxGYXihWvkrf4JRPI5mkEX4He4Uy2127dm1gUsXGxsaWqbUw
ToEth0xGyipxIjAdU+wm9VDI2bMdO+Wzz4KuzM2lQpkt1l+B9Yd4A1gr+/Yh
lkTSWOPEUWaWYjf1wplS1jCQkI+ByhNzjVTKrnqwO1UixE23mFnCbgo/FKJP
hYaBKysrtVoNtTWbzWar1dLY23agM8ZaUiLEZAqK3VQhx9fBg8Q3KqSaE+ZK
zzwCbXPbgk5nPxslQszuo1jzVTFSQL5tbEQ//znFB/vFF6UbbmFhodFooPbo
3NzcFNxVOKB19hORMqslQsyuYX//ZnyhKqslTvgE0wD7XoU883a7PTk5idqm
8/PzE7DjwoHOkKYjR/z/xMxKUERgq1IxnTQiCHmMZXnms7Oz08rD6wXorXts
oBf8VEzvjPMZqpJLnEr4/OM/xr29zHdBcHKura0NgyYTCCrkp2JWl3E+Q4Uq
ppPJmdh5QGV55vV6fVGt3D6JgFLNq+KnYlaacT5DVSqmkwmf7TblCtKccFrS
OLakxSKq4qdiVpepfIZKmMaxgrSyQumKX5ZnTitubTQaCwsLhDeaR1X8VMzq
Mpt14NjLceFCdOcO7i2xgkRTyKV55uTmXVNTU3Ng6IWAqvip+sIeA8QsYlH7
cWcjyAcGon/7t8LxYUV8773OTZJVI2meOSHpSyCgFI6q+KlA8fvRj/zfBhPF
VPeMVBXDBx90JqAdPqz7KZbKY+FuyVGD3/xGsucIyRsChGwxW6iKn0rouidP
+r8TZpbbt3dqV+O/ZpvW6lQxyHnzZkejsHFl2Bfnz1PeGCe5FWB6enp2dpaw
WQlVLRYRvp8KltwXX2weVbt3+78fZoqxOZ/btFaniiEmqCXJYkmQFXDNV1+1
m3lIaFDW96j8Xwod9ya2a4ddhOzlgAOFi+YC55UrWwyQ69ejN9/cHNQLvx1t
9wmeOEGvL9Mn7ZAqK6IHnQE0B9pODa57jzM/lTpB+wWhwZHinuXgoC0bxCql
zg3NiQYhVtOLIU3f+Ib/Jy/4/vssNJgVY5lz48GDB6MK3cCKYCWkkjsoE2sN
BeIphefP5gmzcixzboC20CwzZKRbfLFer5PfnoZ8UCbWIArfU8pkhskymaCZ
u7W+vj6kMGRBCahBmYoI2VPKZIZJhQ6BtIq2JIaHh9fAKNCEetcd7N0G6Cll
MkOmwumsv+v1JU8H6uk0auNut0B9nD2T2eMsyqjfsp8M9NAw0GgU64hAthja
ApHSw0oIswcJKv3du7KVnzuPMgMjieLk8pYnwObPa36cACshlaP6PAtmLkXk
NLvysxn1JfvVQEHrxsbG0NCQVtYoNudf4oklxHAJNXEsbVxy587o8uXOqu7x
rm5XriAmiOUyGyXJzagvg6nGO7rXIaRFpboMgbh4//1OYl7ui+UxXGyr50OH
Oo/a+yrqNcJx0Jtd3ZLDqUFVuHaNmH2qECVRgQE94TF09Rbs8Z1sQ6Reoljk
hMGeYhcvdt7FhWnuqVMhUmnGS1entm7vXnoWZQIG/BKPoesnwWZZxAmu2MeY
G/ehWUlcC890SVi6tAlBuSRkUT6GwYFrutlfWA/D/v3R7dudAd/Yx5gbwyVo
fWAlgZz0vpaYvUNyGw0JSdvfTN7FY9A6G2/CZS1JKoYLGgu2z5Kwkn72M9y7
PJZRM5lF9D3FQLcw1lktSdI0oyl+wkrCekXYrukpisjmlSv+70ROZBalQeeG
gIFUEDe1JEl7iuafF8Es7Hu3bevEE72vE6ZtJr2OlWh7i8miND5N3kx0xk0a
p7CnaBoObP979zpv55YazCxTA0cCaeYgJ0Z/sDEyCRQYUGN0rwKP+tIlF7+s
ThIRiFxO/WJmmW1lE34zB+WIhsni9wSM9fCxmhYY/7KaSUQjI/5/cWZozG1b
EX4zB7WIBnnwgRyarcOewGpaYPzLsqHBNEtJQmbIdZRlwxxjgNAA0WFgg2eg
FY2NYW9HJ39ZNjSYZil3GGaryU6eRCz1gQFboXzls97eHHkzEsnejo5/2cVF
lhu9QjczCBTaVjxBXE2m7v2ApWvJVaLWJnR5eXkMvqMdmGk3askePHeu82PZ
G7nlnYSB41Xh975Hf6+D8Lda24p8XL5cfv1YKBnfGsrFbuTpbCrY2NgYHh6m
KDPJ+ncbKVL9/Z38FiMjt5jOGPeFCDOgiWxbkYbiEZYSSmZdJcrJGGZcEMVA
mypuFACwSgyWBTEd8PDhJ6mMcKy8+ab/W+p7NEXr3j1a24otUDnC4LB79dWc
ClZTLaeUbSurRooAzlRxpgCAEdet5kkXE7ZMaHalfrak6BWDrYrKrWDV2TsY
28qqkSKAMFWcKQDwKf/8z/6XHBNL2CxBqYjJyeCEoWD6MjAltQgqx+nTBNvK
tpEioGqqODtH4GlXusUc7B34ub3fhntu2+b/HmJKJoMLZUDeo9KUap2sYMW6
ScumsOXCgZEioGSqOMu/FUZcULoulmxkeaRwfn7yCXHXC5FiULVOVrBi6+ZI
kxkdGCkCSqYKoYf50hJ61mqcCxeUuov9Cg8eVPj+K83+/ug//9PArn/hBZN3
FVewosJM1P6ibowUgfKOo7TufOQOxu6zvI4dMxMvEyYtZ6l5pNldr89kBSvI
EMV3kTy6xhtuyFFeq0KTAOQOxu5ri86d63RKf+cdrS1vL+GHWV2KMxTlZUWl
syYwMTExPz9PeCMZY2NjyxK3LU0CkDsY++qgEpu3hKxFMOWq1QGG6Yx37iBO
Xmo669raGhgpRkYeqKOk6pYmAciOIL8JhzRFN9mIydL98wS0KnJgQFVoXLpE
T2c12BkDgxLvKE0CYLfP558/+cTwO6ikmIqaGbx/UHTjID5bQJXj00+rvpIw
hD2BWq22Aqqyc8i8o2RXMGr7pJ5btfbIU0+lf3Qj95/1q//oR/6/rCaffdb/
PYRJ6hB2xx7RJEq8o6giYsK7Us8ttIxlFf70p+mHpl/WJB5mMknp9dfRac9B
MZaE9br/mwmN1L3v3iOaRIl3VOUATbmCacPrVbL1btwITiERMyVTyJY1nTjR
qbdSuWCtFj18WD35KefHH28+GfYeZ0nqCOrFI5pE+XwE+QGadQUTEj/U83bg
FA6qiwWoAfIiCFGYqf5M9u0jTiUOmadPb/pqfvWrzhRU7/cTGvFZW7oTn02g
vHd69gCVdDYgJH6cO6f6SlDaX37Z/w+dy6KZnpXz91piaNlZgVC5fWgMehcd
o8CNZCrtbIBN/MDqD8HKDcFs1l+lS/Z8ETS0f/mXant1FIlvFe4l/JoLk+Na
sC6IQ4dwrw9/IGNqpmeXOSscMDZ+Wy3/N2ObyFo2UDZGRkbWwAQIAPPz8xNg
dxgB1vd1+DDu9YODIbakSzIVXOaSN0X290dvvJG29ULzhJslvpYtHGUjMivE
sIkfhATvX/xC9ZW+vHDJoDyXvNGeWwy5Z77SKbXIWraglA0Bk3IMlfhhrxAG
DIR79/ysh5GRJ0+ju09Mszx2LD8yJffMV/QJ42vZglI2BAyLMvXED3IpnEqA
GF6D9a0dORLt329gVcReDk5awLIoMiWQ65kPeeBaLkm1bL4Sy+UwLM0UEz90
eiLJjyFyOxe4yCefqGZqFfHQoU0vx3//d1j99KpCbD8K2xPPDfLddwn7CRf3
dAjz1pNK4oepnkjZY0gzkKEpN/oeW+scTyEzFZkqRVVC3qTccpNBT9OwaED9
7GedfOPcrrC0Qhg5Qsi2gq8Zwm1Ul9hy0aqIaHxuebDKhgCoHENDQ4bz3iUF
a7ElSyiEkSOEo2ffviBuo9JElYsaCXmDnvnii9a/FzK3PGRlQ8Bw6rtKwZrQ
IuT+kOvXC9WVLEBSBVIH8Xu/5/8eKk2USm8k5A0rZ3DQ7pdC5pYHrmwImCy1
QxWsRQX+kD/5k+jb385/V67jnYfMuqe92dAolb4qAVlkbnm9Xl/Eunp8wJjK
oW5vZi1Z4edUV1cEeMisL965YysSqq7SVyXkjcktL28hHgzW19drtZpuYIXc
wCcGVl2JquMZw1KShRJCwqRQvCXhM3J+BUql99ulVv0bYTwV4Xs2kijpWqwC
WgMfAdHtSt3MFOpKdwcv9u2LTp168tegEiazB2I2LC6kSn+/7pXlUF8DviQM
Ji+l1Wo1SUPcPKKkFZjC+3HPkzB1IklQV3oheAGrrihh0mN2Gaxt+fRVAYJg
J+waFSnq61lhYoKg8IOyEVQ1igp0DSuCnwE1dSJFWKvdaqSkWOQie+klP/cz
MFDYFCXluMYKdrDOaCq63CzSz+ijEZlbrjr/PTxoOUixQTH1qRO5hHVSaY+o
euC4KBvKl7VSanrEmjlWsMMPSkaRs6UoNmePkuZ4xXA2Zd4GtDLPsctYfepE
Eb/xDddLwhSxvs3cbCgv0QTFskGhI5HHB2situwce8Deeos2iC2qmjs0C3pL
n6oExbwTHpSODzkGiPfnnjN8byDQJAr/kSOq1xE6Enl8sCk49oBRZxwEWC9P
wPj4+BJIbCxQQTGsm72bCE/p/HncW4qyocyep8KJV6Twf/op7mqgI5F7JpiC
Yw9YNWccmALoS2BqUb6I+jLu8WbXBLGZVODjWIbBzKtcJ16s8K+sRM8/j7sg
3J5OzwQjcO8Bw9tZfgcqmcX09PTs7CzlnYoFa95dmn/xF515r74+Hfv1Qc7E
+9fsGbptW/Tnf17ixKNl8oNMM9UzgQzHPRvxdtbi4mK9Xjf8rf1By0Gq0sDH
bxPOU6c61rfH7ClsZPDppzcfrHF5W2oa6GTyw+Fro2eCOhz/xEg7C3bZ6Oho
gB29dKBVlFfawMd7xiPcD9lp5l5ZAq3g5k0ro+tKTQOyegN3K8LHly+Xvxjf
e1MJNF89dlSH+sPcClDpp6ljpkOGmbq83HTHQIIvqOr7kZFN0QdS8do1A3Fk
7yw1DTT9ridOKKVPSPKjVLJSJSCEnH784046oo2HuRWrq6u1Wq0L3KFZgAYF
epSVr1aJiqQk41nJkQl7IZDBZKWmge04JkiVIteKSvcnFaBE340b9MWJtLNA
mQeVHvWWCsFiZDmQqrTdu8tfk9SijVTuh9C4OGsaZA/3ZGGdJeYqtNh2CnIo
GsWvvfbkgWAXJ9LOMlBGGjwsCkbvXg7BK1eUOrEL6IczYEcYz9fCMvWljIdp
1JnMoheCC/avolxVN6JBEO3ZI7vU7dvpja++OJF1KBbV+JCwvr4OX3PVSAJw
FiEMwoCzVaUTe2RIR4Kt8cMf+vmmuV/Ke8M02Hc0wYXqYww/MTz2Awe2XGFw
sOO2LbJ65Ivz4MHyEHYGXRlDKcLy8vL4+LgtCZnds465d++W+8l15Aro2/uw
Ox4+jI4fd/0dz5xJbzHs4W6PIM3IgosWj4Cf+MsvlZSE3APlu9+NfvtbyudW
ueiVBusp9H47/t26VX6HsNE001yvX4/u3vXwNcOxSnKpI7ioJSEUSA4UNfSC
WyMLux5g7ytZYiyb2mhgYg8MuPtGYVolZkkqCfGCHnFrZGHR0RFCbKXIWK7c
RoO7/eUv80/GrmzjbMnzZhQ95dbIwpajI5COfzqtksOhJEDpXakzTuOl93bQ
a26NLKw4OgJZz7GxHGcy2EjttsrBwU5IMTepMgSlzjirMDKgN90aWZh3dLi0
+iUEYzk0nyGZ2aRKfaVu+/YtRcQhNFEJvvt3z7o1sjDv6Ain1iMQCVZKxUTo
pM2iLw9PnNhUww4ciC5e9D/JxUbpvVH0uFsjC5OOjs8+s7iu/C5sSxRJINgZ
VQHaXOTKU0EbpfdGwW6NLMw4OuCphqDuVogiGUNdeQDj6+uvO/ZXIMV0yS9C
qzwVtFR6bw7s1iiCrjitYrTCI7dv30xTxHo4Dx70MA6glGDnksuikSUh7kFv
ttkDgMfSaDToPTq6wwPpjHHsIJCwtQ7j+ClKBpJGk7jH6urq6OjounrtTO8B
RAfIVcroh64MC1qliB3op7uHwGT89No11Xfpd5GyDxAa4+PjtupAuwggV0F0
oJ3GQR2aodn+WW7bFi0sONXQ4HA/fdrWxZPxU/UvhSqA9QHYCyA0Kj1BySUo
MjYcIwWMZY+9zdXpMkb8u99Z/I2S8VOs2nn9ulbnQJsA3bter1NmD/UwQMaC
6EDYdO49ojt3FnbYCKSDUCCMnQ+WfqNk/NSI2onqHGgNZvrx9h5A0sKjU/Uh
e2m4ITSibEF0IH2SA+HevZvnOFYNU5nvkIqfGlRpvKZzcKqGDhBzZAhHvGa7
m/7+6N69fJ22cn2S3XDfPtzr4SxQmZ4TJSqAzHYN8nTczzyCl4/uGqimu2CP
+HPnoq++MrC7i3RazfgOIVUeNYWhEvz+92UTZsVjt1oB5MNx2h1ToUOAkvhF
HfE7d2560kxFb3Nvj3z2wTH6zju4t4CcAeXH0vbxyJRYTpmEDpqZuJ1kND8/
PwEikWEIIIFBDpe8iDYE0JQPM6vT0uSGGLqBVZ9u3lT9LuHHiOW/Vww36cEO
OweCVd5oNDgp1CyUBm0rzqFO/TRGuqCndFpY1WR9A0QQeYZyqUOgEjHiLOG2
U6FSN5F3V50DOZPcEkQWernoUPSkpWCkC3pSp9VZ1UIEkWcoyx0CgcSINR2Y
R464u1X7uZrorAMGBiA6QOtotVolr1McX1KEjz5Ce/4FY51W320iRBBNfUqC
Y8SatN85EMwTFhoO0Gw2EVEqWrd5IXmwQY1Yp9XPPopFEE19SiE5cvH11wPq
axQ+LXcOBP0ZtGgWGm4AcsNFLwKC203otPqmd9KszqpPR492KtlffbU8O7pr
GhX6os3OgaA5g/7MPg2XaLfb1p3PWHeH2YTqXLP6X/+1MxMt9/XZTJLKzVwI
jTY7B8LZ1wy+nWlXYmFhoV6vW9TxsC7EWKfVT3rPNatRc9W5i5E+rSVtgrbM
GaEesbS0ND4+vgaavA1gXYjx8aEfs8ia1epy4IsvOq9XN08C7BQaAu10DhRh
Qa498Q4R+LbS2IScRKEfs8hqsOpyoL8/+tu/xX3c9HTHgYxNUu1i2ukcCLox
aMgWx5syMBCN1Ky0N6ElUWjWtWXNatvdzBTDN13PU6fsdQ4ErRh0Y+6nERRE
ZyQr/QpoSRQ6Oz1r+druZpYN32gWC1eU1qpR4GgjNsBkWAaIDqWEUgJoSRQ0
L0euWe0glpo19ALJLNXh7/8+7vV2qlFAXNgaoc4wAZFQasVTTctBxar9RSLI
dmSkKCsS7n/nTv/bn8Z//3e0vLVQjdJut0HT4Myu8AFyw2KQJULmoGYFzsmT
0YsvdkxpdRFku5uZJCvy00/9SwAaT5+mCD1zWgGcYpOPwJldVcHS0hJohsH5
oLICR1EE2TYZJAlIVnuXheZFMVeNIgZAc7y1chDu6y7JrrFajBaHb5JlLMn0
dUvRnGPHzLRcM0hD1SggLngAdKVh3WZxA6uHPsgKSRmLSF8vSm7XoXAmBDUw
Szvxm22TrkGgNgsWlvYXiIu7d8v9rh9+SOwtIKdwJtgQSgRqV6OwbdJl6BKb
xbiXAyyRhw9VgzXwYuP7VBzKoE3ZEEpY6i0Ptk26Fd1gs/z85wYahCazIlFT
Ed96y+Q+TToTvFsrGtUobJt0PbrBZrlxQ3ePxFmR2N0KbwQl/JlnzGzVlDPB
dsxocFD2vahbnm2THkHlbRaDzcSwl4I3wgYxMlg215lgL80MPu6rr7S6R+aB
bZNeA8iNqtYLGGwmhr0UaBqmMleL5LalNLNUgJXWPTIBOH0ajQbbJj2I5eVl
OCympqYqlgNssJmYr8Y+EmeCpYiz0c5as7OzIyMjXA7fy5ibm6vValaq4SzB
YDMxL8O4S50Jxn2k5tr9LS0twWqZnp5mNYMBOufExMT4+Hg1DFV9/6FIB4X/
t5qrCRcnOxPM+khN+LIqtkgYriBCLRU4SqoyAGXv3s0bpjkTTHUQMtHuDwyT
iimlDIcAiSFMVyv9f0zBas65Wd66pftNUxGQ55/HBVy02/0JJxicJhVzgjGc
AzTS+iOE22jFS5YUTViZksCx0mKkL4ECYBlMTk5WNejG8ARQOUA1nZmZCdRs
cdyMC7R9Wtfi1LhtsyD3JShDq9WCX5+zuRgEgMQAuQFqaqARN2c9hIW2T/ar
WGvaaQNLS0ugYzSbTTZMGDpYWVlpNBqBSg8Vpf3AAeJ+T2n7ZL+KnaadxiFm
8QCW7fQzZ/QgwMgF6RG07lqktBN6bBZp+zS/ioWmnWYBJwLoGDykgGEJoHtM
Tk6OjIyEKz2yIE/HzgXNrxKqhxkkBmiScCKwjsGwjdXVVZAew8PDc3NzgXpN
kyBPxy7CsWOGL+gDIPlB/oPE4HAJwyXW1tampqZg7c3OzgbtQyNPx3Z2QYcA
Od9qteBXA8kfbpyd0e0A6TE9PQ3rcGZmJlDpQZ6O7eyCTgASA/RD+KWazSZL
DEYIAIkBcgPWJGggwfUTI0/HdnZBywj612H0PGB9wok2PDw8MTERVqY6bTq2
ywvawfLysvBEgdxgicEIHPPz8/V6Xbg+QlmutOnYLi9oDvDMRcLn2NhYu92u
gO+awXgMMKKnp6cDUj9o07FdXlAb8JzhacMzbzabXPDOqDRi9QPsa89RP9p0
bJcXJAGeqohtwXPmandGNwHUj7m5udHR0SAESGSsBMziBcsAGoUIZsFThWfL
URJGFyM4AVI1gLiYmZmpPcLs7CyLC0ZPIRYgYI9PTk6Cgh1oBkgA2NjYWFhY
aDabIGxFfwN2XzB6HGtra+12e2JiYmhoaGxsDHRvLpcQAGUMNIrx8fFdu3Y1
Go1Wq8XaBYORBUgM2CkgPUCG1Ot1+HOvFWnCEwA1DKQEqGGiR1+vPQEGgwyw
WRYXF2HXwGnb19cn9BDQ1UNJCDEHsEHgm4rpvaBXwDedmprqym/KYDiG0EPE
KQwQoyrn5+er6FZdWVkBsQD3DwpVrVYDWQF/gL+CXsE5WgyGJcBBDFsMNtrE
xARo8qCNwP/Dn+FfYD8GtftAa4L7EVJCtPmFuwVZAQIQ/gXUDHZvMhi+AFoH
6B6wE2E/Cm1fmDZCLRFOEgEbyj98urh4q9WCjwMrAz5XCLShoSH4s5AS7Xab
/b0MRuCATSrUEuEkEQAbp+8RQLaMZwCvnClA9sV9jwEiQvxLs9mEV87NzcHn
VtGAYjAYcoAts5QBaCZFciP7Yt/fgMFgMBgMBoPBYDAYDAaDwWAwGAwGg8EI
FP8PorMpSg==
         "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
        Column[{
          Style["City B", "Title", 20], 
          Style["Latent       =0", 
           RGBColor[0, 0, 1], Bold], 
          Style["Contagious   =1000", 
           RGBColor[1, 0, 0], Bold], 
          Style["Susceptible  =0", 
           RGBColor[0., 0.5, 0.], Bold], 
          Style["Recovered    =0", 
           RGBColor[0., 0.5, 0.], Bold]}]}}, Spacings -> {{10, 2}, 1.8}], 
     Grid[{{"", 
        Image[CompressedData["
1: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
Y0f41SXsSsKGLTZVri3GZFentSmU+/bt28Skpo+Ojq6QK0lTkKdVmqSKlUZj
Qw13EwqxzG1Yw+Yw7Oq0NoUS66+gzF0qAtVcNHUdmwfBc1kr0ptL2CAaN8+h
76laalMoCfkYuPmwGpincKT6g7nCkM1akd5cwgZx717z5jn0PVVLbQrl6urq
CNhNGLTb7bm5OeLvysHEIktdx9hnkmat+DFPJDIrZOG1a873VC3rUigJdfH3
tmD107LQNxfNuo6xqWLqd/nszfXSS+FXnbDpvH7d+Z769FPTTVeBxcXFVquF
uqnZ2dkp2MKMMOzjh1Ub4MmAhfL44/7e+NWryWOPhV94wkYTNa+5Khuhdk/Z
Nc+cn5+fhI9jsLCwMAHXdwSN65jgo/BcfghvXFqPCu2pyXNIBcXx45U5Hrls
hNpwDLaZf5LMzMxMG0+SVeBv3WOIRnTLgTcuWalCG1ZlW2ETCRidCQUQnJzr
6+uDoBT5R/z7MX3jYGAyJpgJe4onT5ZkPtMSCep6aJAxPj6+hL84T6o5FvFn
iWfTdcB+7O8Pf0vChjJra5ATCbLZCOTu/WWgJY1jS1p4EP8I+Gy6DrxrbG8f
oTBHZWvYJBKAfCDXZVSDVtzaarUWFxcJH7RFzF7HbH6dpKcKufjTn1p9HCQD
rS6jGuTmXVNTU7NgNQSBiZcjSB/g9OFLeqowHhpWX2KcFeRhKPwpHCjUprVc
vOj77WTz66R6rqd49qzpX9686bAdqCXruolu33/o5A0FQrYYM/RZK54jL9n8
upgtKaELgiioTRO6cOHBylTr9sSJ8LddpHE+xvT09MzMDGHXEqpaHKKYteIn
8lKaX/d3fxd+AQgjZNYQiFMjNTY9bNyb2K4ddBDiRx4iL3fulHzv6qqMWBKW
M2sIxOn+Ms5vB50BNAfUJk7B071HD5v4kVN7oao1QZzniDASpoZAtJnPBikZ
lhMNOKvpS0Hu65XCnZej9Htj8GxIplnMTA2BODOftd1EU3z99deX9COYtXAb
UiH39cpBH3mh8cKF8sfLPhGGQEluj5mpIRBn5rOZNABtoU1rR7aFpaWl8fFx
8sdrQOvrVQrlwX7iCc4nXKpvODJSRBR0E5UhEGfms5k0sMzd2tjYGEA1CjAH
ua+XBuxvqqjnuKjZB6Xro4/Cr6guIFhwx48HvoesIRCDVZu7N7PKEVpFWxaD
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
7k4FaGm2rUl+XQz1s11GWLd//OPDt9BNrqSsUmE+rsgkM5w3NfE3v8H9fZ2Z
j4houARiJBNqX2ezbc3z64rBWbgO3N7Nm/EG+2Jmzn/VUFdSdvGQlQrzzHDG
9Nc9e3BdRwzM/CDh11IgxrVgky5AGhDy6xRKD5Gwxa2NY4NqSUpvPrsGbGYg
ojLDGdNfldzmMvO3lI2hoaF12IYRYGFhYQJkOAogDUCWmjwKEOaGD620Ji6r
WAYUGk0cNFZ1eDXCy8GVfZFgnJzq5GJMf03ltskzN4gBxaNsJDQh5qgk4fDh
5NVXO1lGqhAgnsKH558Pfw9Yag6v+F1JBw9azi+jrFV1cnFZxDnRp3/mBjGg
qJQNBZwc86DrwrIx1Gf88MUXw98DirWHFyy/W7eaMQCFNL+MuFZh/7obnFTq
vjN210SlbCjgRFnMddOOePVqkzyKZ84kJ0/WnNdceU3eSMv/JEw5Z4k61cpt
vLsmVGK5HghpFo/54I2gYcbvUazqGFA8rxs60gUzv4y4VuFF20ed7BPPCkDE
Pf0CoXI0ccnZc20tXo/irl31lb/Z87qhkt94fpnVWn377eS99xC3lP6bMfGs
AETQ0ztMVY7eTKX4/PPOb4/fo6ihOq/jV5w0NJtfxrBWjxyp/5vUGLGJERsg
WmVDAVSOgYGB+rz3aI9dp0wPO0uPYkBtTf2ERrunsEWglmtV87IcGCNViFnZ
UDBKfe+mdGUU1WFn6VG8fj3wT2iokaJo0k0um/Nz7pztN7788jal5fjxTv/z
Y8fYwsR1iFzZUDAqtUM5jnz2vXdNWCqWHkX4bNiSUvgJTXdPabrJucj5UUoa
XLkq7dAmTGyA8fHxJYJD2DuMVA5U6mzX2DX289dOngy8beEnNNo9tWdPp48Q
SL+jRztTAs+c6fyi559Prl1LTp1yldZ78ya6gTkTTJvkRICNjY2RkZH6wAoq
dbbR7kReBp/g9uMfh38IzaJhl1oHWkH8no0s6rsWf/d3iNRZlSz3xBP8r/Wp
px7+G5RGOIkcrZ84e1uhCOfm734X/ja6koQwsRZzc3Ntm9bKIWDUCizBp85i
x+rVMm2DnMbC3JlFjcjK1hPeVNhq+scfb2SRoCGxYWLdxloHZSOqahQTUAwr
wyg2b/5A8SbdhXtq5627pr2TWZ1f/lM4YEP94Q/JN99E4ZXFzls0J1+vYN38
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
         "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
        Column[{
          Style["City A", "Title", 20], 
          Style["Latent       =0", 
           RGBColor[0, 0, 1], Bold], 
          Style["Contagious   =1000", 
           RGBColor[1, 0, 0], Bold], 
          Style["Susceptible  =0", 
           RGBColor[0., 0.5, 0.], Bold], 
          Style["Recovered    =0", 
           RGBColor[0., 0.5, 0.], Bold]}]}, {"", 
        Image[CompressedData["
1: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
FP8PorMpSg==
         "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
        Column[{
          Style["City B", "Title", 20], 
          Style["Latent       =0", 
           RGBColor[0, 0, 1], Bold], 
          Style["Contagious   =1000", 
           RGBColor[1, 0, 0], Bold], 
          Style["Susceptible  =0", 
           RGBColor[0., 0.5, 0.], Bold], 
          Style["Recovered    =0", 
           RGBColor[0., 0.5, 0.], Bold]}]}}, Spacings -> {{10, 2}, 1.8}], 
     Grid[{{"", 
        Image[CompressedData["
1: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
Y0f41SXsSsKGLTZVri3GZFentSmU+/bt28Skpo+Ojq6QK0lTkKdVmqSKlUZj
Qw13EwqxzG1Yw+Yw7Oq0NoUS66+gzF0qAtVcNHUdmwfBc1kr0ptL2CAaN8+h
76laalMoCfkYuPmwGpincKT6g7nCkM1akd5cwgZx717z5jn0PVVLbQrl6urq
CNhNGLTb7bm5OeLvysHEIktdx9hnkmat+DFPJDIrZOG1a873VC3rUigJdfH3
tmD107LQNxfNuo6xqWLqd/nszfXSS+FXnbDpvH7d+Z769FPTTVeBxcXFVquF
uqnZ2dkp2MKMMOzjh1Ub4MmAhfL44/7e+NWryWOPhV94wkYTNa+5Khuhdk/Z
Nc+cn5+fhI9jsLCwMAHXdwSN65jgo/BcfghvXFqPCu2pyXNIBcXx45U5Hrls
hNpwDLaZf5LMzMxMG0+SVeBv3WOIRnTLgTcuWalCG1ZlW2ETCRidCQUQnJzr
6+uDoBT5R/z7MX3jYGAyJpgJe4onT5ZkPtMSCep6aJAxPj6+hL84T6o5FvFn
iWfTdcB+7O8Pf0vChjJra5ATCbLZCOTu/WWgJY1jS1p4EP8I+Gy6DrxrbG8f
oTBHZWvYJBKAfCDXZVSDVtzaarUWFxcJH7RFzF7HbH6dpKcKufjTn1p9HCQD
rS6jGuTmXVNTU7NgNQSBiZcjSB/g9OFLeqowHhpWX2KcFeRhKPwpHCjUprVc
vOj77WTz66R6rqd49qzpX9686bAdqCXruolu33/o5A0FQrYYM/RZK54jL9n8
upgtKaELgiioTRO6cOHBylTr9sSJ8LddpHE+xvT09MzMDGHXEqpaHKKYteIn
8lKaX/d3fxd+AQgjZNYQiFMjNTY9bNyb2K4ddBDiRx4iL3fulHzv6qqMWBKW
M2sIxOn+Ms5vB50BNAfUJk7B071HD5v4kVN7oao1QZzniDASpoZAtJnPBikZ
lhMNOKvpS0Hu65XCnZej9Htj8GxIplnMTA2BODOftd1EU3z99deX9COYtXAb
UiH39cpBH3mh8cKF8sfLPhGGQEluj5mpIRBn5rOZNABtoU1rR7aFpaWl8fFx
8sdrQOvrVQrlwX7iCc4nXKpvODJSRBR0E5UhEGfms5k0sMzd2tjYGEA1CjAH
ua+XBuxvqqjnuKjZB6Xro4/Cr6guIFhwx48HvoesIRCDVZu7N7PKEVpFWxaD
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
7k4FaGm2rUl+XQz1s11GWLd//OPDt9BNrqSsUmE+rsgkM5w3NfE3v8H9fZ2Z
j4houARiJBNqX2ezbc3z64rBWbgO3N7Nm/EG+2Jmzn/VUFdSdvGQlQrzzHDG
9Nc9e3BdRwzM/CDh11IgxrVgky5AGhDy6xRKD5Gwxa2NY4NqSUpvPrsGbGYg
ojLDGdNfldzmMvO3lI2hoaF12IYRYGFhYQJkOAogDUCWmjwKEOaGD620Ji6r
WAYUGk0cNFZ1eDXCy8GVfZFgnJzq5GJMf03ltskzN4gBxaNsJDQh5qgk4fDh
5NVXO1lGqhAgnsKH558Pfw9Yag6v+F1JBw9azi+jrFV1cnFZxDnRp3/mBjGg
qJQNBZwc86DrwrIx1Gf88MUXw98DirWHFyy/W7eaMQCFNL+MuFZh/7obnFTq
vjN210SlbCjgRFnMddOOePVqkzyKZ84kJ0/WnNdceU3eSMv/JEw5Z4k61cpt
vLsmVGK5HghpFo/54I2gYcbvUazqGFA8rxs60gUzv4y4VuFF20ed7BPPCkDE
Pf0CoXI0ccnZc20tXo/irl31lb/Z87qhkt94fpnVWn377eS99xC3lP6bMfGs
AETQ0ztMVY7eTKX4/PPOb4/fo6ihOq/jV5w0NJtfxrBWjxyp/5vUGLGJERsg
WmVDAVSOgYGB+rz3aI9dp0wPO0uPYkBtTf2ERrunsEWglmtV87IcGCNViFnZ
UDBKfe+mdGUU1WFn6VG8fj3wT2iokaJo0k0um/Nz7pztN7788jal5fjxTv/z
Y8fYwsR1iFzZUDAqtUM5jnz2vXdNWCqWHkX4bNiSUvgJTXdPabrJucj5UUoa
XLkq7dAmTGyA8fHxJYJD2DuMVA5U6mzX2DX289dOngy8beEnNNo9tWdPp48Q
SL+jRztTAs+c6fyi559Prl1LTp1yldZ78ya6gTkTTJvkRICNjY2RkZH6wAoq
dbbR7kReBp/g9uMfh38IzaJhl1oHWkH8no0s6rsWf/d3iNRZlSz3xBP8r/Wp
px7+G5RGOIkcrZ84e1uhCOfm734X/ja6koQwsRZzc3Ntm9bKIWDUCizBp85i
x+rVMm2DnMbC3JlFjcjK1hPeVNhq+scfb2SRoCGxYWLdxloHZSOqahQTUAwr
wyg2b/5A8SbdhXtq5627pr2TWZ1f/lM4YEP94Q/JN99E4ZXFzls0J1+vYN38
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
         "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
        Column[{
          Style["City A", "Title", 20], 
          Style["Latent       =0", 
           RGBColor[0, 0, 1], Bold], 
          Style["Contagious   =1000", 
           RGBColor[1, 0, 0], Bold], 
          Style["Susceptible  =0", 
           RGBColor[0., 0.5, 0.], Bold], 
          Style["Recovered    =0", 
           RGBColor[0., 0.5, 0.], Bold]}]}, {"", 
        Image[CompressedData["
1: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
FP8PorMpSg==
         "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
        Column[{
          Style["City B", "Title", 20], 
          Style["Latent       =0", 
           RGBColor[0, 0, 1], Bold], 
          Style["Contagious   =1000", 
           RGBColor[1, 0, 0], Bold], 
          Style["Susceptible  =0", 
           RGBColor[0., 0.5, 0.], Bold], 
          Style["Recovered    =0", 
           RGBColor[0., 0.5, 0.], Bold]}]}}, Spacings -> {{10, 2}, 1.8}], 
     Grid[{{"", 
        Image[CompressedData["
1:eJztXU1sHdd1pkT9Wb+UJVm0LMu0LIGsLctqI6isIEh0XDc0BNRP+TOLQDZd
Q8kzbCNELKA0nEBoNnQRBDQKGCy8KFFtuKlBGKhBBChApF4Q8cbeMV3RO3bH
JZfT83jl0XB+7txz7rk/89758DVQE75582buPff8n6f/8Zc//PnOvr6+9/fB
f/zwzX968Ve/evODH+2C/+f7H9y984/98I9f7Ojra8P/df6dCAQCgUAgEAgE
AoFAIBAIBAKBQCAQCAQCJFZXV5e/w9dffx36dgQCgW+sra3B9l9cXLz3HVqt
1tgWLl261FeGkZGRse9Q9Tfw36s/gKulV4Zvge8CsRP6RwsEAlOk8qHdbsOO
hu0PG3xoaKh0d1vqEvBZdZGiRMp+7+TkJPz3CwsL8Jebm5uMP1YgEBAAx7ra
s+Pj47BJYaum8mFubi74ua/0nPn5ebifiYkJuLd9+/YNDg7CP5QkWVlZCXh7
AkGPAHYibEPQJUZHR5U1oaTE0tIS/E+h784I6+vrIEyUJFG/Auwd+DcIOnGk
CARcgEN5dnYW5AOc1KBUgNoPW6ybTmoQF6B7gDAEATIwMAC6E0gVkC2h70sg
aBhgK83MzIA+D8cxHMpTU1Ngj8BJHfq+nGNjYwN0J5Ab6W+fnp7uJiEpEPAC
tgwcu6BOgF4BJy/sFzlzQWKA/ATpAXoI2DJgo/WC8BQIarG6uipboxZFoSrO
EEEPAsQFaOMjWxBVHAVlxIH0GBoaAgtOBIig65EVF/APyY+ywdra2uzsrAgQ
QbcC1Oy5ubkYxcXSUnLvXjI2lgwOdv5zejpZWEialp2VFSCgioihJ2g6wABR
Vnm73Y5IXCQd1ScZHU36+ko4MpI0024CAQJGHzztiYmJJRCJAkGjkCoYo6Oj
8/Pz0eVX/+pXya5d5UIjJeghGsStqCwsLKgcWlE/BI0AHHmRKhgKcEsvvFAj
MVKWHtnNUVSy6od4PwRxAlYmrE8442JUMBTm55N9+0yFBhB0iY0N9BX0ikoI
gPqhqnclJUYQD1ZWVlqtFqxMWJ/Ml2Y0B0BPQAkNRfhGwhWi9C2A0FCF/4uL
i6HvRdDTUEtxdHSUfymymwNVV9MThBXhCkVFJRrAK1NCXqSHwD9g1anDy4nq
y24OgJZCEBrAgQHiFbKKSg4R+FTBqATpoYxKn98r6FmAxIDTCladK2PZhTkw
NUWUG0BVoY+9QlZRyf60mHyqyokN0mNubi5Sl5Sg+YCzCdYYSAy3znlGcyA9
2XfvJgoNkGBqQ2HNnFRRSRGrTxWkR7vdhjc7Ozsr0kPACDiPVO8L5+1xuMwB
zcmO4qVLDy5I8Klmn1X0PtX19fWpqanBwcF79+6J9BBYYmVlZXR0FM4jTw21
sObAtWslF8HGWzVstx9cEwQI6oOpoqLQEJ/qxsYGyA04IyTdVEADLCHVkY+5
WDXrFbx4sbPxn302OXnygYfw6FH09syBFm+turiyyOCaJ07gPqsUFfVj4Qei
PqvxqXoB6B7jW2hK90VBJJifnx8ZGQHzhPOiXLZDjrm1zfgVyttA014mJuh3
UupT9Q5QOWANzMzMiNkiqMXq6iroGJOTk8x1DYy2Q5Y7dmwzB8jx1iJh18OV
adrL7t3Jnj30ry76VAMBJMb09PSlS5fEbBFUAQwTWCRwxPB30WG0HYrM6hs2
8dYswXqihVEUa4vmUD8qNOAoAZul1WpJiZwgh8XFRaWUOrm6C/NEsb+f6H6s
JZywjNoLijmfahxwu0IETYPz08Tp7hse3vZdjFrN4GDy9tvB5EZMdbUpHGqk
guYArNd79+45t165bIdSpnFSBWy0VM9Tp8LIDcWhodjaeii48oAJmgA4MkBi
+EjycWekpHHSFJOTnNffuTOk3EhJSEF3XwKjIm5SHNdTmJ2dHRsb89RXx51H
tJiVPTvLef3+/vBCQ/NjS+GxBAbMFjBvp6amJFDb9Qjwrnlth5QqTpoDaM5w
wgbf445Ya06GKIFRZ5BkiHUxlG3iW7fktR0UQfGuknuMblj7cCov9Snon35q
esPc7qww60rgBZRzgcVM5rUdzp2rV7a5JNVzz0WnvZSmoGMTcR2UwIjN0n2g
vFMTM9lQqjDaDkVHaBVAYx8YsP26djtYCkcViynotERcNyUwYrN0DSg6pMlS
PH26RqpkwbX7jh9HePZAXoHikfWugK5ivsVSGeXCziIzl4JOTsR1VgIjNksX
gCL/WXLCDx7MayCMu4/g2VtefnAb5hIs+y0s2gsXs2+THON2WQIjNktzQX93
7OkWqQbCuPtsPHsmEqwYrFHay6OPBhYa2RR0Sy3OsTUhNkvjQNcV3Znz6vhW
u++552yvZunZ00swTbBGfRa0qVByI+0/ltgl4nopgRGbpUGYn5+ny3mnOeFZ
JcFeQBl69qqct0XvB+hFN24kb71l5OktfvbwYR9yI5tXb6MZZuWPSyi9dzp0
JyKBHqAcTk5O0u1KdznhfQUlwdLjUevZ+/RTU+ft8nLyzTfENEv12fPnfQiN
XDjJxg2Vq+txjJmZGViWPr9RYA6Q6lOgMNjAXU64YnruKDUAtiS5BkTj2Vtd
TZ55pv4KqefTJs3SUT8ik3sgJ+Kah7P5AGrw+Pi4eEpjA8hzht4IjnLCU4KS
wNgtsNQWg41sPvUAxJdNp3Gn/YhyLLpqyQpboErbpaUlsKA3Yp1k12sAGQ6S
nGfw1rVrbhf//v2cTYOLy/6LL3AKDJhOly8j/ji35nnNOs2TOXAguX49v9nt
E3G9D3taWVmRIEsMAOkNL4KngQacnrFVZGh49mz+/kFyuq58z/r3eGNP/f3J
t9/m3a36zc6ViOt32NPXX3/trxZbUAaQ25xzCpw6RdkJqkv29Id1SB7KZs6s
M5Y99pSewiAAa9saq83OJbv8th1W69bt1D9BBWzldi5A+eqrvje+PbOnvx+h
d/Cgq29MzS5sWStLIq73YU+gJ4PokDbpnmFlJzqaY+Kf6envs/rsl7988KW8
HlEwu8hlrSyJuN5TLDY3N1utFo9fTmAAK7+0z7ihax458uBHOU1XK1Kdkryx
JzBM9u5Ffyrd7MVUNGxKfIhhTyA6JicnZ2dn/X91r8EqDu4zbuiHSuPyrD6p
gz6GOtnSza6K+LDPJNywp6mpKUkodQqVDkr/fEDz5MAB/mvu3PnAJ+BfGMI6
5+1HRKNmsxOeSbjwqCSUugNoGlbPNmALGthlt2/zX7a//8FPI5sMYBocO0b5
IBz0kfQyrdrs2GcSetgTnIm22c6CApaWlsA8sbqEZydAyrfe6ny7o9NZ7Rqy
yfBP/0QUp+qgD94NTLPZsc/EV6WbBmCtyDw4RqjoiW1uf0AjZWnJyem8Z8+D
XUMWSnfvdj5OEzuWIouFms2OfSZ+K92qABq1RFhYoPI0GLL6A3pElSOR/XRO
dw1ZKKV+xccfx30wPehBJL76arA82+xmzyXkvPceIjgbotKtCqBXS16HJdbW
1qzy+bNrKWC3mb7vIoa8p3N219iYG3DAYUcsgcgKngaTbnb7O/Gbaq4H6NWw
5mUELRkqp46YERp8VeeYnuxc3QKzR6QSjzSV48MPKZrYiy+Gj2irzW6fkFM6
wSooVNWVJKITYCV1WZK7jh/nXOTZiGFpv6yrVym7Joh43Lu3vn7ENdVmt0/I
0TdFDAdbTbsnoVJwiVYeS3KXOs1/+1vOpV66BtJO4wnGilG7JlTua1UbMW9M
N7uNzLxwwXMRPRZq8L306zCHlVeZ5fxN2whzdSDXRAyzThhQPGpFgdo1oXJf
/bQErGJ2s//+97ZXi979CKYKiA7pEmYCqyg2S8wia/ByBUFKI4YaK6NYrPHU
U8nExMNdE8R7A5Lq3XcDfK8iCI30vcCxYh/EcVQGyzIe9OHFlkD3FtGhB0gM
q1x9++SuosHLEgQppgeYWBlvvNG5mawtoxAw4eov/zLYV/d9N9Dqzh22ZiO8
hSEm40HxsM2U7nYwPB/yKQyvNXuaF+7Mqs9/MT3ApqtnEi73Fe45eBiFl4xl
sDbtnesgWehV4EkKJazqH/2o07uyVqUsBkHMXR/F1WIu344dK9GlQ4WY4ee7
bt3smVxlsJYHgQEklbSIjY2NS5cu4aJOpVbkxYsMa6lWpVRDQwzXCVzN0sq4
di1/A6EOfbC2Yiif5+WJE/ZeCIQkpzpV4EiFPSKNSbNotVqIcXgaK3L/frbl
pFcpzdfJyZP5dUKwMnKHVJBDX1lbMZTPuyPNC4E9CKhOFRAaIDrER6qAs918
Ji1UqZSW64RgZfDOeqMxjU2bJ6bu2BHgPrl+qTmwB4GFU0V8pAo4t4bnpIUq
ldJyndB+Qlb4+D/0abHp998vyYydmEheecX3/WOJ8kIQeotZxGrF0YF2a/j3
B5aqlJY96GhWRlb4eO6ZQ4tNw1P6/POHuwN+9d27D3bHnTu+3yOWKC8E11lm
ZiWJowPn1giStFCqUlr2oKNZGTnh4+Fp1MamDx3S3e2zz1Ze9sKFAK8SS3Mv
BK+7ycBK6mVHBzokHSRpoTROZ9mDjmxl5BQzd16Oc+fqdWaQG4QO5A2iuReC
/UUYWEm96eigZGuESloomlHYdXLy5DbrlWZllFa46KvyT50i/uTa5lfd1xm+
SPPUDnZ3k5mV1GuODkq2RhIoaaF0t9LWSdZ6JVgZVT3xSqvylX1Be2Imza+i
6m3ijoZL1IW7ycBK6jVHB86tkSJI0kLpbrVZJ6n1euUK7oMmDTBzlSy0J3b8
eI13Lng7Yj9EdThnfyZmVlLvODromfZBkhaqdqvNOvnZzzqr4rHHEBWdtAaY
Nk9M450LVR1TRUcdILEdznnXp7GV1AuODqsiFKx1YO+10+9Wn3KMVg9laXdX
eeciNFLgVj/7jLlFG6HDOVcTSEVjQ767HR0gLkZGRuitz1DWAWz5//7vvOGP
Ze1u5V0nVSQ0wFRpRVevdma6kb/36NHOgJViblKEHlG4w08+YSuu77PocF7l
bsL2O8JYSd3t6GAYK2NuHWS3PE10GO5WtU5OnHC1I8wbYCpZceUK5/YpEnYB
Y8svsNQeeYTtUow/k6XDOa0JpCLSSmIYTBYl2DqeGWYqZr+IYFBg29Wyq+76
nKscYmvebk7Y7BEmgbjocO5+DhQx3BA3xsbGlkH8skBvHRS3PPaV3bqFviVG
1f3ZZ5P79xHrNlR34m4lPMwnn+wssOvXbYvrs8Ba2XgraX19fWhoqJtiKwsL
CxNwejJCk7RQ+seOXxl/jNiwoLsX8q+C06LF3zbQrGwMuqkt2MbGxsjICAhD
V19QbL9ZhOtX5ii2UnszDTVPmkgWjwfBysYAlI3R0dHuGNgEAhDEYOi7sH5l
+sJnd4XtGk9Lj+RfxUOWuQlYKxuJ5eXlMcamqYEAou8SNn8mBapHgckf016Z
SZNqp4Xt58+X68mtVvit1FOktfgrrsy5ueT2bVMrG48uSOcArYkyqxHVTx71
xyjHSIJpUu369M/qyc0NoDSdqBZ/JiszZ2VzzF5ZX18fGRlp7qC3ubm5Ni3p
zryfvE3z+VrHCLZJtesMUvUtEkAJSI0JkNvyN2/WJ9IYngV4xyxx60UAEHpg
oaDdoait6rr5vPmZfvDgAw0WNrW7mcuwIL/6SoRGCXmTvjTMlY3Y59qZnwVI
xyzsviY6SBFGVlZQm483gj++fBnxx1i1DWt3/PSnDz7IO406R5u8cSELVaEE
l6mIOgswx5+VazEQVlZWRuGp1sKnnY5tPo+t+gQ1Q4kmz80/hT6pykZ4TUXz
9krI4w9MFTBYcMs+KIx0JM92OjY4RRBoqWiSCGkoutbH4AQPm2uHOf6cp06x
wihpzf/Dx070I9xeVsXqvrlmTaHToS3tduBIFvL4a0oG6ebm5tDQUL2IC/Lw
zUv4wZAk2BoHDuQ96ozz44SGdNTGp2/LSPnoo8C/Dnn8me7H0DCSb0HUeGWZ
1sbH2V0ue/duE0EqXcSp77TH6S6eBSsnhl5nyA42jVA5BgcH64VbkIcPG7Y2
Pu7O5QJ29/nzDwcPJYEMGfilV6/6/tLuiAGpGoTg6XaorqdbiF/lWFxcbLVa
9X8X5OH399f8wTvveHK5DA8/FFPmcWdLfu97D1zxnoU2aHQXL3r9RlDwTp7k
/xVqtwZPniGFViNXOUxTTVgePiyPY8cCv0QbpmOab9zw9I1KrfIstEHL8vYD
FWFn8RrCBw9ml7jX31IkKQs0ZpXDVNlImB4+7LumhzvTNB6fNkt3WA0aqp3F
+0hTl0LYMBm562nEKgcir9X+4acF740Odx49+jCNx0+L465ndmdxPdKsS8Fd
wwQTWvQA2djYGBwcjK0bGELZSKwffq7gHZaHt/IEdmaPgGKtrhDL3M5Sj/TM
GatrZl0KcEGQ9kF+2uXLlq05YumEkwGuiIaWiV1V8N5oa+XIkfJH9Nln/M69
XuDnn1cuOXI+2KFDHckDqgvsXPLIXXvevWu6vyq3XVwNSCkthlCN+/QF7zGE
1G1YLFZSSSbPPmt6hTfeSN59N/wPiYGaCo7nngt/ezbk6OIVlcpBbMDO1Wsx
eEjdkqBypEudkHWmHtELL4T/IZGwqoKj0a6wPnyhRBniUTmsynVNGvfVZngG
D6nbE1Qm+JmvvooOdqSunq6PkpgTVpTnHrDeSJ51mEEkKofttJeqxn3w0955
pzItKtsBqQscidjZQzlXT6M9PK6plgqI5Zs3w9+MDfGZohUbLrzKwdwbRPkx
zHV15Txvuv6J5cmTeRO+6R4eoQn5NlrwyW78N4CtEIFzpAv0TyxzJnzTPTxC
E/L1Cw3bCoxf4SE05QBL9n//l7O/FtzAoUPhF4meOdd6hCNWhby0yBQtBefc
VSRmZmamsc339KCdm8r9xfiOLlzA/T3XRHVz5lzrBw74vgGhZ7JMi8tgfn5+
Egz8EABlY43m4C0Nkdy/T3ykcAVQVGrLXQ2JbUx9926YgE765MUp2vW0mPxY
BTATBgcH/c9YWVpaGh8fR39M4/N89FHiU921i96FvsgTJ3B/D1LLf0An24Po
9Gnf3y70SevJj1UIEpCleEQbMTAImwgBJoP/gI6mB5GwO6gfI8gx1s2/d5Ti
EQ3bBdop3TW0rCKXUSaMk9ev6/YR31g3z7OZKB5ROR+7huoofO218HfSraxK
Kece6+Z5HCTaIyq+u+4gqLWpkikHgVMW95eDqaY+m3KYzmLLQhIau4PZc7Bb
rc4YWJpSbi6oMWPdJiYmFuBYdw+wUMBOwX0mqrPJf7pFNzE9B7ugLChaFt2V
WI3d2I0AQgNEB247k0BJ24jqbAKDDlQ+cti3l5k9B3ukLMjp9LcqFn0OWI3d
uFkHGCkDAwOuTRWKkZLEdDbByv/nf45LjjWI8NxSj/0HH4S/Hw8MkpxTjHFg
NXZMsw4PpgrFSEliOpu8DUnpYt640TnOGHPtoiXs1t/9zveXlgZECIvW2Cgg
5nBiQMwtty9ZHRlJvv/95JVXrC7yyCOI5nvCHqdK1KT1wiWzKqUcq/ZgmnW4
zjknGikJtRGx4r/8S1e1bBJGyGzmXjFR09wnaWnUaFLKsRo7MhF0cnJyfn6e
srUNQDRSFMgpHNmgkmfhL+wRKm+Apv21eS9cwtCWnKQqzSHHmkvIbC6npgoi
K7X0t9++TXyt2aCSpJAJXbDW+jbphasAp9utW6aFTtnBDZoc8nPnEFNN8c06
3EVV1tbWhoaG6v9Onz//619TRmjlgkrxeFmFQcgeG9V4A9IT8OjR5MknO61O
ssVBw8Pl1Wfm7eVTdZqx6pPUrAP0jSXjRFNzGDX6MPnt77+PrlUvBpVkKqKQ
kaXeAJM+t6WlZGAjoL4ddBX4Lq6mbdRmHY4GyNYHec3z5/fsQT+NohqJ0gaF
Qg2L3gDU6Z8932EXYKeOgjLzzDOmf3zkSIdV/6tFsw5TgwIJMH9qIjXmqSnY
0D/ImdKnEVX6urC5/OSTbeuK0PMh1fAJaxJb+PDee+WjQ5BF9EXQO/hVoH6S
o1N3JViURZElDlIhF3OFYIS9r67gZ01md6J+BCoS7XZ7bm6O62qAe1vQ/YXr
itdr13x/o7CnmMbsyHsfruBnTXIMfCzF4uJiq9VivGB9BBYrogku8ZyzV4wU
ISPTQ5y89+EK3tYkqzWRgjcaC9fZB+aeHh6KPnLKpM037t7dgCEpQp9MD3Hy
3ocr+Cl9Yhr4WIrR0dEVaz+JQr1zI/FV8ZpNALP5RrC51telS6dwG9UhbrP3
/VQ/wbc4A2OT83rnRoLPxaI1z8mKL3L21+XLD8R1PNX9wuBMD3HyqoArkDOi
UXTZZofRxWGUSIatOBsepjyxrEeIXON29+6DK3Rf3mmQJjPdwTT1i7wq4Ap+
6i7/9CeWfV2KjY2NASa/a33mRoKsOAPJDJuX9tBSj9DHHxO3Saq0YN+y7Mou
Zpr6Rd77cAUPdZf797Nsag1YsjgQw1nMA1jKvUB4wqkyaTONJRWnX36Jy0Cj
6UjC+Aknwv/8z4NVQVuZcIX793G7gMYf/tByR9eCpaYel7VuXm6ckJ5wKsEs
A14gTrFlRKdPB2j9JPRGlppr5QZ0Z//u2sU7lb4ULCOn0cLHvNwYcOUK7rkp
ZdJSpO/cmRw/jitsOXWqEwKW7h9dzDNnto1KJO995Ql0VHf54YeW29kELPMf
R0ZGVsEoQAH2l2H+PPylpkgnx7SrgOdM0ZdffricJLm9u5mtb4W9f+AA+gpp
llFxF1gSDlkvA5KSTix6n032l1HGlx61+fMor0iy1Q/B/wT2bBj62rUA61no
k/C6TYroq5ibXfLllwwedWdT6Uthmf3laWK1oVfkm29C5pYr/fOLL6RyvydI
aPWQMpckabNomQpdsbAscPM3drbWK/Lpp4HnF4D++cknIjSE9czmP1gatqTO
Xfaw7OFDTDotbS5aq2VpvCI2UVdGitAQGjLNf7D3xTno3VcLo9KSaqBbDuqb
i5qrWzmviJS+ChvEbN2Z/dLFDInmgmXWqFGmaAqTjAiC3iUhDGGzmHUJYnsG
ltJ4SDQjBgcH18EEwAM+BZ81/WtzUwKrd0l/HmGzmHUJskzDJJsMNI/BFsjt
zXGjWMz1MazeJUaKsEHMzi7hUpUJJoO1x4BcUI8IpmCfD0rvisEjKhQaEs73
9JQnpI1VEVVoxuExIIdUEFMdsaYESu966qnwi0EoNOT+/fzXRDX4YvIYkBtx
1A9MSYE1JVB6l0yQF/Y4UbmXTB4Dcs4nIteUYEqY612ibwh7nOa5l3weA3Io
FhGIwW7tXbsQehfX/DuhsIlEDYlm9Rjg0jC2gJM2WFPi4EHErUgXUGEvE5Xy
xOoxqJ9+UgDOusHqGzt3IgLK3dcFVCg0JHZINKvHoNVqLS4uIr4d6021NCX0
AWU/vV6Fwgg5MYHL2sIq59pIDSGFA1cJy2JKVOlj0mVLmCNjXkTjeOpU8sc/
Vu5ErHKutSlmZmamkSnuRjNTyHdbxaqAspSoCFPCSvYzpiRm/uAH5QnkWOVc
qxsQGo3iVBQuU0ITUH755fAvSxiW5849sGfFdC0l2Pv/9V+4cSRatych9QvX
jpjRlCjqRTYd22z4yCPJ+fPhF4Mw5a1b/Out+/joo6Z/WWdQELpwoKvhuEyJ
3H1ipxVw8e7djtYnJXWx8Wc/Y15v5uyyacIGkZq1tbWhoSGU3AA5A9IG9REe
L0c2oOy/zdeOHR3LMQ3uSEldhPzP/0SstxMn2L737Nnk1Vd5+mkEp1mXY0LK
KHHWG8vYiPR7/R/3Oc1NUs4i5IEDD51g+vV25kzy4ovhbzg2Hjtm3siiD/4e
A3K3H9uxEWlA2b8iWtTcJOUsToLoSIMI337LPKakF2gcXcXKAaycKQdYOtiQ
WRpQ9tzmq1RzE799/FRJg6H8YA2lsbcTO3aNR24k+K2nAso+hytduFCZrSp+
+6awO9wO3mjstcD6OdnkBmrr7dmTvPZacviwvwdY61WWlLNeYA/qKmbeS5Tc
IMRfdIh26xnOzrt1K/ytCl0wHdBTOrtneDj8HTqicQOxkHIjiczBiJqdJ4Zz
VxLe6b/9W/neSWf3dHH2jnGpe2C5kTCFaMlU9kjtkOscIpkTJ3TEtBC7dF5A
F79645JVRLNQR3IjqZjkeOwYw3PYvTs5dKjyfyXP8u7iE0eYssoD361yA9NA
DFVv4mMMvTr6uVwfcFhoxsvSEK1bRii0IaaBGEpuWE6VRYAlSaMYE8naI+SR
VTInTth9RDYQi1Ru2BsCGhtEU0gLxhEoJ3phIkaKsMt45gzWYI9CbhSPfvL0
zB07kp/8RGeDEOIguXaF3WreCnuWu3ahRsQmSLmxsrIyCqctI9h7aOjdLzZx
kNT6k5IHoSGzfQvh9Hn66fC3pKfZiNgEKTeY4ykuUiD0gSRLGaUaj2BzTnbu
DL8ehP45NfXg+E69ah98EP6uTGjgIA0mN1ykQOgDSfZxkJMnO4XGhKK2mzdD
5qgIgzBXWwq7rEGTwup6cwWTGy68i3o5yRIHef31TmAX2zcbVI4nnuh4n4DB
l4TQD7OeQBen5OHDyZEjrm5eOyI2CZUv6iIFojaQxCWpQDrZ9Bc9eNDVuxZG
RdAwU4c/2c+vIZjklj1t9NT24kDJjc3NzX0gNu3BngJhkvnJKPD37HHypoRC
QxZN8h//mPkrtJHTMHX0XEf/sWM1UdcsGMWyi+NDKDRn0SRnN/y1vTjCyA3C
0Z8dUT0yknz/+7rpVKWIqvZWKCSz1CR3kVZU3YsDO1qaMMK+9Ftx95+2BUhD
WoQscWnuJ2wKNS2qqkxydi+HthcHtj85sZ95DjbTKjWpYvqslfX1ZP9+tqe6
Y0f41SXsSsKGLTZVri3GZFentSmU+/bt28Skpo+Ojq6QK0lTkKdVmqSKlUZj
Qw13EwqxzG1Yw+Yw7Oq0NoUS66+gzF0qAtVcNHUdmwfBc1kr0ptL2CAaN8+h
76laalMoCfkYuPmwGpincKT6g7nCkM1akd5cwgZx717z5jn0PVVLbQrl6urq
CNhNGLTb7bm5OeLvysHEIktdx9hnkmat+DFPJDIrZOG1a873VC3rUigJdfH3
tmD107LQNxfNuo6xqWLqd/nszfXSS+FXnbDpvH7d+Z769FPTTVeBxcXFVquF
uqnZ2dkp2MKMMOzjh1Ub4MmAhfL44/7e+NWryWOPhV94wkYTNa+5Khuhdk/Z
Nc+cn5+fhI9jsLCwMAHXdwSN65jgo/BcfghvXFqPCu2pyXNIBcXx45U5Hrls
hNpwDLaZf5LMzMxMG0+SVeBv3WOIRnTLgTcuWalCG1ZlW2ETCRidCQUQnJzr
6+uDoBT5R/z7MX3jYGAyJpgJe4onT5ZkPtMSCep6aJAxPj6+hL84T6o5FvFn
iWfTdcB+7O8Pf0vChjJra5ATCbLZCOTu/WWgJY1jS1p4EP8I+Gy6DrxrbG8f
oTBHZWvYJBKAfCDXZVSDVtzaarUWFxcJH7RFzF7HbH6dpKcKufjTn1p9HCQD
rS6jGuTmXVNTU7NgNQSBiZcjSB/g9OFLeqowHhpWX2KcFeRhKPwpHCjUprVc
vOj77WTz66R6rqd49qzpX9686bAdqCXruolu33/o5A0FQrYYM/RZK54jL9n8
upgtKaELgiioTRO6cOHBylTr9sSJ8LddpHE+xvT09MzMDGHXEqpaHKKYteIn
8lKaX/d3fxd+AQgjZNYQiFMjNTY9bNyb2K4ddBDiRx4iL3fulHzv6qqMWBKW
M2sIxOn+Ms5vB50BNAfUJk7B071HD5v4kVN7oao1QZzniDASpoZAtJnPBikZ
lhMNOKvpS0Hu65XCnZej9Htj8GxIplnMTA2BODOftd1EU3z99deX9COYtXAb
UiH39cpBH3mh8cKF8sfLPhGGQEluj5mpIRBn5rOZNABtoU1rR7aFpaWl8fFx
8sdrQOvrVQrlwX7iCc4nXKpvODJSRBR0E5UhEGfms5k0sMzd2tjYGEA1CjAH
ua+XBuxvqqjnuKjZB6Xro4/Cr6guIFhwx48HvoesIRCDVZu7N7PKEVpFWxaD
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
7k4FaGm2rUl+XQz1s11GWLd//OPDt9BNrqSsUmE+rsgkM5w3NfE3v8H9fZ2Z
j4houARiJBNqX2ezbc3z64rBWbgO3N7Nm/EG+2Jmzn/VUFdSdvGQlQrzzHDG
9Nc9e3BdRwzM/CDh11IgxrVgky5AGhDy6xRKD5Gwxa2NY4NqSUpvPrsGbGYg
ojLDGdNfldzmMvO3lI2hoaF12IYRYGFhYQJkOAogDUCWmjwKEOaGD620Ji6r
WAYUGk0cNFZ1eDXCy8GVfZFgnJzq5GJMf03ltskzN4gBxaNsJDQh5qgk4fDh
5NVXO1lGqhAgnsKH558Pfw9Yag6v+F1JBw9azi+jrFV1cnFZxDnRp3/mBjGg
qJQNBZwc86DrwrIx1Gf88MUXw98DirWHFyy/W7eaMQCFNL+MuFZh/7obnFTq
vjN210SlbCjgRFnMddOOePVqkzyKZ84kJ0/WnNdceU3eSMv/JEw5Z4k61cpt
vLsmVGK5HghpFo/54I2gYcbvUazqGFA8rxs60gUzv4y4VuFF20ed7BPPCkDE
Pf0CoXI0ccnZc20tXo/irl31lb/Z87qhkt94fpnVWn377eS99xC3lP6bMfGs
AETQ0ztMVY7eTKX4/PPOb4/fo6ihOq/jV5w0NJtfxrBWjxyp/5vUGLGJERsg
WmVDAVSOgYGB+rz3aI9dp0wPO0uPYkBtTf2ERrunsEWglmtV87IcGCNViFnZ
UDBKfe+mdGUU1WFn6VG8fj3wT2iokaJo0k0um/Nz7pztN7788jal5fjxTv/z
Y8fYwsR1iFzZUDAqtUM5jnz2vXdNWCqWHkX4bNiSUvgJTXdPabrJucj5UUoa
XLkq7dAmTGyA8fHxJYJD2DuMVA5U6mzX2DX289dOngy8beEnNNo9tWdPp48Q
SL+jRztTAs+c6fyi559Prl1LTp1yldZ78ya6gTkTTJvkRICNjY2RkZH6wAoq
dbbR7kReBp/g9uMfh38IzaJhl1oHWkH8no0s6rsWf/d3iNRZlSz3xBP8r/Wp
px7+G5RGOIkcrZ84e1uhCOfm734X/ja6koQwsRZzc3Ntm9bKIWDUCizBp85i
x+rVMm2DnMbC3JlFjcjK1hPeVNhq+scfb2SRoCGxYWLdxloHZSOqahQTUAwr
wyg2b/5A8SbdhXtq5627pr2TWZ1f/lM4YEP94Q/JN99E4ZXFzls0J1+vYN38
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
         "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
        Column[{
          Style["City A", "Title", 20], 
          Style["Latent       =0", 
           RGBColor[0, 0, 1], Bold], 
          Style["Contagious   =1000", 
           RGBColor[1, 0, 0], Bold], 
          Style["Susceptible  =0", 
           RGBColor[0., 0.5, 0.], Bold], 
          Style["Recovered    =0", 
           RGBColor[0., 0.5, 0.], Bold]}]}, {"", 
        Image[CompressedData["
1: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
FP8PorMpSg==
         "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
        Column[{
          Style["City B", "Title", 20], 
          Style["Latent       =0", 
           RGBColor[0, 0, 1], Bold], 
          Style["Contagious   =1000", 
           RGBColor[1, 0, 0], Bold], 
          Style["Susceptible  =0", 
           RGBColor[0., 0.5, 0.], Bold], 
          Style["Recovered    =0", 
           RGBColor[0., 0.5, 0.], Bold]}]}}, Spacings -> {{10, 2}, 1.8}], 
     Grid[{{"", 
        Image[CompressedData["
1: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
Y0f41SXsSsKGLTZVri3GZFentSmU+/bt28Skpo+Ojq6QK0lTkKdVmqSKlUZj
Qw13EwqxzG1Yw+Yw7Oq0NoUS66+gzF0qAtVcNHUdmwfBc1kr0ptL2CAaN8+h
76laalMoCfkYuPmwGpincKT6g7nCkM1akd5cwgZx717z5jn0PVVLbQrl6urq
CNhNGLTb7bm5OeLvysHEIktdx9hnkmat+DFPJDIrZOG1a873VC3rUigJdfH3
tmD107LQNxfNuo6xqWLqd/nszfXSS+FXnbDpvH7d+Z769FPTTVeBxcXFVquF
uqnZ2dkp2MKMMOzjh1Ub4MmAhfL44/7e+NWryWOPhV94wkYTNa+5Khuhdk/Z
Nc+cn5+fhI9jsLCwMAHXdwSN65jgo/BcfghvXFqPCu2pyXNIBcXx45U5Hrls
hNpwDLaZf5LMzMxMG0+SVeBv3WOIRnTLgTcuWalCG1ZlW2ETCRidCQUQnJzr
6+uDoBT5R/z7MX3jYGAyJpgJe4onT5ZkPtMSCep6aJAxPj6+hL84T6o5FvFn
iWfTdcB+7O8Pf0vChjJra5ATCbLZCOTu/WWgJY1jS1p4EP8I+Gy6DrxrbG8f
oTBHZWvYJBKAfCDXZVSDVtzaarUWFxcJH7RFzF7HbH6dpKcKufjTn1p9HCQD
rS6jGuTmXVNTU7NgNQSBiZcjSB/g9OFLeqowHhpWX2KcFeRhKPwpHCjUprVc
vOj77WTz66R6rqd49qzpX9686bAdqCXruolu33/o5A0FQrYYM/RZK54jL9n8
upgtKaELgiioTRO6cOHBylTr9sSJ8LddpHE+xvT09MzMDGHXEqpaHKKYteIn
8lKaX/d3fxd+AQgjZNYQiFMjNTY9bNyb2K4ddBDiRx4iL3fulHzv6qqMWBKW
M2sIxOn+Ms5vB50BNAfUJk7B071HD5v4kVN7oao1QZzniDASpoZAtJnPBikZ
lhMNOKvpS0Hu65XCnZej9Htj8GxIplnMTA2BODOftd1EU3z99deX9COYtXAb
UiH39cpBH3mh8cKF8sfLPhGGQEluj5mpIRBn5rOZNABtoU1rR7aFpaWl8fFx
8sdrQOvrVQrlwX7iCc4nXKpvODJSRBR0E5UhEGfms5k0sMzd2tjYGEA1CjAH
ua+XBuxvqqjnuKjZB6Xro4/Cr6guIFhwx48HvoesIRCDVZu7N7PKEVpFWxaD
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
7k4FaGm2rUl+XQz1s11GWLd//OPDt9BNrqSsUmE+rsgkM5w3NfE3v8H9fZ2Z
j4houARiJBNqX2ezbc3z64rBWbgO3N7Nm/EG+2Jmzn/VUFdSdvGQlQrzzHDG
9Nc9e3BdRwzM/CDh11IgxrVgky5AGhDy6xRKD5Gwxa2NY4NqSUpvPrsGbGYg
ojLDGdNfldzmMvO3lI2hoaF12IYRYGFhYQJkOAogDUCWmjwKEOaGD620Ji6r
WAYUGk0cNFZ1eDXCy8GVfZFgnJzq5GJMf03ltskzN4gBxaNsJDQh5qgk4fDh
5NVXO1lGqhAgnsKH558Pfw9Yag6v+F1JBw9azi+jrFV1cnFZxDnRp3/mBjGg
qJQNBZwc86DrwrIx1Gf88MUXw98DirWHFyy/W7eaMQCFNL+MuFZh/7obnFTq
vjN210SlbCjgRFnMddOOePVqkzyKZ84kJ0/WnNdceU3eSMv/JEw5Z4k61cpt
vLsmVGK5HghpFo/54I2gYcbvUazqGFA8rxs60gUzv4y4VuFF20ed7BPPCkDE
Pf0CoXI0ccnZc20tXo/irl31lb/Z87qhkt94fpnVWn377eS99xC3lP6bMfGs
AETQ0ztMVY7eTKX4/PPOb4/fo6ihOq/jV5w0NJtfxrBWjxyp/5vUGLGJERsg
WmVDAVSOgYGB+rz3aI9dp0wPO0uPYkBtTf2ERrunsEWglmtV87IcGCNViFnZ
UDBKfe+mdGUU1WFn6VG8fj3wT2iokaJo0k0um/Nz7pztN7788jal5fjxTv/z
Y8fYwsR1iFzZUDAqtUM5jnz2vXdNWCqWHkX4bNiSUvgJTXdPabrJucj5UUoa
XLkq7dAmTGyA8fHxJYJD2DuMVA5U6mzX2DX289dOngy8beEnNNo9tWdPp48Q
SL+jRztTAs+c6fyi559Prl1LTp1yldZ78ya6gTkTTJvkRICNjY2RkZH6wAoq
dbbR7kReBp/g9uMfh38IzaJhl1oHWkH8no0s6rsWf/d3iNRZlSz3xBP8r/Wp
px7+G5RGOIkcrZ84e1uhCOfm734X/ja6koQwsRZzc3Ntm9bKIWDUCizBp85i
x+rVMm2DnMbC3JlFjcjK1hPeVNhq+scfb2SRoCGxYWLdxloHZSOqahQTUAwr
wyg2b/5A8SbdhXtq5627pr2TWZ1f/lM4YEP94Q/JN99E4ZXFzls0J1+vYN38
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
         "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
        Column[{
          Style["City A", "Title", 20], 
          Style["Latent       =0", 
           RGBColor[0, 0, 1], Bold], 
          Style["Contagious   =1000", 
           RGBColor[1, 0, 0], Bold], 
          Style["Susceptible  =0", 
           RGBColor[0., 0.5, 0.], Bold], 
          Style["Recovered    =0", 
           RGBColor[0., 0.5, 0.], Bold]}]}, {"", 
        Image[CompressedData["
1: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
FP8PorMpSg==
         "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
        Column[{
          Style["City B", "Title", 20], 
          Style["Latent       =0", 
           RGBColor[0, 0, 1], Bold], 
          Style["Contagious   =1000", 
           RGBColor[1, 0, 0], Bold], 
          Style["Susceptible  =0", 
           RGBColor[0., 0.5, 0.], Bold], 
          Style["Recovered    =0", 
           RGBColor[0., 0.5, 0.], Bold]}]}}, 
      Spacings -> {{10, 2}, 1.8}]}, $CellContext`Recovery$$ = 
    3, $CellContext`running$$ = True, $CellContext`TotalPop$$ = 
    1000, $CellContext`Transfer$$ = 0, $CellContext`w$$ = 1, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`moving$$], False}, {
      Hold[$CellContext`running$$], False}, {
      Hold[$CellContext`Pops$$], 
      Pane[
       Grid[{{"", 
          Image[CompressedData["
1:eJzt3S1w60yWxvHsBzA0NPQwQUNB7yJD1QwR9EzV7oqta2ar1oMMDQ0FBQ0N
DQ0FAw0NDQ0N7z5vut5UdnyTG8mS+uv/q5qpzJ3Y7iTS6dOnW91/+Mt///E/
//nl5eVvI/3XH//8v//217/++e9/+lf9j3//+//8x1/+RV/81z+9vBT6z29f
/wAAAAAAAAAAAADQ0Pl8Pv3u9fXVdnMADO1yuej2PxwOm99lWTZ/M5vNXn4m
SZL57z77Hv27+Qa92/s761P0WQo7tn9oAN/1Hh+KotAdrdtfN/h0Ov3p3f1k
LqHXmjd5jEgfP3e5XOrf9/u9vvN+v3f4wwJoQd26uWcXi4VuUt2q7/GhLEvr
/b7Jc6qqUnvyPFfbRqPRZDLRFyaS1HVtsXlAJHQn6jZULpGmqRlNmChxPB71
f9lu3bdcr1cFExNJzE+h8Y6+VqCjkAJ0RZ3ybrdTfFBPraRCab9usZB6aoUL
5R4Khgog4/FYuZOiimKL7XYBntGttN1ulc+rO1anvFqtNB5RT227Xb273W7K
nRQ33n/29XodUpAEuqVbRt2u0gnlFep5db/Q5ypiKH4qeigP0VhGY7QYgifw
S+fzmVvjlx6DKsUQREjhQtl48oZUvBEziFP0mE6nGsERQBC8j+FCX7A+6hmX
y2W32xFAECql2WVZEi568jGAKBVhoAffaQBiRuVFURAu+qYAokGfftt5nh+P
R9vNAZp5TzDSNK2qivXVA9vv92YNLekHvKAujwTDER/TD6ofcJOuTF2f6uNI
MFyj9MM8vcuSGLijrussy3Rl6vq03RZ8SkHDPPh/OBxstwVRM5dimqZcir7Q
n8wEef5kGJ6uOtN5kfr6SINKRQ8zqLTdFkRBEUO9la46IobvTBFb0aMsS0pS
6In6Jl1jihgU50Oi6FEUhf6yu92O6IEOqT8ye1/4sj0Omrper6vVajKZbDYb
ogeeVNd1mqbqj4gYMbjdboob6iNYbop2dAmZHfl4WDU2yj0Wb+gs0EhVVUmS
aHhiuyGwRimHroHtdsuwBb90Pp+VYyyXS55rgCLGer2ezWYMW/AZDUx0kaiL
YWCCj9SVaMySZRldCf7B4XAwSanthsBRXCH4iN4E30RGih9vo9fNZsPoFY1Q
AYuZugxFDBb5oB0z48bDcVHZ7Xbz+Zx9dfAMDVs0vF2tVnQ9weNvjW6ZPogV
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
9ECZyWdx4/Gbbf8EAAAAAAAAAAAAgKP+DwAVnG4=
           "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
          Column[{
            Style["City A", "Title", 20], 
            Style["Latent       =", 
             RGBColor[0, 0, 1], Bold], 
            Style["Contagious   =", 
             RGBColor[1, 0, 0], Bold], 
            Style["Susceptible  =", 
             RGBColor[0., 0.5, 0.], Bold], 
            Style["Recovered    =", 
             RGBColor[0., 0.5, 0.], Bold]}]}, {"", 
          Image[CompressedData["
1:eJzt3S1w60yWxvHsBzA0NPQwQUNB7yJD1QwR9EzV7oqta2ar1oMMDQ0FBQ0N
DQ0FAw0NDQ0N7z5vut5UdnyTG8mS+uv/q5qpzJ3Y7iTS6dOnW91/+Mt///E/
//nl5eVvI/3XH//8v//217/++e9/+lf9j3//+//8x1/+RV/81z+9vBT6z29f
/wAAAAAAAAAAAADQ0Pl8Pv3u9fXVdnMADO1yuej2PxwOm99lWTZ/M5vNXn4m
SZL57z77Hv27+Qa92/s761P0WQo7tn9oAN/1Hh+KotAdrdtfN/h0Ov3p3f1k
LqHXmjd5jEgfP3e5XOrf9/u9vvN+v3f4wwJoQd26uWcXi4VuUt2q7/GhLEvr
/b7Jc6qqUnvyPFfbRqPRZDLRFyaS1HVtsXlAJHQn6jZULpGmqRlNmChxPB71
f9lu3bdcr1cFExNJzE+h8Y6+VqCjkAJ0RZ3ybrdTfFBPraRCab9usZB6aoUL
5R4Khgog4/FYuZOiimKL7XYBntGttN1ulc+rO1anvFqtNB5RT227Xb273W7K
nRQ33n/29XodUpAEuqVbRt2u0gnlFep5db/Q5ypiKH4qeigP0VhGY7QYgifw
S+fzmVvjlx6DKsUQREjhQtl48oZUvBEziFP0mE6nGsERQBC8j+FCX7A+6hmX
y2W32xFAECql2WVZEi568jGAKBVhoAffaQBiRuVFURAu+qYAokGfftt5nh+P
R9vNAZp5TzDSNK2qivXVA9vv92YNLekHvKAujwTDER/TD6ofcJOuTF2f6uNI
MFyj9MM8vcuSGLijrussy3Rl6vq03RZ8SkHDPPh/OBxstwVRM5dimqZcir7Q
n8wEef5kGJ6uOtN5kfr6SINKRQ8zqLTdFkRBEUO9la46IobvTBFb0aMsS0pS
6In6Jl1jihgU50Oi6FEUhf6yu92O6IEOqT8ye1/4sj0Omrper6vVajKZbDYb
ogeeVNd1mqbqj4gYMbjdboob6iNYbop2dAmZHfl4WDU2yj0Wb+gs0EhVVUmS
aHhiuyGwRimHroHtdsuwBb90Pp+VYyyXS55rgCLGer2ezWYMW/AZDUx0kaiL
YWCCj9SVaMySZRldCf7B4XAwSanthsBRXCH4iN4E30RGih9vo9fNZsPoFY1Q
AYuZugxFDBb5oB0z48bDcVHZ7Xbz+Zx9dfAMDVs0vF2tVnQ9weNvjW6ZPogV
YgEzYxNyS3SL6ypg9AvoD3lsePibYhj0TcEgh8SQuN4CQPzH8Mhv/cXfDnbR
Z3mHXBEu4Dr0SFVVxHk4wuS96/XadkPwFSWHy+WSsQmcst1udVnabgV+TlF9
tVrZbgXwE0qDF4sFPZprFM/ZGwEuOx6PGkFr5GK7IfiNYrgiOQdvwX11XVN8
c4Git/4QbKABX7y+vvIstl2K25xTAO+Y65ZT/6wgbsNfypMVOsiTB8Y4Eb67
3+9ZllGXGwx1aYRBoWO5XO52O9sNCR/z4AjMarViQWmvzHJQ260AOsaC0v4o
0+B3i1CpT2S1c+eOx6OGJ7ZbAfRIoxXWPHfIzJ5Q00DwlFEzw9IJs06D2RNE
Qnk16zqedLlcWKeBqCiv1jXPKujWzJo6VoQiNuapKxait0DURczItFswS3AZ
5SFm5uB7KnvfR1UZ+PE2KaDQwUzidzCLDbxT1q3cm9DxNUUM1uoDH7FS+mv8
foCfYhX6Z1gUCnyBot+j2+02m82YdQI+oy5V9wjLmT7Ksozj8ICvKWgodJCT
G4zdgG+iBmhQ1gAaodBBWQNoikIHZQ2ghZgLHZQ1gNbiLHRQ1gCeFFuhg7IG
8LzYCh2UNYBOxFPooKwBdCiGQgdlDaBzYRc6FC6SJKGsAXQr7EIHG/IAPQn1
YDJ2PAN6FeR0w3w+P51OtlsBBOt6vU6n05C65v1+n+e57VYAgQtpsvJ2uyVJ
omBouyFA4JRspGkaxoFNCoAKg7ZbAUThdDrN53PbrXiWQt9sNrPdCiAiASzn
UNbEWY3AkK7Xa5Ik/h70VpZlURS2WwFEx99bT0FPIxTKoYAVuvt8LJAGMMgC
/OVjabGu6zRNbbcCiJqGKhqw2G5FA57mSEBI/Fo6FdKiNcBrvtyM9/t9Op36
EuKAsPlyP/oS34BIeHFLTiYT94MbEA/3U47D4ZBlme1WAPh/HE85mEYBHORy
ykGyATjL2ZSDZANw1u12m0wmru0GRrIBOM7BnXBINgDHubYBaRhbDAHBcyrl
CHIDdiA87qQcPj6uC0TLkZSDZAPwiAspB8kG4B3rfb31BgBoym5370LCA6AF
i+eubrfb9Xpt5aMBPKOqquVyaeWjlWxcLhcrHw3gGRomTCaT4c9YOR6Pi8Vi
4A8F0BUrE7JURAGvDV8dpSIKBGDgx8qoiAIBGPg4SCqiQACG3JSDs9iAYOR5
vt/vB/ggjVA0ThnggwD0TUFDoWOAD2KQAgRDg5TxeNz3UIVBChCYAYYqDFKA
wAywhpNBChCYvtecM0gBgrRcLquq6unNGaQAQep1qMJhB0CQ+ptVuVwu0+m0
87cF4ALlG8o6On9bixt9AOhbTwfIDrYeFcDwehpQaPgz/O5AAAbT+SoLTnIE
glcURVmWHb7h5k2HbwjANYfDIcuyDt+QGVggeN3Oxup9RqNRJ28FwGVpmtZ1
3clbUdwAItHhJucUN4BIdFji6GkhGQDX3G638XjcyVuxcgOIRyerOOweXQ1g
YJ08U9/TqnUAburkSbReN/QA4JpOhhhJkpzP507aA8ALo9HomdVfrPgCIvTk
6i+KokCEnnzAbeBjZwG44MnZkA4XnQLwxZOPlrBSFIjQk6tGWSkKxGkymVyv
1xYv1Kv02s7bA8B9rccaA5waCcBNrWubTKYA0Wo9pcKpjkC0Wm/EwYEpQLRa
r/nscKdBAH5pPRXbeiIGQABaLMPocLswAD5qcfoJT7QBkcuy7HA4NHpJ5yc3
AfBLiyUcLN4AIrfdbtfrdaOXcGYKELkWG43yBD0QuRbFCrYjBiLXYhcOdt4A
Ine5XKbTaaOXKM4o2vTTHAAeaLGIq5Oz3gB47eXlpdH3s8gcQNM40DTOAAhP
02PXiBsAmtY5iRsAGsWNFvMvAMJD3ADQFHEDQFONNgslbgD40fB5EzbtAfCj
Ydx48lRZAGEgbgBoirgBoKlGcaOu6zRN+2wOAA80ihvMpwD4QdwA0BxxA0BT
rBcF0FSjuHG/30ejUZ/NAeABnqMH0BRxA0BTTY+WbnGEPYDANN2fnP3MAYxG
o/v9/v3vT9O0ruv+2gPAfU3rFZy7BESuxXoMzocFInc+n5MkafSSoijKsuyp
PQDc1+K5+M2bfpoDwAOHwyHLskYv2e12q9Wqp/YAcF9VVcvlstFL9vt9nuc9
tQeA+7bb7Xq9bvQStu4BIteiyHm9XieTSU/tAeC+xWJxPB6bvoql5kDM2i0a
b/pIC4CQtHu4Ncuyw+HQeWMAuK/15l2r1Wq323XeHgDua30YCks4gGi1WLxh
tFgtBiAM6/V6u922eGGLp1oAhOGZ8mbTXTsAhEE5gzKHdq9l9x4gQk+eaMDT
9ECEXl9fZ7NZ65czpQJESNmCcobWLz8ej4vFosP2AHDfk2u3brfbeDzusD0A
3NfuibaPJpPJ9Xrtqj0A3Pf8Xf985AHgkU720GCjUSAqnSwUb/14CwAfdfJA
6/1+H4/HrBoFItHVxjts4ANEosM8gY04gEh0WJfggXogEh3Og7D6C4hEt+su
2u1sDMAv3Z5iwIOxQPA6X3RBiQMIXueLPFnFAQSvjxUXSmCUxnT7ngAc0dP0
B3v4AAFrffDB157cOgyAyxQ0FDr6eGdmY4FQ9XeOfH8RCYBFdV2nadrTm7Pd
KBCk1qezfcf9fp9MJj0lMwBs6bsEwVAFCEyvgxSDoQoQmF4HKQZDFSAww8yT
MlQBgjHAIMVgqAIEY4BBisFQBQjGkIs52XEUCMDAp5zwrAoQgDzP9/v9kJ+Y
pmld10N+IoAOXa9XDVIG3lSnp6duAQzDys4YVEcBryVJcj6fh/9cqqOApyye
+0x1FPDU8BXRj6iOAt6xUhH9iPMRAO+4UGHgtHrAI47MaJByAB5x52ACUg7A
C0o2ptPp9Xq13ZDf7Pf7PM9ttwLAL7iTbPxwLIgB+CkH71On4hiARw7epA6G
MgAf2VpY/jUHoxkAw9l5T1IOwFkuT3qScgAOcjbZMJRyjMdji+veATxyOdkw
XFj6DuCd48mGYf1ROwAfLRaL4/FouxW/RsoBOMKjTXJut1uSJEysANa5X9n4
iF2LAevKsiyKwnYrmmErMMAiJfxKNrxL+z0aWAHh8ff8dwqkgBWDnTLfB1ae
A1b4VQ59xJY+wMDCeNxjPp+fTifbrQCiEMzCS+VLGmoF8IMA7rN7oFK31uv1
dru13QogcMfjcbFY2G5FZyiQAn3TXTabzRzc0esZXjyUB/hLKb0Se9ut6J4v
z+UB3rlcLkmSBFlFVAalPCrIHw2wS8m8UnrbrehLGDPLgFNieIw07MAIDCyS
NP52u+nH1HDMdkMA7wU5h/KZuq7n83nwERLom78PvbZDoQN4UgxljUcUOoDW
IilrPKLQAbQTVVnjEYUOoIXYyhqPKHQAjcRZ1nhEoQP4pmjLGo8odADfEXlZ
4xGFDuCXKGs8otABfIGyxmcIp8BPsdnmF/RrybKMPTqAjy6Xy2w2u91uthvi
LoUOxVWvj34AOqSgMZ/PmTX4JcVVhQ6KxoDuBQUNutFvIsYCyr0XiwVnDzWi
GKvQwZgO0WI/3nYUafWro4aMCDG3+IzAzpEBvmPzxnYr/MZyF0SFBZBdIfwi
Evv9Ps9z260IhyKw4rDtVgA90qg8yzIKet0K6aBt4B+wkrwnZhU6oQPhYdVB
rxQ6lHWUZWm7IUBnNDwhaAygKArKpAiD8mdl0QSNYShuMDkL3ylzVv5MTWNI
VVVRfIa/1Pcpc7bdihgdDofFYkGOB+8oW2asbdHpdJrP59fr1XZDgG8x04I8
e2KdmfjmoXu4T7mxMmRO/XCE2UiN7U3gMmXFyo3ZT8MpZmck9iuAm9S1sQGm
mxQ6WFAKBylccLKYy8yCUirVcEdVVco0mPVzn+IGkyywTr3Y8g2rjHxxOp2U
GVKDgi3mAGjmW71jyteMWTA8hQsOgPYaYxYMibFJMBizYBiMTQLDmAV9Y2wS
KsYs6ANjk+AxZkG3GJtEgjELusLYJDaKGzwvgNbU+2RZxtgkQnVdq7NYrVas
AUYj2+12Op3yOHzMdrtdkiQ8DYfvOJ1OulrW6zVpBpRz5nk+n88ZqOIzXCT4
KTPVQleCRxqYkJTiM4oYZujK/j8wTBFMvQlFMHxNGeniDRutxEyXwXK5ZNIN
jSjlUGq62WwYtkSoLEv99VnNhRYUMRQ3lKYy4xaP0+mkHKMoCgYmeMb5fM6y
jOgRPHMWj9R1bbstCIQGuYoe5K5BUo+gHINDCtAT5R7L5XI6nRI9wqCIoUxS
PQI5Bvp2uVwUPSaTyW63o2rqKUV+xX9FDKZLMKTr9bparXTtbbdbami+UJwv
y1J/NUV+5tlhi6LHer3WdbjZbIgeLlPEUH6ov1RRFEQMuEARQ3FD16QyEPYT
cw1/HbhM16d6tMlkkuc5K9VdUNe1qUQpbhAx4Lj9fr9YLEzpg8t1ePqdmwWf
aZpWVUXtGh7RIHq9XpN+DEm/Z/229TsvioIH3uG19/RD42tm/fqg36qZ29Lv
mafdERKlH7vdbjabEUC6oozCTGbpt6rfLbMkCBgB5EkKF5vNJnmz3W4JF4jK
ewDReHy5XCrBZgXIZ+73++FwKIpCwdbsb0D5ApG7Xq9VVeV5Ph6P0zRV7s3j
EoaSMWUU8/l8NBplWVaWJdkF8EgRQ3eKoodiyGKx0NexPaSp34DSMEUJpWFm
j77YfgNAaxqzHI9H3TXqbV9eXkweolw9vAUhGoPoJzWn9yqv0E+6Wq2C/EmB
gZk8xPTCYo6q3O/3PpZVz+ezwoLar4QqSRLFCn2h/6m8gjVaQE/UEesW042W
57kyeWUj+m99rX/R/ejU3aesSe0xUcJs86vWKlYoAOpflGZQ3gRsUdah3EN3
ou5Hk+2boY1JS0yRxOgj+denmzcvy1Ifp1GGPtcEtPF4rK9NlKiqinov4Djd
pCYtMUUSQ2OclzeKLfMH+s7NJx6/+eV3ChHmX4qi0Hfudjt9ro8DKABf01jm
9ECZyWdx4/Gbbf8EAAAAAAAAAAAAgKP+DwAVnG4=
           "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
          Column[{
            Style["City B", "Title", 20], 
            Style["Latent       =", 
             RGBColor[0, 0, 1], Bold], 
            Style["Contagious   =", 
             RGBColor[1, 0, 0], Bold], 
            Style["Susceptible  =", 
             RGBColor[0., 0.5, 0.], Bold], 
            Style["Recovered    =", 
             RGBColor[0., 0.5, 0.], Bold]}]}}, Spacings -> {{10, 2}, 1.8}], {
       200, 400}]}, {
      Hold[$CellContext`InfectedA$$], 1}, {
      Hold[$CellContext`InfectedB$$], 1}, {
      Hold[$CellContext`Days$$], 7}, {
      Hold[$CellContext`Recovery$$], 3}, {
      Hold[$CellContext`Incubation$$], 3}, {
      Hold[$CellContext`Infectious$$], 10}, {
      Hold[$CellContext`Transfer$$], 0}, {
      Hold[$CellContext`w$$], 1}, {
      Hold[$CellContext`TotalPop$$], 10}, {
      Hold[$CellContext`i$$], 0}, {
      Hold[$CellContext`j$$], 0}, {{
       Hold[$CellContext`w$$], 1, ""}, 1, 
      Dynamic[$CellContext`Days$$], 1}, {{
       Hold[$CellContext`Days$$], 7, ""}, 1, 21, 1}, {{
       Hold[$CellContext`TotalPop$$], 10, ""}, 1, 1000, 1}, {{
       Hold[$CellContext`InfectedA$$], 1, ""}, 0, 
      Dynamic[$CellContext`TotalPop$$], 1}, {{
       Hold[$CellContext`InfectedB$$], 1, ""}, 0, 
      Dynamic[$CellContext`TotalPop$$], 1}, {{
       Hold[$CellContext`Transfer$$], 0, ""}, 0, 
      Dynamic[$CellContext`TotalPop$$], 1}, {{
       Hold[$CellContext`Infectious$$], 0.1, ""}, 0, 1, 0.01}, {{
       Hold[$CellContext`Incubation$$], 3, ""}, 1, 7, 1}, {{
       Hold[$CellContext`Recovery$$], 3, ""}, 1, 7, 1}, {
      Hold[
       Column[{
         Dynamic[
          Button[
           StringJoin[
            If[$CellContext`running$$, "reset", "run"], " simulation"], {
            If[
             Not[$CellContext`running$$], $CellContext`moving$$ = 
             True], $CellContext`running$$ = Not[$CellContext`running$$]}, 
           ImageSize -> 225, Alignment -> Center]], 
         Dynamic[
          If[$CellContext`running$$, 
           Column[{
             Column[{
               Spacer[{0, 10}], "day (morning)", 
               Manipulate`Place[1]}, Left], 
             Column[{
               Spacer[{0, 10}], 
               Row[{"duration of simulation = ", 
                 ToString[$CellContext`Days$$]}], 
               Spacer[{0, 15}], 
               Row[{"city population = ", 
                 ToString[$CellContext`TotalPop$$]}], 
               Spacer[{0, 15}], 
               Row[{"initial infected cases, City A = ", 
                 ToString[$CellContext`InfectedA$$]}], 
               Spacer[{0, 15}], 
               Row[{"initial infected cases, City B = ", 
                 ToString[$CellContext`InfectedB$$]}], 
               Spacer[{0, 15}], 
               Row[{"travellers/day = ", 
                 ToString[$CellContext`Transfer$$]}], 
               Spacer[{0, 15}], 
               Row[{"chance of infection on contact = ", 
                 ToString[$CellContext`Infectious$$]}], 
               Spacer[{0, 15}], 
               Row[{"latency before contagious state [days] = ", 
                 ToString[$CellContext`Incubation$$]}], 
               Spacer[{0, 15}], 
               Row[{"duration of contagious state [days] = ", 
                 ToString[$CellContext`Recovery$$]}]}, Right]}, Center], ""]], 
         Dynamic[
          If[
           Not[$CellContext`running$$], 
           Column[{"duration of simulation [days]", 
             Manipulate`Place[2], "city population", 
             Manipulate`Place[3], "initial infected cases, City A", 
             Manipulate`Place[4], "initial infected cases, City B", 
             Manipulate`Place[5], "travellers/day", 
             Manipulate`Place[6], "chance of infection on contact", 
             Manipulate`Place[7], "latency before contagious state [days]", 
             Manipulate`Place[8], "duration of contagious state [days]", 
             Manipulate`Place[9]}, Left, 0.45], ""]]}, Center]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    369., {206.5, 211.5}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`w$5600$$ = 
    0, $CellContext`Days$5601$$ = 0, $CellContext`TotalPop$5602$$ = 
    0, $CellContext`InfectedA$5603$$ = 0, $CellContext`InfectedB$5604$$ = 
    0, $CellContext`Transfer$5605$$ = 0, $CellContext`Infectious$5606$$ = 
    0, $CellContext`Incubation$5607$$ = 0, $CellContext`Recovery$5608$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`Days$$ = 7, $CellContext`i$$ = 
        0, $CellContext`Incubation$$ = 3, $CellContext`InfectedA$$ = 
        1, $CellContext`InfectedB$$ = 1, $CellContext`Infectious$$ = 
        0.1, $CellContext`j$$ = 0, $CellContext`moving$$ = 
        False, $CellContext`Pops$$ = Pane[
          Grid[{{"", 
             Image[CompressedData["
1:eJzt3S1w60yWxvHsBzA0NPQwQUNB7yJD1QwR9EzV7oqta2ar1oMMDQ0FBQ0N
DQ0FAw0NDQ0N7z5vut5UdnyTG8mS+uv/q5qpzJ3Y7iTS6dOnW91/+Mt///E/
//nl5eVvI/3XH//8v//217/++e9/+lf9j3//+//8x1/+RV/81z+9vBT6z29f
/wAAAAAAAAAAAADQ0Pl8Pv3u9fXVdnMADO1yuej2PxwOm99lWTZ/M5vNXn4m
SZL57z77Hv27+Qa92/s761P0WQo7tn9oAN/1Hh+KotAdrdtfN/h0Ov3p3f1k
LqHXmjd5jEgfP3e5XOrf9/u9vvN+v3f4wwJoQd26uWcXi4VuUt2q7/GhLEvr
/b7Jc6qqUnvyPFfbRqPRZDLRFyaS1HVtsXlAJHQn6jZULpGmqRlNmChxPB71
f9lu3bdcr1cFExNJzE+h8Y6+VqCjkAJ0RZ3ybrdTfFBPraRCab9usZB6aoUL
5R4Khgog4/FYuZOiimKL7XYBntGttN1ulc+rO1anvFqtNB5RT227Xb273W7K
nRQ33n/29XodUpAEuqVbRt2u0gnlFep5db/Q5ypiKH4qeigP0VhGY7QYgifw
S+fzmVvjlx6DKsUQREjhQtl48oZUvBEziFP0mE6nGsERQBC8j+FCX7A+6hmX
y2W32xFAECql2WVZEi568jGAKBVhoAffaQBiRuVFURAu+qYAokGfftt5nh+P
R9vNAZp5TzDSNK2qivXVA9vv92YNLekHvKAujwTDER/TD6ofcJOuTF2f6uNI
MFyj9MM8vcuSGLijrussy3Rl6vq03RZ8SkHDPPh/OBxstwVRM5dimqZcir7Q
n8wEef5kGJ6uOtN5kfr6SINKRQ8zqLTdFkRBEUO9la46IobvTBFb0aMsS0pS
6In6Jl1jihgU50Oi6FEUhf6yu92O6IEOqT8ye1/4sj0Omrper6vVajKZbDYb
ogeeVNd1mqbqj4gYMbjdboob6iNYbop2dAmZHfl4WDU2yj0Wb+gs0EhVVUmS
aHhiuyGwRimHroHtdsuwBb90Pp+VYyyXS55rgCLGer2ezWYMW/AZDUx0kaiL
YWCCj9SVaMySZRldCf7B4XAwSanthsBRXCH4iN4E30RGih9vo9fNZsPoFY1Q
AYuZugxFDBb5oB0z48bDcVHZ7Xbz+Zx9dfAMDVs0vF2tVnQ9weNvjW6ZPogV
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
9ECZyWdx4/Gbbf8EAAAAAAAAAAAAgKP+DwAVnG4=
              "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
             Column[{
               Style["City A", "Title", 20], 
               Style["Latent       =", 
                RGBColor[0, 0, 1], Bold], 
               Style["Contagious   =", 
                RGBColor[1, 0, 0], Bold], 
               Style["Susceptible  =", 
                RGBColor[0., 0.5, 0.], Bold], 
               Style["Recovered    =", 
                RGBColor[0., 0.5, 0.], Bold]}]}, {"", 
             Image[CompressedData["
1:eJzt3S1w60yWxvHsBzA0NPQwQUNB7yJD1QwR9EzV7oqta2ar1oMMDQ0FBQ0N
DQ0FAw0NDQ0N7z5vut5UdnyTG8mS+uv/q5qpzJ3Y7iTS6dOnW91/+Mt///E/
//nl5eVvI/3XH//8v//217/++e9/+lf9j3//+//8x1/+RV/81z+9vBT6z29f
/wAAAAAAAAAAAADQ0Pl8Pv3u9fXVdnMADO1yuej2PxwOm99lWTZ/M5vNXn4m
SZL57z77Hv27+Qa92/s761P0WQo7tn9oAN/1Hh+KotAdrdtfN/h0Ov3p3f1k
LqHXmjd5jEgfP3e5XOrf9/u9vvN+v3f4wwJoQd26uWcXi4VuUt2q7/GhLEvr
/b7Jc6qqUnvyPFfbRqPRZDLRFyaS1HVtsXlAJHQn6jZULpGmqRlNmChxPB71
f9lu3bdcr1cFExNJzE+h8Y6+VqCjkAJ0RZ3ybrdTfFBPraRCab9usZB6aoUL
5R4Khgog4/FYuZOiimKL7XYBntGttN1ulc+rO1anvFqtNB5RT227Xb273W7K
nRQ33n/29XodUpAEuqVbRt2u0gnlFep5db/Q5ypiKH4qeigP0VhGY7QYgifw
S+fzmVvjlx6DKsUQREjhQtl48oZUvBEziFP0mE6nGsERQBC8j+FCX7A+6hmX
y2W32xFAECql2WVZEi568jGAKBVhoAffaQBiRuVFURAu+qYAokGfftt5nh+P
R9vNAZp5TzDSNK2qivXVA9vv92YNLekHvKAujwTDER/TD6ofcJOuTF2f6uNI
MFyj9MM8vcuSGLijrussy3Rl6vq03RZ8SkHDPPh/OBxstwVRM5dimqZcir7Q
n8wEef5kGJ6uOtN5kfr6SINKRQ8zqLTdFkRBEUO9la46IobvTBFb0aMsS0pS
6In6Jl1jihgU50Oi6FEUhf6yu92O6IEOqT8ye1/4sj0Omrper6vVajKZbDYb
ogeeVNd1mqbqj4gYMbjdboob6iNYbop2dAmZHfl4WDU2yj0Wb+gs0EhVVUmS
aHhiuyGwRimHroHtdsuwBb90Pp+VYyyXS55rgCLGer2ezWYMW/AZDUx0kaiL
YWCCj9SVaMySZRldCf7B4XAwSanthsBRXCH4iN4E30RGih9vo9fNZsPoFY1Q
AYuZugxFDBb5oB0z48bDcVHZ7Xbz+Zx9dfAMDVs0vF2tVnQ9weNvjW6ZPogV
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
9ECZyWdx4/Gbbf8EAAAAAAAAAAAAgKP+DwAVnG4=
              "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
             Column[{
               Style["City B", "Title", 20], 
               Style["Latent       =", 
                RGBColor[0, 0, 1], Bold], 
               Style["Contagious   =", 
                RGBColor[1, 0, 0], Bold], 
               Style["Susceptible  =", 
                RGBColor[0., 0.5, 0.], Bold], 
               Style["Recovered    =", 
                RGBColor[0., 0.5, 0.], Bold]}]}}, 
           Spacings -> {{10, 2}, 1.8}], {200, 400}], $CellContext`Recovery$$ = 
        3, $CellContext`running$$ = False, $CellContext`TotalPop$$ = 
        10, $CellContext`Transfer$$ = 0, $CellContext`w$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`w$$, $CellContext`w$5600$$, 0], 
        Hold[$CellContext`Days$$, $CellContext`Days$5601$$, 0], 
        Hold[$CellContext`TotalPop$$, $CellContext`TotalPop$5602$$, 0], 
        Hold[$CellContext`InfectedA$$, $CellContext`InfectedA$5603$$, 0], 
        Hold[$CellContext`InfectedB$$, $CellContext`InfectedB$5604$$, 0], 
        Hold[$CellContext`Transfer$$, $CellContext`Transfer$5605$$, 0], 
        Hold[$CellContext`Infectious$$, $CellContext`Infectious$5606$$, 0], 
        Hold[$CellContext`Incubation$$, $CellContext`Incubation$5607$$, 0], 
        Hold[$CellContext`Recovery$$, $CellContext`Recovery$5608$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Refresh[If[$CellContext`moving$$, $CellContext`w$$ = 
           1; $CellContext`Pops$$ = {}; $CellContext`PopA = Table[{
              StringJoin[
               ToString[$CellContext`k], "A"], 
              RandomReal[{0, 1.8}], 
              RandomReal[{0, 2 Pi}], "u", 0}, {$CellContext`k, 
              1, $CellContext`TotalPop$$}]; $CellContext`PopB = Table[{
              StringJoin[
               ToString[$CellContext`k], "B"], 
              RandomReal[{0, 1.8}], 
              RandomReal[{0, 2 Pi}], "u", 0}, {$CellContext`k, 
              1, $CellContext`TotalPop$$}]; 
          For[$CellContext`j$$ = 
            1, $CellContext`j$$ < $CellContext`InfectedA$$ + 1, 
            Increment[$CellContext`j$$], Part[
              Part[$CellContext`PopA, $CellContext`j$$], 4] = "i"]; 
          For[$CellContext`j$$ = 
            1, $CellContext`j$$ < $CellContext`InfectedB$$ + 1, 
            Increment[$CellContext`j$$], Part[
              Part[$CellContext`PopB, $CellContext`j$$], 4] = "i"]; 
          For[$CellContext`k = 1, $CellContext`k < $CellContext`Days$$ + 1, 
            
            Increment[$CellContext`k], $CellContext`Pops$$ = 
             Append[$CellContext`Pops$$, 
               Grid[{{"", 
                  Image[
                   Graphics[
                    Join[{{
                    Circle[{0, 0}, 2]}}, 
                    Table[{
                    If[
                    Or[Part[
                    Part[$CellContext`PopA, $CellContext`i$$], 4] == "u", Part[
                    Part[$CellContext`PopA, $CellContext`i$$], 4] == "r"], 
                    Darker[Green, 0.5], 
                    If[Part[
                    Part[$CellContext`PopA, $CellContext`i$$], 4] == "i", Red,
                     Blue]], 
                    Disk[{Part[
                    Part[$CellContext`PopA, $CellContext`i$$], 2] Cos[
                    Part[
                    Part[$CellContext`PopA, $CellContext`i$$], 3]], Part[
                    Part[$CellContext`PopA, $CellContext`i$$], 2] Sin[
                    Part[
                    Part[$CellContext`PopA, $CellContext`i$$], 3]]}, 
                    0.1]}, {$CellContext`i$$, 1, 
                    Length[$CellContext`PopA]}]]]], 
                  Column[{
                    Style["City A", "Title", 20], 
                    Style[
                    StringJoin["Latent       ", "=", 
                    ToString[
                    Length[
                    Cases[$CellContext`PopA, {
                    Blank[], 
                    Blank[], 
                    Blank[], "n", 
                    Blank[]}]]]], Blue, Bold], 
                    Style[
                    StringJoin["Contagious   ", "=", 
                    ToString[
                    Length[
                    Cases[$CellContext`PopA, {
                    Blank[], 
                    Blank[], 
                    Blank[], "i", 
                    Blank[]}]]]], Red, Bold], 
                    Style[
                    StringJoin["Susceptible  ", "=", 
                    ToString[
                    Length[
                    Cases[$CellContext`PopA, {
                    Blank[], 
                    Blank[], 
                    Blank[], "u", 
                    Blank[]}]]]], 
                    Darker[Green, 0.5], Bold], 
                    Style[
                    StringJoin["Recovered    ", "=", 
                    ToString[
                    Length[
                    Cases[$CellContext`PopA, {
                    Blank[], 
                    Blank[], 
                    Blank[], "r", 
                    Blank[]}]]]], 
                    Darker[Green, 0.5], Bold]}]}, {"", 
                  Image[
                   Graphics[
                    Join[{{
                    Circle[{0, 0}, 2]}}, 
                    Table[{
                    If[
                    Or[Part[
                    Part[$CellContext`PopB, $CellContext`i$$], 4] == "u", Part[
                    Part[$CellContext`PopB, $CellContext`i$$], 4] == "r"], 
                    Darker[Green, 0.5], 
                    If[Part[
                    Part[$CellContext`PopB, $CellContext`i$$], 4] == "i", Red,
                     Blue]], 
                    Disk[{Part[
                    Part[$CellContext`PopB, $CellContext`i$$], 2] Cos[
                    Part[
                    Part[$CellContext`PopB, $CellContext`i$$], 3]], Part[
                    Part[$CellContext`PopB, $CellContext`i$$], 2] Sin[
                    Part[
                    Part[$CellContext`PopB, $CellContext`i$$], 3]]}, 
                    0.1]}, {$CellContext`i$$, 1, 
                    Length[$CellContext`PopB]}]]]], 
                  Column[{
                    Style["City B", "Title", 20], 
                    Style[
                    StringJoin["Latent       ", "=", 
                    ToString[
                    Length[
                    Cases[$CellContext`PopB, {
                    Blank[], 
                    Blank[], 
                    Blank[], "n", 
                    Blank[]}]]]], Blue, Bold], 
                    Style[
                    StringJoin["Contagious   ", "=", 
                    ToString[
                    Length[
                    Cases[$CellContext`PopB, {
                    Blank[], 
                    Blank[], 
                    Blank[], "i", 
                    Blank[]}]]]], Red, Bold], 
                    Style[
                    StringJoin["Susceptible  ", "=", 
                    ToString[
                    Length[
                    Cases[$CellContext`PopB, {
                    Blank[], 
                    Blank[], 
                    Blank[], "u", 
                    Blank[]}]]]], 
                    Darker[Green, 0.5], Bold], 
                    Style[
                    StringJoin["Recovered    ", "=", 
                    ToString[
                    Length[
                    Cases[$CellContext`PopB, {
                    Blank[], 
                    Blank[], 
                    Blank[], "r", 
                    Blank[]}]]]], 
                    Darker[Green, 0.5], Bold]}]}}, 
                Spacings -> {{10, 2}, 1.8}]]; 
            For[$CellContext`i$$ = 1, $CellContext`i$$ < 
              Length[$CellContext`PopA] + 1, 
              Increment[$CellContext`i$$], Which[
                And[Part[
                   Part[$CellContext`PopA, $CellContext`i$$], 
                   5] == $CellContext`Recovery$$, Part[
                   Part[$CellContext`PopA, $CellContext`i$$], 4] == "i"], Part[
                   Part[$CellContext`PopA, $CellContext`i$$], 5] = 0; Part[
                   Part[$CellContext`PopA, $CellContext`i$$], 4] = "r", 
                And[Part[
                   Part[$CellContext`PopA, $CellContext`i$$], 
                   5] == $CellContext`Incubation$$ - 1, Part[
                   Part[$CellContext`PopA, $CellContext`i$$], 4] == "n"], Part[
                   Part[$CellContext`PopA, $CellContext`i$$], 5] = 0; Part[
                   Part[$CellContext`PopA, $CellContext`i$$], 4] = "i"]; 
              Null]; For[$CellContext`i$$ = 1, $CellContext`i$$ < 
              Length[$CellContext`PopB] + 1, 
              Increment[$CellContext`i$$], Which[
                And[Part[
                   Part[$CellContext`PopB, $CellContext`i$$], 
                   5] == $CellContext`Recovery$$, Part[
                   Part[$CellContext`PopB, $CellContext`i$$], 4] == "i"], Part[
                   Part[$CellContext`PopB, $CellContext`i$$], 5] = 0; Part[
                   Part[$CellContext`PopB, $CellContext`i$$], 4] = "r", 
                And[Part[
                   Part[$CellContext`PopB, $CellContext`i$$], 
                   5] == $CellContext`Incubation$$ - 1, Part[
                   Part[$CellContext`PopB, $CellContext`i$$], 4] == "n"], Part[
                   Part[$CellContext`PopB, $CellContext`i$$], 5] = 0; Part[
                   Part[$CellContext`PopB, $CellContext`i$$], 4] = "i"]; 
              Null]; For[$CellContext`i$$ = 1, $CellContext`i$$ < 
              Length[$CellContext`PopA] + 1, 
              Increment[$CellContext`i$$], 
              If[
               Or[Part[
                  Part[$CellContext`PopA, $CellContext`i$$], 4] == "i", Part[
                  Part[$CellContext`PopA, $CellContext`i$$], 4] == "n"], Part[
                 Part[$CellContext`PopA, $CellContext`i$$], 5] = Part[
                  Part[$CellContext`PopA, $CellContext`i$$], 5] + 1]]; 
            For[$CellContext`i$$ = 1, $CellContext`i$$ < 
              Length[$CellContext`PopB] + 1, 
              Increment[$CellContext`i$$], 
              If[
               Or[Part[
                  Part[$CellContext`PopB, $CellContext`i$$], 4] == "i", Part[
                  Part[$CellContext`PopB, $CellContext`i$$], 4] == "n"], Part[
                 Part[$CellContext`PopB, $CellContext`i$$], 5] = Part[
                  Part[$CellContext`PopB, $CellContext`i$$], 5] + 
                1]]; $CellContext`TotalPeopleA = 
             Length[$CellContext`PopA]; $CellContext`PeopleMetA = 
             Random[Integer, {10, 20}]; $CellContext`TotalPeopleB = 
             Length[$CellContext`PopB]; $CellContext`PeopleMetB = 
             Random[Integer, {10, 20}]; 
            For[$CellContext`j$$ = 
               1, $CellContext`j$$ < $CellContext`TotalPeopleA + 1, 
               Increment[$CellContext`j$$], 
               If[Part[
                  Part[$CellContext`PopA, $CellContext`j$$], 4] = "i", 
                
                For[$CellContext`i$$ = 
                 0, $CellContext`i$$ < $CellContext`PeopleMetA, 
                 
                 Increment[$CellContext`i$$], $CellContext`ContactA = 
                  Random[Integer, {1, $CellContext`TotalPeopleA}]; If[Part[
                    Part[$CellContext`PopA, $CellContext`ContactA], 4] == "i", 
                   If[
                    And[Part[
                    Part[$CellContext`PopA, $CellContext`j$$], 4] != "i", Part[
                    Part[$CellContext`PopA, $CellContext`j$$], 4] != "n", Part[
                    Part[$CellContext`PopA, $CellContext`j$$], 4] != "r", 
                    Random[Integer, {1, 100}] < $CellContext`Infectious$$], 
                    Part[
                    Part[$CellContext`PopA, $CellContext`j$$], 4] = "n"], 
                   If[
                    And[Part[
                    Part[$CellContext`PopA, $CellContext`ContactA], 4] != "n",
                     Part[
                    Part[$CellContext`PopA, $CellContext`ContactA], 4] != "r",
                     Part[
                    Part[$CellContext`PopA, $CellContext`j$$], 4] == "i", 
                    Random[Real, {0, 1}] < $CellContext`Infectious$$], Part[
                    Part[$CellContext`PopA, $CellContext`ContactA], 4] = 
                    "n"]]]]] 
             For[$CellContext`j$$ = 
               1, $CellContext`j$$ < $CellContext`TotalPeopleB + 1, 
               Increment[$CellContext`j$$], 
               If[Part[
                  Part[$CellContext`PopB, $CellContext`j$$], 4] = "i", 
                
                For[$CellContext`i$$ = 
                 0, $CellContext`i$$ < $CellContext`PeopleMetB, 
                 
                 Increment[$CellContext`i$$], $CellContext`ContactB = 
                  Random[Integer, {1, $CellContext`TotalPeopleB}]; If[Part[
                    Part[$CellContext`PopB, $CellContext`ContactB], 4] == "i", 
                   If[
                    And[Part[
                    Part[$CellContext`PopB, $CellContext`j$$], 4] != "i", Part[
                    Part[$CellContext`PopB, $CellContext`j$$], 4] != "n", Part[
                    Part[$CellContext`PopB, $CellContext`j$$], 4] != "r", 
                    Random[Integer, {1, 100}] < $CellContext`Infectious$$], 
                    Part[
                    Part[$CellContext`PopB, $CellContext`j$$], 4] = "n"], 
                   If[
                    And[Part[
                    Part[$CellContext`PopB, $CellContext`ContactB], 4] != "n",
                     Part[
                    Part[$CellContext`PopB, $CellContext`ContactB], 4] != "r",
                     Part[
                    Part[$CellContext`PopB, $CellContext`j$$], 4] == "i", 
                    Random[Real, {0, 1}] < $CellContext`Infectious$$], Part[
                    Part[$CellContext`PopB, $CellContext`ContactB], 4] = 
                    "n"]]]]]; $CellContext`ToA = {}; $CellContext`ToB = {}; 
            For[$CellContext`i$$ = 0, 
              Length[$CellContext`ToA] < $CellContext`Transfer$$, 
              
              Increment[$CellContext`i$$], $CellContext`j$$ = 
               RandomChoice[$CellContext`PopB]; $CellContext`ToA = 
               Append[$CellContext`ToA, $CellContext`j$$]; $CellContext`PopB = 
               Complement[$CellContext`PopB, $CellContext`ToA]]; 
            For[$CellContext`i$$ = 0, 
              Length[$CellContext`ToB] < $CellContext`Transfer$$, 
              
              Increment[$CellContext`i$$], $CellContext`j$$ = 
               RandomChoice[$CellContext`PopA]; $CellContext`ToB = 
               Append[$CellContext`ToB, $CellContext`j$$]; $CellContext`PopA = 
               Complement[$CellContext`PopA, $CellContext`ToB]]; \
$CellContext`PopA = 
             Join[$CellContext`PopA, $CellContext`ToA]; $CellContext`PopB = 
             Join[$CellContext`PopB, $CellContext`ToB]; 
            Null]; $CellContext`moving$$ = False; Null]; 
        Part[$CellContext`Pops$$, $CellContext`w$$], UpdateInterval -> 
        If[$CellContext`moving$$, 2, Infinity]], 
      "Specifications" :> {{$CellContext`moving$$, False, ControlType -> 
         None}, {$CellContext`running$$, False, ControlType -> 
         None}, {$CellContext`Pops$$, 
         Pane[
          Grid[{{"", 
             Image[CompressedData["
1:eJzt3S1w60yWxvHsBzA0NPQwQUNB7yJD1QwR9EzV7oqta2ar1oMMDQ0FBQ0N
DQ0FAw0NDQ0N7z5vut5UdnyTG8mS+uv/q5qpzJ3Y7iTS6dOnW91/+Mt///E/
//nl5eVvI/3XH//8v//217/++e9/+lf9j3//+//8x1/+RV/81z+9vBT6z29f
/wAAAAAAAAAAAADQ0Pl8Pv3u9fXVdnMADO1yuej2PxwOm99lWTZ/M5vNXn4m
SZL57z77Hv27+Qa92/s761P0WQo7tn9oAN/1Hh+KotAdrdtfN/h0Ov3p3f1k
LqHXmjd5jEgfP3e5XOrf9/u9vvN+v3f4wwJoQd26uWcXi4VuUt2q7/GhLEvr
/b7Jc6qqUnvyPFfbRqPRZDLRFyaS1HVtsXlAJHQn6jZULpGmqRlNmChxPB71
f9lu3bdcr1cFExNJzE+h8Y6+VqCjkAJ0RZ3ybrdTfFBPraRCab9usZB6aoUL
5R4Khgog4/FYuZOiimKL7XYBntGttN1ulc+rO1anvFqtNB5RT227Xb273W7K
nRQ33n/29XodUpAEuqVbRt2u0gnlFep5db/Q5ypiKH4qeigP0VhGY7QYgifw
S+fzmVvjlx6DKsUQREjhQtl48oZUvBEziFP0mE6nGsERQBC8j+FCX7A+6hmX
y2W32xFAECql2WVZEi568jGAKBVhoAffaQBiRuVFURAu+qYAokGfftt5nh+P
R9vNAZp5TzDSNK2qivXVA9vv92YNLekHvKAujwTDER/TD6ofcJOuTF2f6uNI
MFyj9MM8vcuSGLijrussy3Rl6vq03RZ8SkHDPPh/OBxstwVRM5dimqZcir7Q
n8wEef5kGJ6uOtN5kfr6SINKRQ8zqLTdFkRBEUO9la46IobvTBFb0aMsS0pS
6In6Jl1jihgU50Oi6FEUhf6yu92O6IEOqT8ye1/4sj0Omrper6vVajKZbDYb
ogeeVNd1mqbqj4gYMbjdboob6iNYbop2dAmZHfl4WDU2yj0Wb+gs0EhVVUmS
aHhiuyGwRimHroHtdsuwBb90Pp+VYyyXS55rgCLGer2ezWYMW/AZDUx0kaiL
YWCCj9SVaMySZRldCf7B4XAwSanthsBRXCH4iN4E30RGih9vo9fNZsPoFY1Q
AYuZugxFDBb5oB0z48bDcVHZ7Xbz+Zx9dfAMDVs0vF2tVnQ9weNvjW6ZPogV
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
9ECZyWdx4/Gbbf8EAAAAAAAAAAAAgKP+DwAVnG4=
              "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
             Column[{
               Style["City A", "Title", 20], 
               Style["Latent       =", 
                RGBColor[0, 0, 1], Bold], 
               Style["Contagious   =", 
                RGBColor[1, 0, 0], Bold], 
               Style["Susceptible  =", 
                RGBColor[0., 0.5, 0.], Bold], 
               Style["Recovered    =", 
                RGBColor[0., 0.5, 0.], Bold]}]}, {"", 
             Image[CompressedData["
1:eJzt3S1w60yWxvHsBzA0NPQwQUNB7yJD1QwR9EzV7oqta2ar1oMMDQ0FBQ0N
DQ0FAw0NDQ0N7z5vut5UdnyTG8mS+uv/q5qpzJ3Y7iTS6dOnW91/+Mt///E/
//nl5eVvI/3XH//8v//217/++e9/+lf9j3//+//8x1/+RV/81z+9vBT6z29f
/wAAAAAAAAAAAADQ0Pl8Pv3u9fXVdnMADO1yuej2PxwOm99lWTZ/M5vNXn4m
SZL57z77Hv27+Qa92/s761P0WQo7tn9oAN/1Hh+KotAdrdtfN/h0Ov3p3f1k
LqHXmjd5jEgfP3e5XOrf9/u9vvN+v3f4wwJoQd26uWcXi4VuUt2q7/GhLEvr
/b7Jc6qqUnvyPFfbRqPRZDLRFyaS1HVtsXlAJHQn6jZULpGmqRlNmChxPB71
f9lu3bdcr1cFExNJzE+h8Y6+VqCjkAJ0RZ3ybrdTfFBPraRCab9usZB6aoUL
5R4Khgog4/FYuZOiimKL7XYBntGttN1ulc+rO1anvFqtNB5RT227Xb273W7K
nRQ33n/29XodUpAEuqVbRt2u0gnlFep5db/Q5ypiKH4qeigP0VhGY7QYgifw
S+fzmVvjlx6DKsUQREjhQtl48oZUvBEziFP0mE6nGsERQBC8j+FCX7A+6hmX
y2W32xFAECql2WVZEi568jGAKBVhoAffaQBiRuVFURAu+qYAokGfftt5nh+P
R9vNAZp5TzDSNK2qivXVA9vv92YNLekHvKAujwTDER/TD6ofcJOuTF2f6uNI
MFyj9MM8vcuSGLijrussy3Rl6vq03RZ8SkHDPPh/OBxstwVRM5dimqZcir7Q
n8wEef5kGJ6uOtN5kfr6SINKRQ8zqLTdFkRBEUO9la46IobvTBFb0aMsS0pS
6In6Jl1jihgU50Oi6FEUhf6yu92O6IEOqT8ye1/4sj0Omrper6vVajKZbDYb
ogeeVNd1mqbqj4gYMbjdboob6iNYbop2dAmZHfl4WDU2yj0Wb+gs0EhVVUmS
aHhiuyGwRimHroHtdsuwBb90Pp+VYyyXS55rgCLGer2ezWYMW/AZDUx0kaiL
YWCCj9SVaMySZRldCf7B4XAwSanthsBRXCH4iN4E30RGih9vo9fNZsPoFY1Q
AYuZugxFDBb5oB0z48bDcVHZ7Xbz+Zx9dfAMDVs0vF2tVnQ9weNvjW6ZPogV
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
9ECZyWdx4/Gbbf8EAAAAAAAAAAAAgKP+DwAVnG4=
              "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
             Column[{
               Style["City B", "Title", 20], 
               Style["Latent       =", 
                RGBColor[0, 0, 1], Bold], 
               Style["Contagious   =", 
                RGBColor[1, 0, 0], Bold], 
               Style["Susceptible  =", 
                RGBColor[0., 0.5, 0.], Bold], 
               Style["Recovered    =", 
                RGBColor[0., 0.5, 0.], Bold]}]}}, 
           Spacings -> {{10, 2}, 1.8}], {200, 400}], ControlType -> 
         None}, {$CellContext`InfectedA$$, 1, ControlType -> 
         None}, {$CellContext`InfectedB$$, 1, ControlType -> 
         None}, {$CellContext`Days$$, 7, ControlType -> 
         None}, {$CellContext`Recovery$$, 3, ControlType -> 
         None}, {$CellContext`Incubation$$, 3, ControlType -> 
         None}, {$CellContext`Infectious$$, 10, ControlType -> 
         None}, {$CellContext`Transfer$$, 0, ControlType -> 
         None}, {$CellContext`w$$, 1, ControlType -> 
         None}, {$CellContext`TotalPop$$, 10, ControlType -> 
         None}, {$CellContext`i$$, 0, ControlType -> None}, {$CellContext`j$$,
          0, ControlType -> None}, {{$CellContext`w$$, 1, ""}, 1, 
         Dynamic[$CellContext`Days$$], 1, Appearance -> "Labeled", 
         ControlPlacement -> 1}, {{$CellContext`Days$$, 7, ""}, 1, 21, 1, 
         ControlType -> Slider, Appearance -> "Labeled", ControlPlacement -> 
         2}, {{$CellContext`TotalPop$$, 10, ""}, 1, 1000, 1, ControlType -> 
         Slider, Appearance -> "Labeled", ControlPlacement -> 
         3}, {{$CellContext`InfectedA$$, 1, ""}, 0, 
         Dynamic[$CellContext`TotalPop$$], 1, ControlType -> Slider, 
         Appearance -> "Labeled", ControlPlacement -> 
         4}, {{$CellContext`InfectedB$$, 1, ""}, 0, 
         Dynamic[$CellContext`TotalPop$$], 1, ControlType -> Slider, 
         Appearance -> "Labeled", ControlPlacement -> 
         5}, {{$CellContext`Transfer$$, 0, ""}, 0, 
         Dynamic[$CellContext`TotalPop$$], 1, ControlType -> Slider, 
         Appearance -> "Labeled", ControlPlacement -> 
         6}, {{$CellContext`Infectious$$, 0.1, ""}, 0, 1, 0.01, ControlType -> 
         Slider, Appearance -> "Labeled", ControlPlacement -> 
         7}, {{$CellContext`Incubation$$, 3, ""}, 1, 7, 1, ControlType -> 
         Slider, Appearance -> "Labeled", ControlPlacement -> 
         8}, {{$CellContext`Recovery$$, 3, ""}, 1, 7, 1, ControlType -> 
         Slider, Appearance -> "Labeled", ControlPlacement -> 9}, 
        Column[{
          Dynamic[
           Button[
            StringJoin[
             If[$CellContext`running$$, "reset", "run"], " simulation"], {
             If[
              Not[$CellContext`running$$], $CellContext`moving$$ = 
              True], $CellContext`running$$ = Not[$CellContext`running$$]}, 
            ImageSize -> 225, Alignment -> Center]], 
          Dynamic[
           If[$CellContext`running$$, 
            Column[{
              Column[{
                Spacer[{0, 10}], "day (morning)", 
                Manipulate`Place[1]}, Left], 
              Column[{
                Spacer[{0, 10}], 
                Row[{"duration of simulation = ", 
                  ToString[$CellContext`Days$$]}], 
                Spacer[{0, 15}], 
                Row[{"city population = ", 
                  ToString[$CellContext`TotalPop$$]}], 
                Spacer[{0, 15}], 
                Row[{"initial infected cases, City A = ", 
                  ToString[$CellContext`InfectedA$$]}], 
                Spacer[{0, 15}], 
                Row[{"initial infected cases, City B = ", 
                  ToString[$CellContext`InfectedB$$]}], 
                Spacer[{0, 15}], 
                Row[{"travellers/day = ", 
                  ToString[$CellContext`Transfer$$]}], 
                Spacer[{0, 15}], 
                Row[{"chance of infection on contact = ", 
                  ToString[$CellContext`Infectious$$]}], 
                Spacer[{0, 15}], 
                Row[{"latency before contagious state [days] = ", 
                  ToString[$CellContext`Incubation$$]}], 
                Spacer[{0, 15}], 
                Row[{"duration of contagious state [days] = ", 
                  ToString[$CellContext`Recovery$$]}]}, Right]}, Center], 
            ""]], 
          Dynamic[
           If[
            Not[$CellContext`running$$], 
            Column[{"duration of simulation [days]", 
              Manipulate`Place[2], "city population", 
              Manipulate`Place[3], "initial infected cases, City A", 
              Manipulate`Place[4], "initial infected cases, City B", 
              Manipulate`Place[5], "travellers/day", 
              Manipulate`Place[6], "chance of infection on contact", 
              Manipulate`Place[7], "latency before contagious state [days]", 
              Manipulate`Place[8], "duration of contagious state [days]", 
              Manipulate`Place[9]}, Left, 0.45], ""]]}, Center]}, 
      "Options" :> {
       ControlPlacement -> Left, ContentSize -> {340, 400}, FrameMargins -> 
        0}, "DefaultOptions" :> {}],
     ImageSizeCache->{701., {237., 242.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.5511223853053584`*^9, {3.5511227936357136`*^9, 3.5511228107176905`*^9}}]
}, Open  ]],

Cell[BoxData["hg"], "Input",
 CellChangeTimes->{{3.5510244867106256`*^9, 3.551024486728627*^9}}],

Cell[BoxData["."], "Input",
 CellChangeTimes->{3.551010299249585*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Column"}]], "Input",
 CellChangeTimes->{{3.5510238633619723`*^9, 3.551023866779168*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Column\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"expr\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"expr\\\
\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) is an object that \
formats with the \\!\\(\\*SubscriptBox[StyleBox[\\\"expr\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]\\) arranged in a column, with \
\\!\\(\\*SubscriptBox[StyleBox[\\\"expr\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]]\\) above \\!\\(\\*SubscriptBox[StyleBox[\\\"expr\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]\\), etc. \\n\\!\\(\\*RowBox[{\\\
\"Column\\\", \\\"[\\\", RowBox[{StyleBox[\\\"list\\\", \\\"TI\\\"], \
\\\",\\\", StyleBox[\\\"alignment\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) aligns \
each element horizontally in the specified way. \
\\n\\!\\(\\*RowBox[{\\\"Column\\\", \\\"[\\\", RowBox[{StyleBox[\\\"list\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"alignment\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"spacing\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) leaves the specified \
number of \\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\)-heights of spacing \
between successive elements.\"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Column"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.5510238672861967`*^9},
 CellTags->"Info3551009467-5291587"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Spacer"}]], "Input",
 CellChangeTimes->{{3.5510090015785537`*^9, 3.551009002703555*^9}, {
  3.5510200501388683`*^9, 3.5510200514479437`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\!\(\*RowBox[{\\\"Spacer\\\", \\\"[\\\", StyleBox[\\\"w\\\", \
\\\"TI\\\"], \\\"]\\\"}]\) displays as a spacer \!\(\*StyleBox[\\\"w\\\", \
\\\"TI\\\"]\) printer's points wide.\\n\!\(\*RowBox[{\\\"Spacer\\\", \
\\\"[\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"w\\\", \\\"TI\\\"], \
\\\",\\\", StyleBox[\\\"h\\\", \\\"TI\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\) \
displays as a spacer \!\(\*StyleBox[\\\"w\\\", \\\"TI\\\"]\) points wide and \
a total of \!\(\*StyleBox[\\\"h\\\", \\\"TI\\\"]\) points \
high.\\n\!\(\*RowBox[{\\\"Spacer\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"w\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"h\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"dh\\\", \\\"TI\\\"]}], \\\"}\\\"}], \
\\\"]\\\"}]\) makes the spacer extend \!\(\*StyleBox[\\\"dh\\\", \
\\\"TI\\\"]\) points below the baseline. \"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Spacer"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.5510200522789907`*^9},
 CellTags->"Info3551005651-5753690"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Random", "[", 
  RowBox[{"{", 
   RowBox[{"0", ",", "1"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.551010601769479*^9, 3.5510106068025208`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Random", "::", "randt"}], "MessageName"], ":", 
  " ", "\<\"Type specification \[NoBreak]\\!\\({0, 1}\\)\[NoBreak] in \
\[NoBreak]\\!\\(Random[\\(\\({0, 1}\\)\\)]\\)\[NoBreak] should be Real, \
Integer, or Complex. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Random/randt\\\", ButtonNote -> \
\\\"Random::randt\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.551010607329548*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Random", "[", 
  RowBox[{"Real", ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.551010611464554*^9, 3.551010613379556*^9}}],

Cell[BoxData["0.8175531415835758`"], "Output",
 CellChangeTimes->{3.5510106136395564`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Dividers"}]], "Input",
 CellChangeTimes->{{3.551021126534435*^9, 3.551021160005349*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"Dividers is an option for Grid and related constructs that \
specifies where and how to draw divider lines.\"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Dividers"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.5510211603613696`*^9},
 CellTags->"Info3551006760-3289220"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Manipulate"}]], "Input",
 CellChangeTimes->{{3.5510124649056797`*^9, 3.551012466745682*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Manipulate\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) generates \
a version of \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) with controls \
added to allow interactive manipulation of the value of \
\\!\\(\\*StyleBox[\\\"u\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"Manipulate\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]], \\\",\\\", StyleBox[\\\"du\\\", \
\\\"TI\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) allows the value of \
\\!\\(\\*StyleBox[\\\"u\\\", \\\"TI\\\"]\\) to vary between \
\\!\\(\\*SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]\\) and \\!\\(\\*SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]\\) in steps \\!\\(\\*StyleBox[\\\"du\\\", \
\\\"TI\\\"]\\). \\n\\!\\(\\*RowBox[{\\\"Manipulate\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \
\\\",\\\", SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"init\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", \
SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) takes the initial value of \
\\!\\(\\*StyleBox[\\\"u\\\", \\\"TI\\\"]\\) to be \
\\!\\(\\*SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"init\\\", \
\\\"TI\\\"]]\\). \\n\\!\\(\\*RowBox[{\\\"Manipulate\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \
\\\",\\\", SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"init\\\", \\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"u\\\
\", \\\"TI\\\"], StyleBox[\\\"lbl\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \
\\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \
\\\"]\\\"}]\\) labels the controls for \\!\\(\\*StyleBox[\\\"u\\\", \
\\\"TI\\\"]\\) with \\!\\(\\*SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"lbl\\\", \\\"TI\\\"]]\\). \
\\n\\!\\(\\*RowBox[{\\\"Manipulate\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) allows \
\\!\\(\\*StyleBox[\\\"u\\\", \\\"TI\\\"]\\) to take on discrete values \\!\\(\
\\*RowBox[{SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}]\\). \\n\\!\\(\\*RowBox[{\\\"Manipulate\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", RowBox[{\
\\\"{\\\", RowBox[{StyleBox[\\\"v\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\\) provides controls to \
manipulate each of the \\!\\(\\*RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \
\\\",\\\", StyleBox[\\\"v\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}]\\). \\n\\!\\(\\*RowBox[{\\\"Manipulate\\\", \\\
\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"c\\\", \\\"TI\\\"], StyleBox[\\\"u\\\", \
\\\"TI\\\"]], \\\"->\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"u\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \
\\\"}\\\"}]}], \\\",\\\", RowBox[{SubscriptBox[StyleBox[\\\"c\\\", \
\\\"TI\\\"], StyleBox[\\\"v\\\", \\\"TI\\\"]], \\\"->\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"v\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\",\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\\) links the \
controls to the specified controllers on an external device.\"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Manipulate"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.551012467315683*^9},
 CellTags->"Info3550998067-6068237"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Row"}]], "Input",
 CellChangeTimes->{{3.5510127992563295`*^9, 3.551012800776332*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Row\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"expr\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"expr\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) is an object that formats with the \
\\!\\(\\*SubscriptBox[StyleBox[\\\"expr\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \
\\\"TI\\\"]]\\) arranged in a row, potentially extending over several lines. \
\\n\\!\\(\\*RowBox[{\\\"Row\\\", \\\"[\\\", RowBox[{StyleBox[\\\"list\\\", \\\
\"TI\\\"], \\\",\\\", StyleBox[\\\"s\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
inserts \\!\\(\\*StyleBox[\\\"s\\\", \\\"TI\\\"]\\) as a separator between \
successive elements. \"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Row"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.5510128013763323`*^9},
 CellTags->"Info3550998401-9493809"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Column"}]], "Input",
 CellChangeTimes->{{3.55102043846908*^9, 3.551020440151176*^9}, {
  3.5510212622351966`*^9, 3.5510212654843826`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\!\(\*RowBox[{\\\"Column\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"expr\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"expr\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\) is an object that formats with the \!\
\(\*SubscriptBox[StyleBox[\\\"expr\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \
\\\"TI\\\"]]\) arranged in a column, with \
\!\(\*SubscriptBox[StyleBox[\\\"expr\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \\\
\"TR\\\"]]\) above \!\(\*SubscriptBox[StyleBox[\\\"expr\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]\), etc. \\n\!\(\*RowBox[{\\\"Column\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\
\"alignment\\\", \\\"TI\\\"]}], \\\"]\\\"}]\) aligns each element \
horizontally in the specified way. \\n\!\(\*RowBox[{\\\"Column\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\
\"alignment\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"spacing\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\) leaves the specified number of \!\(\*StyleBox[\\\
\"x\\\", \\\"TI\\\"]\)-heights of spacing between successive elements.\"\>", 
   "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Column"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.551021266162421*^9},
 CellTags->"Info3551006866-3122316"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Text", "[", 
  RowBox[{
   RowBox[{"\"\<abalksdg;vlakdjg;adjg\>\"", "/", "n"}], 
   "\"\<akjslkfja;sdlfjasdf\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.551020459138262*^9, 3.551020479020399*^9}}],

Cell[BoxData[
 InterpretationBox[Cell[BoxData[
   FractionBox[
    RowBox[{"\<\"abalksdg;vlakdjg;adjg\"\>", 
     " ", "\<\"akjslkfja;sdlfjasdf\"\>"}], "n"]], "Text", "TR"],
  Text["abalksdg;vlakdjg;adjg" 
   "akjslkfja;sdlfjasdf"/$CellContext`n]]], "Output",
 CellChangeTimes->{3.5510204794644246`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Column", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "5", ",", "6"}], "}"}]}], "}"}], "]"}], ",", 
    RowBox[{"Column", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "5", ",", "6"}], "}"}]}], "}"}], "]"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5510218912311735`*^9, 3.5510219002436886`*^9}, {
  3.5510220306361465`*^9, 3.5510221009141665`*^9}}],

Cell[BoxData[
 TemplateBox[{TagBox[
    GridBox[{{
       RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3"}], "}"}]}, {
       RowBox[{"{", 
         RowBox[{"4", ",", "5", ",", "6"}], "}"}]}}, 
     GridBoxAlignment -> {"Columns" -> {{Left}}}, 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],TagBox[
    GridBox[{{
       RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3"}], "}"}]}, {
       RowBox[{"{", 
         RowBox[{"4", ",", "5", ",", "6"}], "}"}]}}, 
     GridBoxAlignment -> {"Columns" -> {{Left}}}, 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]},
  "Row",
  DisplayFunction->(RowBox[{#, "\[InvisibleSpace]", #2}]& ),
  InterpretationFunction->(RowBox[{"Row", "[", 
     RowBox[{"{", 
       RowBox[{#, ",", #2}], "}"}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.5510219006487117`*^9, {3.5510220393216434`*^9, 3.551022101402194*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Column", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Column", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "5", ",", "6"}], "}"}]}], "}"}], ",", 
      RowBox[{"Alignment", "\[Rule]", " ", "Right"}]}], "]"}], ",", 
    RowBox[{"Column", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "5", ",", "6"}], "}"}]}], "}"}], ",", 
      RowBox[{"Alignment", "\[Rule]", " ", "Left"}]}], "]"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.551022128513745*^9, 3.551022254641959*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", "3"}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{"4", ",", "5", ",", "6"}], "}"}]}
       },
       GridBoxAlignment->{"Columns" -> {{Right}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]},
    {
     TagBox[GridBox[{
        {
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", "3"}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{"4", ",", "5", ",", "6"}], "}"}]}
       },
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{{3.5510221435636053`*^9, 3.5510221755464354`*^9}, {
  3.551022207686273*^9, 3.5510222550629835`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Button"}]], "Input",
 CellChangeTimes->{{3.5510227533324823`*^9, 3.5510227557326193`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Button\\\", \\\"[\\\", RowBox[{StyleBox[\
\\\"label\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"action\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) represents a button that is labeled with \\!\\(\
\\*StyleBox[\\\"label\\\", \\\"TI\\\"]\\), and evaluates \\!\\(\\*StyleBox[\\\
\"action\\\", \\\"TI\\\"]\\) whenever it is clicked. \"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Button"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.5510227562906513`*^9},
 CellTags->"Info3551008356-7809542"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Column", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
    "\"\<duration of simulation [days]\>\"", ",", "\[IndentingNewLine]", 
     RowBox[{"Control", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Days", ",", "7", ",", "\"\<\>\""}], "}"}], ",", "1", ",", 
        "21", ",", "1", ",", "Slider"}], "}"}], "]"}], ",", 
     "\[IndentingNewLine]", "\"\<city population\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Control", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"TotalPop", ",", "10", ",", "\"\<\>\""}], "}"}], ",", "1", 
        ",", "100", ",", "1", ",", "Slider"}], "}"}], "]"}], ",", 
     "\[IndentingNewLine]", "\"\<initial infected cases, City A\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Control", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"InfectedA", ",", "1", ",", "\"\<\>\""}], "}"}], ",", "0", 
        ",", "TotalPop", ",", "1", ",", "Slider"}], "}"}], "]"}], ",", 
     "\[IndentingNewLine]", "\"\<initial infected cases, City B\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Control", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"InfectedB", ",", "1", ",", "\"\<\>\""}], "}"}], ",", "0", 
        ",", "TotalPop", ",", "1", ",", "Slider"}], "}"}], "]"}], ",", 
     "\[IndentingNewLine]", "\"\<travellers/day\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Control", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Transfer", ",", "0", ",", "\"\<\>\""}], "}"}], ",", "0", 
        ",", "TotalPop", ",", "1", ",", "Slider"}], "}"}], "]"}], ",", 
     "\[IndentingNewLine]", "\"\<chance of infection on contact\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Control", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Infectious", ",", ".1", ",", "\"\<\>\""}], "}"}], ",", "0", 
        ",", "1", ",", ".01", ",", "Slider"}], "}"}], "]"}], ",", 
     "\[IndentingNewLine]", "\"\<latency before contagious state [days]\>\"", 
     ",", "\[IndentingNewLine]", 
     RowBox[{"Control", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Incubation", ",", "3", ",", "\"\<\>\""}], "}"}], ",", "1", 
        ",", "7", ",", "1", ",", "Slider"}], "}"}], "]"}], ",", 
     "\[IndentingNewLine]", "\"\<duration of contagious state [days]\>\"", 
     ",", "\[IndentingNewLine]", 
     RowBox[{"Control", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Recovery", ",", "3", ",", "\"\<\>\""}], "}"}], ",", "1", 
        ",", "7", ",", "1", ",", "Slider"}], "}"}], "]"}]}], 
    "\[IndentingNewLine]", "}"}], ",", "Left", ",", ".45", ",", 
   RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5510240545599084`*^9, 3.551024074831068*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"duration of simulation [days]\"\>"},
    {
     TagBox[
      DynamicBox[ToBoxes[
        Manipulate`Control[{{$CellContext`Days, 7, ""}, 1, 21, 1, Slider}, 
         Automatic], StandardForm],
       ImageSizeCache->{300.399998188019, {6., 14.}}],
      "Control"]},
    {"\<\"city population\"\>"},
    {
     TagBox[
      DynamicBox[ToBoxes[
        Manipulate`Control[{{$CellContext`TotalPop, 10, ""}, 1, 100, 1, 
          Slider}, Automatic], StandardForm],
       ImageSizeCache->{300.399998188019, {6., 14.}}],
      "Control"]},
    {"\<\"initial infected cases, City A\"\>"},
    {
     TagBox[
      DynamicBox[ToBoxes[
        Manipulate`Control[{{$CellContext`InfectedA, 1, ""}, 
          0, $CellContext`TotalPop, 1, Slider}, Automatic], StandardForm],
       ImageSizeCache->{300.399998188019, {6., 14.}}],
      "Control"]},
    {"\<\"initial infected cases, City B\"\>"},
    {
     TagBox[
      DynamicBox[ToBoxes[
        Manipulate`Control[{{$CellContext`InfectedB, 1, ""}, 
          0, $CellContext`TotalPop, 1, Slider}, Automatic], StandardForm],
       ImageSizeCache->{300.399998188019, {6., 14.}}],
      "Control"]},
    {"\<\"travellers/day\"\>"},
    {
     TagBox[
      DynamicBox[ToBoxes[
        Manipulate`Control[{{$CellContext`Transfer, 0, ""}, 
          0, $CellContext`TotalPop, 1, Slider}, Automatic], StandardForm],
       ImageSizeCache->{300.399998188019, {6., 14.}}],
      "Control"]},
    {"\<\"chance of infection on contact\"\>"},
    {
     TagBox[
      DynamicBox[ToBoxes[
        Manipulate`Control[{{$CellContext`Infectious, 0.1, ""}, 0, 1, 0.01, 
          Slider}, Automatic], StandardForm],
       ImageSizeCache->{300.399998188019, {6., 14.}}],
      "Control"]},
    {"\<\"latency before contagious state [days]\"\>"},
    {
     TagBox[
      DynamicBox[ToBoxes[
        Manipulate`Control[{{$CellContext`Incubation, 3, ""}, 1, 7, 1, 
          Slider}, Automatic], StandardForm],
       ImageSizeCache->{300.399998188019, {6., 14.}}],
      "Control"]},
    {"\<\"duration of contagious state [days]\"\>"},
    {
     TagBox[
      DynamicBox[ToBoxes[
        Manipulate`Control[{{$CellContext`Recovery, 3, ""}, 1, 7, 1, Slider}, 
         Automatic], StandardForm],
       ImageSizeCache->{300.399998188019, {6., 14.}}],
      "Control"]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{0.45}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.5510239972456303`*^9, 3.551024075472104*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Grid"}]], "Input",
 CellChangeTimes->{{3.5510247486766095`*^9, 3.551024749544659*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Grid\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"expr\\\", \\\"TI\
\\\"], StyleBox[\\\"11\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\
\"expr\\\", \\\"TI\\\"], StyleBox[\\\"12\\\", \\\"TR\\\"]], \\\",\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", RowBox[{\
\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"expr\\\", \\\"TI\\\"], StyleBox[\
\\\"21\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"expr\\\", \
\\\"TI\\\"], StyleBox[\\\"22\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) is an object that \
formats with the \\!\\(\\*SubscriptBox[StyleBox[\\\"expr\\\", \\\"TI\\\"], \
StyleBox[\\\"ij\\\", \\\"TI\\\"]]\\) arranged in a two-dimensional grid. \
\"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Grid"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.5510247500886903`*^9},
 CellTags->"Info3551010349-6889389"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Pops"], "Input",
 CellChangeTimes->{{3.5510248766709304`*^9, 3.5510248769859486`*^9}}],

Cell[BoxData["Pops"], "Output",
 CellChangeTimes->{3.5510248774209733`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{"x", ",", 
     RowBox[{"{", "4", "}"}], ",", 
     RowBox[{"{", "7", "}"}]}], "]"}], ",", 
   RowBox[{"Spacings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"10", ",", "20"}], "}"}], ",", "0"}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5510249305610127`*^9, 3.5510249501221313`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"x", "x", "x", "x", "x", "x", "x"},
    {"x", "x", "x", "x", "x", "x", "x"},
    {"x", "x", "x", "x", "x", "x", "x"},
    {"x", "x", "x", "x", "x", "x", "x"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {10, 20}, "Rows" -> {{0}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.551024928496895*^9, 3.55102495061016*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<\>\"", ",", "2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<\>\"", ",", "4", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"Spacings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"10", ",", "100"}], "}"}], ",", "0"}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.551024963192879*^9, 3.5510250025551305`*^9}, {
  3.5510251028868694`*^9, 3.5510251282333193`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"\"\>", "2", "3"},
    {"\<\"\"\>", "4", "5"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {10, 100}, "Rows" -> {{0}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.5510249738764906`*^9, 3.551025003018157*^9}, {
  3.5510251050899954`*^9, 3.5510251286773443`*^9}}]
}, Open  ]]
},
WindowSize->{1350, 633},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
ShowSelection->True,
Magnification->1.100000023841858,
FrontEndVersion->"8.0 for Microsoft Windows (64-bit) (October 6, 2011)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info3551009467-5291587"->{
  Cell[427937, 7514, 1582, 26, 88, "Print",
   CellTags->"Info3551009467-5291587"]},
 "Info3551005651-5753690"->{
  Cell[429729, 7550, 1137, 20, 88, "Print",
   CellTags->"Info3551005651-5753690"]},
 "Info3551006760-3289220"->{
  Cell[432088, 7613, 425, 11, 47, "Print",
   CellTags->"Info3551006760-3289220"]},
 "Info3550998067-6068237"->{
  Cell[432674, 7633, 5338, 81, 168, "Print",
   CellTags->"Info3550998067-6068237"]},
 "Info3550998401-9493809"->{
  Cell[438166, 7723, 1094, 19, 68, "Print",
   CellTags->"Info3550998401-9493809"]},
 "Info3551006866-3122316"->{
  Cell[439467, 7752, 1554, 26, 96, "Print",
   CellTags->"Info3551006866-3122316"]},
 "Info3551008356-7809542"->{
  Cell[445260, 7918, 656, 14, 51, "Print",
   CellTags->"Info3551008356-7809542"]},
 "Info3551010349-6889389"->{
  Cell[451757, 8090, 1215, 21, 55, "Print",
   CellTags->"Info3551010349-6889389"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info3551009467-5291587", 455444, 8199},
 {"Info3551005651-5753690", 455558, 8202},
 {"Info3551006760-3289220", 455672, 8205},
 {"Info3550998067-6068237", 455785, 8208},
 {"Info3550998401-9493809", 455900, 8211},
 {"Info3551006866-3122316", 456014, 8214},
 {"Info3551008356-7809542", 456128, 8217},
 {"Info3551010349-6889389", 456241, 8220}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 921, 18, 93, "Input"],
Cell[CellGroupData[{
Cell[1503, 42, 61835, 1294, 4873, "Input"],
Cell[63341, 1338, 364268, 6161, 497, "Output"]
}, Open  ]],
Cell[427624, 7502, 96, 1, 32, "Input"],
Cell[427723, 7505, 69, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[427817, 7510, 117, 2, 32, "Input"],
Cell[427937, 7514, 1582, 26, 88, "Print",
 CellTags->"Info3551009467-5291587"]
}, Open  ]],
Cell[CellGroupData[{
Cell[429556, 7545, 170, 3, 32, "Input"],
Cell[429729, 7550, 1137, 20, 88, "Print",
 CellTags->"Info3551005651-5753690"]
}, Open  ]],
Cell[CellGroupData[{
Cell[430903, 7575, 174, 4, 32, "Input"],
Cell[431080, 7581, 521, 10, 23, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[431638, 7596, 200, 5, 32, "Input"],
Cell[431841, 7603, 90, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[431968, 7609, 117, 2, 32, "Input"],
Cell[432088, 7613, 425, 11, 47, "Print",
 CellTags->"Info3551006760-3289220"]
}, Open  ]],
Cell[CellGroupData[{
Cell[432550, 7629, 121, 2, 32, "Input"],
Cell[432674, 7633, 5338, 81, 168, "Print",
 CellTags->"Info3550998067-6068237"]
}, Open  ]],
Cell[CellGroupData[{
Cell[438049, 7719, 114, 2, 32, "Input"],
Cell[438166, 7723, 1094, 19, 68, "Print",
 CellTags->"Info3550998401-9493809"]
}, Open  ]],
Cell[CellGroupData[{
Cell[439297, 7747, 167, 3, 35, "Input"],
Cell[439467, 7752, 1554, 26, 96, "Print",
 CellTags->"Info3551006866-3122316"]
}, Open  ]],
Cell[CellGroupData[{
Cell[441058, 7783, 223, 5, 35, "Input"],
Cell[441284, 7790, 303, 7, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[441624, 7802, 673, 20, 35, "Input"],
Cell[442300, 7824, 961, 24, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[443298, 7853, 782, 23, 35, "Input"],
Cell[444083, 7878, 1018, 31, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[445138, 7914, 119, 2, 35, "Input"],
Cell[445260, 7918, 656, 14, 51, "Print",
 CellTags->"Info3551008356-7809542"]
}, Open  ]],
Cell[CellGroupData[{
Cell[445953, 7937, 2945, 70, 410, "Input"],
Cell[448901, 8009, 2701, 72, 391, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[451639, 8086, 115, 2, 35, "Input"],
Cell[451757, 8090, 1215, 21, 55, "Print",
 CellTags->"Info3551010349-6889389"]
}, Open  ]],
Cell[CellGroupData[{
Cell[453009, 8116, 100, 1, 35, "Input"],
Cell[453112, 8119, 75, 1, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[453224, 8125, 418, 13, 35, "Input"],
Cell[453645, 8140, 447, 11, 63, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[454129, 8156, 539, 16, 35, "Input"],
Cell[454671, 8174, 396, 10, 41, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
